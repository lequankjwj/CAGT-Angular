{"version":3,"file":"ng2-currency-mask.js","sources":["ng:/ng2-currency-mask/lib/currency-mask.config.ts","ng:/ng2-currency-mask/lib/input.manager.ts","ng:/ng2-currency-mask/lib/input.service.ts","ng:/ng2-currency-mask/lib/input.handler.ts","ng:/ng2-currency-mask/lib/currency-mask.directive.ts","ng:/ng2-currency-mask/lib/currency-mask.module.ts","ng:/ng2-currency-mask/public-api.ts","ng:/ng2-currency-mask/ng2-currency-mask.ts"],"names":[],"mappings":";;;;;;IAaW,oBAAoB,GAAG,IAAI,cAAc,CAAqB,sBAAsB;AAAG;AAAC,MCbtF,YAAY;AACzB,IAGI,YAAoB,gBAAqB;AAC7C,QADwB,qBAAgB,GAAhB,gBAAgB,CAAK;AAAC,KACzC;AACL,IACI,WAAW,CAAC,QAAgB;AAAI,QAC5B,IAAI,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE;AACrD,YAAY,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;AAC1C,YAAY,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AACxE,SAAS;AAAC,aAAK,IAAI,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE;AAC1D,YAAY,IAAI,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC;AACpE,YAAY,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACrC,YAAY,SAAS,CAAC,OAAO,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;AACrD,YAAY,SAAS,CAAC,SAAS,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;AACvD,YAAY,SAAS,CAAC,MAAM,EAAE,CAAC;AAC/B,SAAS;AACT,KAAK;AACL,IACI,oBAAoB,CAAC,WAAmB,EAAE,SAAiB,EAAE,cAAsB;AAAI,QACnF,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;AACpC,QAAQ,IAAI,SAAS,GAAG,WAAW,CAAC,MAAM,CAAC;AAC3C,QAAQ,cAAc,GAAG,cAAc,IAAI,SAAS,GAAG,SAAS,CAAC,CAAC;AAClE,QAAQ,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;AACzC,KAAK;AACL,IACI,IAAI,mBAAmB;AAAK,QACxB,IAAI,sBAAsB,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC;AACxI,QAAQ,IAAI,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC;AAChE,QAAQ,IAAI,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC;AAC5D,QAAQ,IAAI,kBAAkB,GAAG,CAAC,cAAc,IAAI,YAAY,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,SAAS,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,GAAG,KAAK,CAAC;AACpK,QAAQ,IAAI,aAAa,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;AACjF,QAAQ,OAAO,sBAAsB,IAAI,kBAAkB,IAAI,aAAa,CAAC;AAC7E,KAAK;AACL,IACI,IAAI,cAAc;AAAK,QACnB,IAAI,cAAc,GAAG,CAAC,CAAC;AAC/B,QAAQ,IAAI,YAAY,GAAG,CAAC,CAAC;AAC7B,QACQ,IAAI,OAAO,IAAI,CAAC,gBAAgB,CAAC,cAAc,IAAI,QAAQ,IAAI,OAAO,IAAI,CAAC,gBAAgB,CAAC,YAAY,IAAI,QAAQ,EAAE;AAC9H,YAAY,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC;AAClE,YAAY,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;AAC9D,SAAS;AAAC,aAAK;AACf,YAAY,IAAI,KAAK,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC,UAAU,CAAC;AAC3D,YACY,IAAI,KAAK,IAAI,KAAK,CAAC,UAAU,IAAI,IAAI,CAAC,gBAAgB,EAAE;AACpE,gBAAgB,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,MAAM,CAAC;AAChE,gBAAgB,IAAI,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AACzF,gBAAgB,IAAI,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC;AACzE,gBAAgB,IAAI,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC;AACvE,gBAAgB,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACzC,gBACgB,IAAI,UAAU,CAAC,gBAAgB,CAAC,YAAY,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;AAC9E,oBAAoB,cAAc,GAAG,YAAY,GAAG,MAAM,CAAC;AAC3D,iBAAiB;AAAC,qBAAK;AACvB,oBAAoB,cAAc,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC;AACjF,oBAAoB,cAAc,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;AACtG,oBACoB,IAAI,UAAU,CAAC,gBAAgB,CAAC,UAAU,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;AAChF,wBAAwB,YAAY,GAAG,MAAM,CAAC;AAC9C,qBAAqB;AAAC,yBAAK;AAC3B,wBAAwB,YAAY,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC;AACjF,wBAAwB,YAAY,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;AACtG,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,QACQ,OAAO;AACf,YAAY,cAAc,EAAE,cAAc;AAC1C,YAAY,YAAY,EAAE,YAAY;AACtC,SAAS,CAAC;AACV,KAAK;AACL,IACI,IAAI,QAAQ;AAAK,QACb,OAAO,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;AACpE,KAAK;AACL,IACI,IAAI,QAAQ,CAAC,KAAa;AAC9B,QAAQ,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;AACrC,QACQ,IAAI,IAAI,CAAC,gBAAgB,EAAE;AACnC,YAAY,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,KAAK,CAAC;AAChD,SAAS;AACT,KAAK;AACL,IACI,IAAI,cAAc;AAAK,QACnB,OAAO,IAAI,CAAC,eAAe,CAAC;AACpC,KAAK;AACL;AAAE;AAAC,MCxFU,YAAY;AACzB,IAGI,YAAoB,gBAAqB,EAAU,OAAY;AACnE,QADwB,qBAAgB,GAAhB,gBAAgB,CAAK;AAAC,QAAS,YAAO,GAAP,OAAO,CAAK;AAAC,QAC5D,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,gBAAgB,CAAC,CAAC;AAC/D,KAAK;AACL,IACI,SAAS,CAAC,OAAe;AAAI,QACzB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AAC5B,YAAY,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACvD,SAAS;AACT,QACQ,IAAI,OAAO,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AACnD,QAAQ,IAAI,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC;AAChE,QAAQ,IAAI,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC;AAC5D,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,cAAc,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC3I,QAAQ,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;AAClD,KAAK;AACL,IACI,SAAS,CAAC,QAAiB,EAAE,QAAgB;AAAI,QAC7C,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;AAC5F,QAAQ,QAAQ,GAAG,QAAQ,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,QAAQ,CAAC;AACjF,QAAQ,IAAI,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;AAC1D,QACQ,IAAI,CAAC,WAAW,EAAE;AAC1B,YAAY,OAAO,EAAE,CAAC;AACtB,SAAS;AACT,QACQ,IAAI,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,uBAAuB,EAAE,SAAS,CAAC,CAAC;AAC/I,QACQ,IAAI,WAAW,IAAI,EAAE,EAAE;AAC/B,YAAY,WAAW,GAAG,GAAG,CAAC;AAC9B,SAAS;AACT,QACQ,IAAI,WAAW,GAAG,WAAW,CAAC;AACtC,QAAQ,IAAI,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC;AAC5E,QACQ,IAAI,SAAS,GAAG,CAAC,EAAE;AAC3B,YAAY,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,GAAG,WAAW,CAAC,MAAM,CAAC,GAAG,WAAW,CAAC;AACnF,YAAY,WAAW,IAAI,OAAO,GAAG,WAAW,CAAC;AACjD,SAAS;AACT,QACQ,IAAI,MAAM,GAAG,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,WAAW,IAAI,EAAE,CAAC,CAAC;AACrG,QAAQ,IAAI,QAAQ,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,aAAa,IAAI,CAAC,MAAM,IAAI,GAAG,GAAG,EAAE,CAAC;AAC3F,QAAQ,OAAO,QAAQ,GAAG,MAAM,GAAG,WAAW,GAAG,MAAM,CAAC;AACxD,KAAK;AACL,IACI,SAAS,CAAC,QAAgB;AAAI,QAC1B,IAAI,QAAQ,IAAI,IAAI,IAAI,QAAQ,IAAI,EAAE,EAAE;AAChD,YAAY,OAAO,IAAI,CAAC;AACxB,SAAS;AACT,QACQ,IAAI,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AAC/F,QACQ,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;AACpC,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;AACtF,SAAS;AACT,QACQ,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;AAClC,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;AAC7D,SAAS;AACT,QACQ,OAAO,UAAU,CAAC,KAAK,CAAC,CAAC;AACjC,KAAK;AACL,IACI,gBAAgB;AAAK,QACjB,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE;AACpH,YAAY,IAAI,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC;AACpE,YAAY,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;AAChD,YAAY,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;AACtD,SAAS;AACT,KAAK;AACL,IACI,gBAAgB;AAAK,QACjB,IAAI,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC;AAChE,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;AACvD,QAAQ,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;AAClD,KAAK;AACL,IACI,iBAAiB,CAAC,kBAA4B;AAAI,QAC9C,IAAI,qBAAqB,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC;AACvE;AACwM,QAChM,IAAI,qBAAqB,GAAG,IAAI,CAAC,mCAAmC,EAAE,IAAI,kBAAkB,EAAE;AACtG,YAAY,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,mCAAmC,EAAE,CAAC,CAAC;AACtF;AACA,SAAS;AAAC,aAAK,IAAI,qBAAqB,GAAG,IAAI,CAAC,qCAAqC,EAAE,EAAE;AACzF,YAAY,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,qCAAqC,EAAE,CAAC,CAAC;AACxF,SAAS;AACT,KAAK;AACL,IACI,mCAAmC;AAAK,QACpC,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;AACjE,KAAK;AACL,IACI,qCAAqC;AAAK,QACtC,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;AAClH,KAAK;AACL,IACI,YAAY,CAAC,OAAe;AAAI,QAC5B,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;AAClD,QAAQ,IAAI,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC;AAC5D,QAAQ,IAAI,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC;AAChE,QACQ,IAAI,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE;AAChF,YAAY,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;AAC7E,YAAY,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;AAC/E,SAAS;AACT;AAC+B,QACvB,IAAI,YAAY,IAAI,cAAc,EAAE;AAC5C;AACA,YAAY,IAAI,CAAC,OAAO,IAAI,EAAE,IAAI,OAAO,IAAI,KAAK,KAAK,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAc,EAAE,YAAY,GAAG,CAAC,CAAC,CAAC,EAAE;AAChI,gBAAgB,YAAY,GAAG,YAAY,GAAG,CAAC,CAAC;AAChD,aAAa;AACb;AACiF,YACrE,IAAI,CAAC,OAAO,IAAI,EAAE,IAAI,OAAO,IAAI,KAAK,MAAM,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAc,EAAE,YAAY,GAAG,CAAC,CAAC,IAAI,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAc,EAAE,YAAY,GAAG,CAAC,CAAC,IAAI,SAAS,CAAC,EAAE;AACzM,gBAAgB,YAAY,GAAG,YAAY,GAAG,CAAC,CAAC;AAChD,gBAAgB,cAAc,GAAG,cAAc,GAAG,CAAC,CAAC;AACpD,aAAa;AACb;AAC4D,YAChD,IAAI,OAAO,IAAI,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAc,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC,EAAE;AACzG,gBAAgB,cAAc,GAAG,cAAc,GAAG,CAAC,CAAC;AACpD,aAAa;AACb;AACoF,YACxE,IAAI,OAAO,IAAI,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAc,GAAG,CAAC,EAAE,YAAY,CAAC,IAAI,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAc,GAAG,CAAC,EAAE,YAAY,CAAC,IAAI,SAAS,CAAC,EAAE;AAClL,gBAAgB,cAAc,GAAG,cAAc,GAAG,CAAC,CAAC;AACpD,gBAAgB,YAAY,GAAG,YAAY,GAAG,CAAC,CAAC;AAChD,aAAa;AACb,SAAS;AACT,QACQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,cAAc,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACjI,QAAQ,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;AAC9C,KAAK;AACL,IACI,gBAAgB,CAAC,cAAuB;AAAI,QACxC,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC;AACrE,QAAQ,cAAc,GAAG,cAAc,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,cAAc,CAAC;AAC7F,QAAQ,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;AAClG,KAAK;AACL,IACI,aAAa,CAAC,OAAY;AAAI,QAC1B,IAAI,KAAK,GAAW,IAAI,CAAC,KAAK,CAAC;AACvC,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC/B,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,KAAK;AACL,IACI,IAAI,mBAAmB;AAAK,QACxB,OAAO,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC;AACrD,KAAK;AACL,IACI,IAAI,cAAc;AAAK,QACnB,OAAO,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC;AAChD,KAAK;AACL,IACI,IAAI,QAAQ;AAAK,QACb,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;AAC1C,KAAK;AACL,IACI,IAAI,QAAQ,CAAC,KAAa;AAC9B,QAAQ,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC3C,KAAK;AACL,IACI,IAAI,cAAc;AAAK,QACnB,OAAO,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC;AAChD,KAAK;AACL,IACI,IAAI,KAAK;AAAK,QACV,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC7C,KAAK;AACL,IACI,IAAI,KAAK,CAAC,KAAa;AAC3B,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC;AACzD,KAAK;AACL;AAAE;AAAC,MClLU,YAAY;AACzB,IAMI,YAAY,gBAAkC,EAAE,OAAY;AAChE,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;AACxE,QAAQ,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;AACjD,KAAK;AACL,IACI,WAAW,CAAC,KAAU,EAAE,aAAsB;AAAI,QAC9C,IAAI,oBAAoB,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;AAC7I;AACkL,QAC1K,IAAI,oBAAoB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;AAC1E,YAAY,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC;AAC/D,SAAS;AACT,KAAK;AACL,IACI,SAAS,CAAC,KAAU;AAAI,QACpB,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;AAC/B,YAAY,OAAO;AACnB,SAAS;AACT,QACQ,UAAU,CAAC;AACnB,YAAY,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;AACjD,YAAY,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AACnD,YAAY,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AACxD,SAAS,EAAE,CAAC,CAAC,CAAC;AACd,KAAK;AACL,IACI,WAAW,CAAC,KAAU;AAAI,QACtB,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;AAC/B,YAAY,OAAO;AACnB,SAAS;AACT,QACQ,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;AACvG,QAAQ,IAAI,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;AAC/D,QAAQ,IAAI,oBAAoB,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,YAAY,CAAC;AACjF,QAAQ,IAAI,gCAAgC,GAAG,IAAI,CAAC,YAAY,CAAC,mCAAmC,EAAE,CAAC;AACvG,QAAQ,IAAI,oBAAoB,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,MAAM,CAAC;AAC3E,QAAQ,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC;AACtE,QACQ,IAAI,CAAC,oBAAoB,IAAI,gCAAgC,IAAI,IAAI,CAAC,GAAG,CAAC,cAAc,GAAG,oBAAoB,CAAC,IAAI,CAAC,KAAK,oBAAoB,IAAI,CAAC,EAAE;AAC7J,YAAY,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;AAC1C,YAAY,OAAO;AACnB,SAAS;AACT,QACQ,IAAI,cAAc,GAAG,oBAAoB,EAAE;AACnD,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,CAAC,EAAE;AAC9C,gBAAgB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AAClD,aAAa;AAAC,iBAAK;AACnB,gBAAgB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACpC,aAAa;AACb,SAAS;AACT,QACQ,IAAI,cAAc,GAAG,oBAAoB,EAAE;AACnD,YAAY,QAAQ,OAAO;AAC3B,gBAAgB,KAAK,EAAE;AACvB,oBAAoB,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;AACzD,oBAAoB,MAAM;AAC1B,gBAAgB,KAAK,EAAE;AACvB,oBAAoB,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;AACzD,oBAAoB,MAAM;AAC1B,gBAAgB;AAChB,oBAAoB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,mBAAmB,KAAK,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE;AACxJ,wBAAwB,OAAO;AAC/B,qBAAqB;AACrB,oBACoB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AACzD,aAAa;AACb,SAAS;AACT,QACQ,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;AACtC,QAAQ,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AACpD,KAAK;AACL,IACI,aAAa,CAAC,KAAU;AAAI,QACxB,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;AAC/B,YAAY,OAAO;AACnB,SAAS;AACT,QACQ,IAAI,OAAO,GAAG,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC;AACrE,QACQ,IAAI,OAAO,IAAI,CAAC,IAAI,OAAO,IAAI,EAAE,IAAI,OAAO,IAAI,KAAK,EAAE;AAC/D,YAAY,KAAK,CAAC,cAAc,EAAE,CAAC;AACnC,YAAY,IAAI,oBAAoB,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;AACjJ,YACY,IAAI,oBAAoB,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,CAAC,EAAE;AAC3G,gBAAgB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACpC,gBAAgB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AAC5D,aAAa;AACb,YACY,IAAI,oBAAoB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;AAC9E,gBAAgB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AACxD,gBAAgB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AAC5D,aAAa;AACb,YACY,IAAI,CAAC,OAAO,KAAK,CAAC,IAAI,OAAO,KAAK,EAAE,KAAK,oBAAoB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;AACnH,gBAAgB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AACxD,gBAAgB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AAC5D,aAAa;AACb,SAAS;AACT,KAAK;AACL,IACI,cAAc,CAAC,KAAU;AAAI,QACzB,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;AAC/B,YAAY,OAAO;AACnB,SAAS;AACT,QACQ,IAAI,OAAO,GAAG,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC;AACrE,QACQ,IAAI,OAAO,IAAI,SAAS,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,EAAE;AAC9G,YAAY,OAAO;AACnB,SAAS;AACT,QACQ,QAAQ,OAAO;AACvB,YAAY,KAAK,EAAE;AACnB,gBAAgB,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;AACrD,gBAAgB,MAAM;AACtB,YAAY,KAAK,EAAE;AACnB,gBAAgB,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;AACrD,gBAAgB,MAAM;AACtB,YAAY;AACZ,gBAAgB,IAAI,IAAI,CAAC,YAAY,CAAC,mBAAmB,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE;AACpJ,oBAAoB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AACzD,iBAAiB;AACjB,SAAS;AACT,QACQ,KAAK,CAAC,cAAc,EAAE,CAAC;AAC/B,QAAQ,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AACpD,KAAK;AACL,IACI,WAAW,CAAC,KAAU;AAAI,QACtB,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC;AAC9C,KAAK;AACL,IACI,WAAW,CAAC,KAAU;AAAI,QACtB,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;AAC/B,YAAY,OAAO;AACnB,SAAS;AACT,QACQ,UAAU,CAAC;AACnB,YAAY,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;AACjD,YAAY,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AACnD,YAAY,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AACxD,SAAS,EAAE,CAAC,CAAC,CAAC;AACd,KAAK;AACL,IACI,aAAa,CAAC,OAAY;AAAI,QAC1B,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AACjD,KAAK;AACL,IACI,gBAAgB;AAAK,QACjB,OAAO,IAAI,CAAC,aAAa,CAAC;AAClC,KAAK;AACL,IACI,gBAAgB,CAAC,gBAA0B;AAAI,QAC3C,IAAI,CAAC,aAAa,GAAG,gBAAgB,CAAC;AAC9C,KAAK;AACL,IACI,iBAAiB;AAAK,QAClB,OAAO,IAAI,CAAC,cAAc,CAAC;AACnC,KAAK;AACL,IACI,iBAAiB,CAAC,gBAA0B;AAChD,QAAQ,IAAI,CAAC,cAAc,GAAG,gBAAgB,CAAC;AAC/C,KAAK;AACL,IACI,QAAQ,CAAC,KAAa;AAAI,QACtB,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;AACxC,KAAK;AACL,IACY,aAAa,CAAC,SAAiB,EAAE,SAAiB;AAAI,QAC1D,IAAI,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,EAAE;AACjD,YAAY,OAAO,IAAI,CAAC;AACxB,SAAS;AACT,QACQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnD,YAAY,IAAI,SAAS,CAAC,MAAM,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE;AACvE,gBAAgB,OAAO,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AAC/C,aAAa;AACb,SAAS;AACT,KAAK;AACL,IACY,0BAA0B,CAAC,KAAU;AACjD,QAAQ,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,QAAQ,IAAI,SAAS,IAAI,KAAK,CAAC,QAAQ,IAAI,CAAC,CAAC,EAAE;AAC3H,YAAY,OAAO,IAAI,CAAC;AACxB,SAAS;AACT,QACQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL,IACY,UAAU;AACtB,QAAQ,OAAO,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;AACvE,KAAK;AACL,IACY,iBAAiB,CAAC,KAAU;AAAI,QACpC,IAAI,gCAAgC,GAAG,IAAI,CAAC,YAAY,CAAC,mCAAmC,EAAE,CAAC;AACvG,QACQ,UAAU,CAAC;AACnB,YAAY,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,gCAAgC,EAAE,gCAAgC,CAAC,CAAC;AAC/G,SAAS,EAAE,CAAC,CAAC,CAAC;AACd,KAAK;AACL;AAAE;AAAC;AAA6B,MC3MnB,oCAAoC,GAAQ;AACzD,IAAI,OAAO,EAAE,iBAAiB;AAC9B,IAAI,WAAW,EAAE,UAAU,CAAC,MAAM,qBAAqB,CAAC;AACxD,IAAI,KAAK,EAAE,IAAI;AACf,EAAE;AACF,IAQa,qBAAqB,6BAAlC,MAAa,qBAAqB;AAAG,IAmBjC,YAA8D,kBAAsC,EAAU,UAAsB,EAAU,eAAgC;AAClL,QADkE,uBAAkB,GAAlB,kBAAkB,CAAoB;AAAC,QAAS,eAAU,GAAV,UAAU,CAAY;AAAC,QAAS,oBAAe,GAAf,eAAe,CAAiB;AAAC,QAftK,YAAO,GAAQ,EAAE,CAAC;AAC/B,QAII,oBAAe,GAAG;AACtB,YAAQ,KAAK,EAAE,OAAO;AACtB,YAAQ,aAAa,EAAE,IAAI;AAC3B,YAAQ,OAAO,EAAE,GAAG;AACpB,YAAQ,SAAS,EAAE,CAAC;AACpB,YAAQ,MAAM,EAAE,IAAI;AACpB,YAAQ,MAAM,EAAE,EAAE;AAClB,YAAQ,SAAS,EAAE,GAAG;AACtB,SAAK,CAAC;AACN,QAEQ,IAAI,kBAAkB,EAAE;AAChC,YAAY,IAAI,CAAC,eAAe,GAAG,kBAAkB,CAAC;AACtD,SAAS;AACT,QACQ,IAAI,CAAC,cAAc,GAAG,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;AAChE,KAAK;AACL,IACI,eAAe;AACnB,QAAQ,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;AAC7H,KAAK;AACL,IACI,SAAS;AACb,QAAQ,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;AACpD,YAAY,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;AACjI,YAAY,IAAI,CAAC,YAAY,CAAC,aAAa,CAAO,MAAO,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;AAC1G,SAAS;AACT,KAAK;AACL,IACI,QAAQ;AACZ,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAQ,MAAO,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;AAC1I,KAAK;AACL,IAEI,UAAU,CAAC,KAAU;AACzB,QAAQ,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC3D,KAAK;AACL,IAEI,WAAW,CAAC,KAAU;AAC1B,QAAQ,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;AACrE,KAAK;AACL,IAEI,SAAS,CAAC,KAAU;AACxB,QAAQ,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE;AACrC,YAAY,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC/C,SAAS;AACT,KAAK;AACL,IAEI,WAAW,CAAC,KAAU;AAC1B,QAAQ,IAAI,IAAI,CAAC,eAAe,EAAE,EAAE;AACpC,YAAY,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACjD,SAAS;AACT,KAAK;AACL,IAEI,aAAa,CAAC,KAAU;AAC5B,QAAQ,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE;AACrC,YAAY,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AACnD,SAAS;AACT,KAAK;AACL,IAEI,cAAc,CAAC,KAAU;AAC7B,QAAQ,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE;AACrC,YAAY,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;AACpD,SAAS;AACT,KAAK;AACL,IAEI,WAAW,CAAC,KAAU;AAC1B,QAAQ,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE;AACrC,YAAY,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACjD,SAAS;AACT,KAAK;AACL,IAEI,WAAW,CAAC,KAAU;AAC1B,QAAQ,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE;AACrC,YAAY,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACjD,SAAS;AACT,KAAK;AACL,IACI,eAAe;AAAK,QAChB,OAAO,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;AAC3F,KAAK;AACL,IACI,gBAAgB,CAAC,gBAA0B;AAAI,QAC3C,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC;AAC7D,KAAK;AACL,IACI,iBAAiB,CAAC,gBAA0B;AAAI,QAC5C,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;AAC9D,KAAK;AACL,IACI,gBAAgB,CAAC,KAAc;AAAI,QAC/B,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAK,CAAC;AACvD,KAAK;AACL,IACI,QAAQ,CAAC,eAAgC;AAAI,QACzC,IAAI,MAAM,GAAQ,EAAE,CAAC;AAC7B,QACQ,IAAI,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE;AAC9C,YAAY,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC;AAC9B,SAAS;AACT,QACQ,IAAI,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE;AAC9C,YAAY,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC;AAC9B,SAAS;AACT,QACQ,OAAO,MAAM,IAAI,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC;AAC5C,KAAK;AACL,IACI,UAAU,CAAC,KAAa;AAAI,QACxB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC1C,KAAK;AACL;;;;;;;eAAC;AAAC;AAA+C,4CA5GhC,QAAQ,YAAI,MAAM,SAAC,oBAAoB;AAAS,YAA6D,UAAU;AAAI,YAAuB,eAAe;AAAG;AAjBxK;AACb,IADK,KAAK,EAAE;AAAC,kDAAY;AACZ;AACb,IADK,KAAK,EAAE;AAAC,kDAAY;AACZ;AAAa,IAArB,KAAK,EAAE;AAAC,sDAAkB;AAuC3B;AAAa,IADZ,YAAY,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,CAAC;AACrC,uDAEK;AAGD;AAAa,IADZ,YAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;AACtC,wDAEK;AAGD;AAAa,IADZ,YAAY,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC;AACpC,sDAIK;AAGD;AAAa,IADZ,YAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;AACtC,wDAIK;AAGD;AAAa,IADZ,YAAY,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,CAAC;AACxC,0DAIK;AAGD;AAAa,IADZ,YAAY,CAAC,UAAU,EAAE,CAAC,QAAQ,CAAC,CAAC;AACzC,2DAIK;AAGD;AAAa,IADZ,YAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;AACtC,wDAIK;AAGD;AAAa,IADZ,YAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;AACtC,wDAIK;AA5FQ,qBAAqB,8CAPjC,SAAS,CAAC,UACP,QAAQ,EAAE,gBAAgB,UAC1B,7DAKA,CAmBa,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,oBAAoB,CAAC,CAAA;IAxB5C,EAAE,cACP,pBAuBkD,GAnB7C,qBAAqB,CA+HjC;AAAE;4BAnIyC,cACpC,EAAE,OAAO,nDAkIb,IChIS,kBAAkB,GAA/B,MAAa,kBAAkB;CDFZ,DCGnB,EAAC;WDH+B,EAAE,WAAW,EAAE,uBAAqB,EAAE,KAAK,EAAE,IAAI,EAAE,UAC9E,MACJ,hFCAY,kBAAkB,oBAZ9B,QAAQ,CAAC,UACN,OAAO,EAAE,cACL;ADUN,WCVkB,cACZ,WAAW,UACd,UACD,YAAY,EAAE,cACV,qBAAqB,UACxB,UACD,OAAO,EAAE,cACL;YAAqB,UACxB;EACJ,CAAC,IACW;CAAkB,CAC9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAAC;AAAC;AClBH;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACoF","sourcesContent":["import { InjectionToken } from \"@angular/core\";\n\nexport interface CurrencyMaskConfig {\n\n    align: string;\n    allowNegative: boolean;\n    decimal: string;\n    precision: number;\n    prefix: string;\n    suffix: string;\n    thousands: string;\n}\n\nexport let CURRENCY_MASK_CONFIG = new InjectionToken<CurrencyMaskConfig>(\"currency.mask.config\");","export class InputManager {\n\n    private _storedRawValue: string;\n\n    constructor(private htmlInputElement: any) {\n    }\n\n    setCursorAt(position: number): void {\n        if (this.htmlInputElement.setSelectionRange) {\n            this.htmlInputElement.focus();\n            this.htmlInputElement.setSelectionRange(position, position);\n        } else if (this.htmlInputElement.createTextRange) {\n            let textRange = this.htmlInputElement.createTextRange();\n            textRange.collapse(true);\n            textRange.moveEnd(\"character\", position);\n            textRange.moveStart(\"character\", position);\n            textRange.select();\n        }\n    }\n\n    updateValueAndCursor(newRawValue: string, oldLength: number, selectionStart: number): void {\n        this.rawValue = newRawValue;\n        let newLength = newRawValue.length;\n        selectionStart = selectionStart - (oldLength - newLength);\n        this.setCursorAt(selectionStart);\n    }\n\n    get canInputMoreNumbers(): boolean {\n        let haventReachedMaxLength = !(this.rawValue.length >= this.htmlInputElement.maxLength && this.htmlInputElement.maxLength >= 0);\n        let selectionStart = this.inputSelection.selectionStart;\n        let selectionEnd = this.inputSelection.selectionEnd;\n        let haveNumberSelected = (selectionStart != selectionEnd && this.htmlInputElement.value.substring(selectionStart, selectionEnd).match(/\\d/)) ? true : false;\n        let startWithZero = (this.htmlInputElement.value.substring(0, 1) == \"0\");\n        return haventReachedMaxLength || haveNumberSelected || startWithZero;\n    }\n\n    get inputSelection(): any {\n        let selectionStart = 0;\n        let selectionEnd = 0;\n\n        if (typeof this.htmlInputElement.selectionStart == \"number\" && typeof this.htmlInputElement.selectionEnd == \"number\") {\n            selectionStart = this.htmlInputElement.selectionStart;\n            selectionEnd = this.htmlInputElement.selectionEnd;\n        } else {\n            let range = document.getSelection().anchorNode;\n\n            if (range && range.firstChild == this.htmlInputElement) {\n                let lenght = this.htmlInputElement.value.length;\n                let normalizedValue = this.htmlInputElement.value.replace(/\\r\\n/g, \"\\n\");\n                let startRange = this.htmlInputElement.createTextRange();\n                let endRange = this.htmlInputElement.createTextRange();\n                endRange.collapse(false);\n\n                if (startRange.compareEndPoints(\"StartToEnd\", endRange) > -1) {\n                    selectionStart = selectionEnd = lenght;\n                } else {\n                    selectionStart = -startRange.moveStart(\"character\", -lenght);\n                    selectionStart += normalizedValue.slice(0, selectionStart).split(\"\\n\").length - 1;\n\n                    if (startRange.compareEndPoints(\"EndToEnd\", endRange) > -1) {\n                        selectionEnd = lenght;\n                    } else {\n                        selectionEnd = -startRange.moveEnd(\"character\", -lenght);\n                        selectionEnd += normalizedValue.slice(0, selectionEnd).split(\"\\n\").length - 1;\n                    }\n                }\n            }\n        }\n\n        return {\n            selectionStart: selectionStart,\n            selectionEnd: selectionEnd\n        };\n    }\n\n    get rawValue(): string {\n        return this.htmlInputElement && this.htmlInputElement.value;\n    }\n\n    set rawValue(value: string) {\n        this._storedRawValue = value;\n\n        if (this.htmlInputElement) {\n            this.htmlInputElement.value = value;\n        }\n    }\n\n    get storedRawValue(): string {\n        return this._storedRawValue;\n    }\n}","import { InputManager } from \"./input.manager\";\n\nexport class InputService {\n\n    private inputManager: InputManager;\n\n    constructor(private htmlInputElement: any, private options: any) {\n        this.inputManager = new InputManager(htmlInputElement);\n    }\n\n    addNumber(keyCode: number): void {\n        if (!this.rawValue) {\n            this.rawValue = this.applyMask(false, \"0\");\n        }\n\n        let keyChar = String.fromCharCode(keyCode);\n        let selectionStart = this.inputSelection.selectionStart;\n        let selectionEnd = this.inputSelection.selectionEnd;\n        this.rawValue = this.rawValue.substring(0, selectionStart) + keyChar + this.rawValue.substring(selectionEnd, this.rawValue.length);\n        this.updateFieldValue(selectionStart + 1);\n    }\n\n    applyMask(isNumber: boolean, rawValue: string): string {\n        let { allowNegative, decimal, precision, prefix, suffix, thousands } = this.options;\n        rawValue = isNumber ? new Number(rawValue).toFixed(precision) : rawValue;\n        let onlyNumbers = rawValue.replace(/[^0-9]/g, \"\");\n\n        if (!onlyNumbers) {\n            return \"\";\n        }\n\n        let integerPart = onlyNumbers.slice(0, onlyNumbers.length - precision).replace(/^0*/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousands);\n\n        if (integerPart == \"\") {\n            integerPart = \"0\";\n        }\n\n        let newRawValue = integerPart;\n        let decimalPart = onlyNumbers.slice(onlyNumbers.length - precision);\n\n        if (precision > 0) {\n            decimalPart = \"0\".repeat(precision - decimalPart.length) + decimalPart;\n            newRawValue += decimal + decimalPart;\n        }\n\n        let isZero = parseInt(integerPart) == 0 && (parseInt(decimalPart) == 0 || decimalPart == \"\");\n        let operator = (rawValue.indexOf(\"-\") > -1 && allowNegative && !isZero) ? \"-\" : \"\";\n        return operator + prefix + newRawValue + suffix;\n    }\n\n    clearMask(rawValue: string): number {\n        if (rawValue == null || rawValue == \"\") {\n            return null;\n        }\n\n        let value = rawValue.replace(this.options.prefix, \"\").replace(this.options.suffix, \"\");\n\n        if (this.options.thousands) {\n            value = value.replace(new RegExp(\"\\\\\" + this.options.thousands, \"g\"), \"\");\n        }\n\n        if (this.options.decimal) {\n            value = value.replace(this.options.decimal, \".\");\n        }\n\n        return parseFloat(value);\n    }\n\n    changeToNegative(): void {\n        if (this.options.allowNegative && this.rawValue != \"\" && this.rawValue.charAt(0) != \"-\" && this.value != 0) {\n            let selectionStart = this.inputSelection.selectionStart;\n            this.rawValue = \"-\" + this.rawValue;\n            this.updateFieldValue(selectionStart + 1);\n        }\n    }\n\n    changeToPositive(): void {\n        let selectionStart = this.inputSelection.selectionStart;\n        this.rawValue = this.rawValue.replace(\"-\", \"\");\n        this.updateFieldValue(selectionStart - 1);\n    }\n\n    fixCursorPosition(forceToEndPosition?: boolean): void {\n        let currentCursorPosition = this.inputSelection.selectionStart;\n\n        //if the current cursor position is after the number end position, it is moved to the end of the number, ignoring the prefix or suffix. this behavior can be forced with forceToEndPosition flag\n        if (currentCursorPosition > this.getRawValueWithoutSuffixEndPosition() || forceToEndPosition) {\n            this.inputManager.setCursorAt(this.getRawValueWithoutSuffixEndPosition());\n            //if the current cursor position is before the number start position, it is moved to the start of the number, ignoring the prefix or suffix\n        } else if (currentCursorPosition < this.getRawValueWithoutPrefixStartPosition()) {\n            this.inputManager.setCursorAt(this.getRawValueWithoutPrefixStartPosition());\n        }\n    }\n\n    getRawValueWithoutSuffixEndPosition(): number {\n        return this.rawValue.length - this.options.suffix.length;\n    }\n\n    getRawValueWithoutPrefixStartPosition(): number {\n        return this.value != null && this.value < 0 ? this.options.prefix.length + 1 : this.options.prefix.length;\n    }\n\n    removeNumber(keyCode: number): void {\n        let { decimal, thousands } = this.options;\n        let selectionEnd = this.inputSelection.selectionEnd;\n        let selectionStart = this.inputSelection.selectionStart;\n\n        if (selectionStart > this.rawValue.length - this.options.suffix.length) {\n            selectionEnd = this.rawValue.length - this.options.suffix.length;\n            selectionStart = this.rawValue.length - this.options.suffix.length;\n        }\n\n        //there is no selection\n        if (selectionEnd == selectionStart) {\n            //delete key and the target digit is a number\n            if ((keyCode == 46 || keyCode == 63272) && /^\\d+$/.test(this.rawValue.substring(selectionStart, selectionEnd + 1))) {\n                selectionEnd = selectionEnd + 1;\n            }\n\n            //delete key and the target digit is the decimal or thousands divider\n            if ((keyCode == 46 || keyCode == 63272) && (this.rawValue.substring(selectionStart, selectionEnd + 1) == decimal || this.rawValue.substring(selectionStart, selectionEnd + 1) == thousands)) {\n                selectionEnd = selectionEnd + 2;\n                selectionStart = selectionStart + 1;\n            }\n\n            //backspace key and the target digit is a number\n            if (keyCode == 8 && /^\\d+$/.test(this.rawValue.substring(selectionStart - 1, selectionEnd))) {\n                selectionStart = selectionStart - 1;\n            }\n\n            //backspace key and the target digit is the decimal or thousands divider\n            if (keyCode == 8 && (this.rawValue.substring(selectionStart - 1, selectionEnd) == decimal || this.rawValue.substring(selectionStart - 1, selectionEnd) == thousands)) {\n                selectionStart = selectionStart - 2;\n                selectionEnd = selectionEnd - 1;\n            }\n        }\n\n        this.rawValue = this.rawValue.substring(0, selectionStart) + this.rawValue.substring(selectionEnd, this.rawValue.length);\n        this.updateFieldValue(selectionStart);\n    }\n\n    updateFieldValue(selectionStart?: number): void {\n        let newRawValue = this.applyMask(false, this.rawValue || \"\");\n        selectionStart = selectionStart == undefined ? this.rawValue.length : selectionStart;\n        this.inputManager.updateValueAndCursor(newRawValue, this.rawValue.length, selectionStart);\n    }\n\n    updateOptions(options: any): void {\n        let value: number = this.value;\n        this.options = options;\n        this.value = value;\n    }\n\n    get canInputMoreNumbers(): boolean {\n        return this.inputManager.canInputMoreNumbers;\n    }\n\n    get inputSelection(): any {\n        return this.inputManager.inputSelection;\n    }\n\n    get rawValue(): string {\n        return this.inputManager.rawValue;\n    }\n\n    set rawValue(value: string) {\n        this.inputManager.rawValue = value;\n    }\n\n    get storedRawValue(): string {\n        return this.inputManager.storedRawValue;\n    }\n\n    get value(): number {\n        return this.clearMask(this.rawValue);\n    }\n\n    set value(value: number) {\n        this.rawValue = this.applyMask(true, \"\" + value);\n    }\n}","import { InputService } from \"./input.service\";\n\nexport class InputHandler {\n\n    private inputService: InputService;\n    private onModelChange: Function;\n    private onModelTouched: Function;\n    private htmlInputElement: HTMLInputElement;\n\n    constructor(htmlInputElement: HTMLInputElement, options: any) {\n        this.inputService = new InputService(htmlInputElement, options);\n        this.htmlInputElement = htmlInputElement;\n    }\n\n    handleClick(event: any, chromeAndroid: boolean): void {\n        let selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);\n\n        //if there is no selection and the value is not null, the cursor position will be fixed. if the browser is chrome on android, the cursor will go to the end of the number.\n        if (selectionRangeLength == 0 && !isNaN(this.inputService.value)) {\n            this.inputService.fixCursorPosition(chromeAndroid);\n        }\n    }\n\n    handleCut(event: any): void {\n        if (this.isReadOnly()) {\n            return;\n        }\n\n        setTimeout(() => {\n            this.inputService.updateFieldValue();\n            this.setValue(this.inputService.value);\n            this.onModelChange(this.inputService.value);\n        }, 0);\n    }\n\n    handleInput(event: any): void {\n        if (this.isReadOnly()) {\n            return;\n        }\n\n        let keyCode = this.getNewKeyCode(this.inputService.storedRawValue, this.inputService.rawValue);\n        let rawValueLength = this.inputService.rawValue.length;\n        let rawValueSelectionEnd = this.inputService.inputSelection.selectionEnd;\n        let rawValueWithoutSuffixEndPosition = this.inputService.getRawValueWithoutSuffixEndPosition();\n        let storedRawValueLength = this.inputService.storedRawValue.length;\n        this.inputService.rawValue = this.inputService.storedRawValue;\n\n        if ((rawValueSelectionEnd != rawValueWithoutSuffixEndPosition || Math.abs(rawValueLength - storedRawValueLength) != 1) && storedRawValueLength != 0) {\n            this.setCursorPosition(event);\n            return;\n        }\n\n        if (rawValueLength < storedRawValueLength) {\n            if (this.inputService.value != 0) {\n                this.inputService.removeNumber(8);\n            } else {\n                this.setValue(null);\n            }\n        }\n\n        if (rawValueLength > storedRawValueLength) {\n            switch (keyCode) {\n                case 43:\n                    this.inputService.changeToPositive();\n                    break;\n                case 45:\n                    this.inputService.changeToNegative();\n                    break;\n                default:\n                    if (!this.inputService.canInputMoreNumbers || (isNaN(this.inputService.value) && String.fromCharCode(keyCode).match(/\\d/) == null)) {\n                        return;\n                    }\n\n                    this.inputService.addNumber(keyCode);\n            }\n        }\n\n        this.setCursorPosition(event);\n        this.onModelChange(this.inputService.value);\n    }\n\n    handleKeydown(event: any): void {\n        if (this.isReadOnly()) {\n            return;\n        }\n\n        let keyCode = event.which || event.charCode || event.keyCode;\n\n        if (keyCode == 8 || keyCode == 46 || keyCode == 63272) {\n            event.preventDefault();\n            let selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);\n\n            if (selectionRangeLength == this.inputService.rawValue.length || this.inputService.value == 0) {\n                this.setValue(null);\n                this.onModelChange(this.inputService.value);\n            }\n\n            if (selectionRangeLength == 0 && !isNaN(this.inputService.value)) {\n                this.inputService.removeNumber(keyCode);\n                this.onModelChange(this.inputService.value);\n            }\n\n            if ((keyCode === 8 || keyCode === 46) && selectionRangeLength != 0 && !isNaN(this.inputService.value)) {\n                this.inputService.removeNumber(keyCode);\n                this.onModelChange(this.inputService.value);\n            }\n        }\n    }\n\n    handleKeypress(event: any): void {\n        if (this.isReadOnly()) {\n            return;\n        }\n\n        let keyCode = event.which || event.charCode || event.keyCode;\n\n        if (keyCode == undefined || [9, 13].indexOf(keyCode) != -1 || this.isArrowEndHomeKeyInFirefox(event)) {\n            return;\n        }\n\n        switch (keyCode) {\n            case 43:\n                this.inputService.changeToPositive();\n                break;\n            case 45:\n                this.inputService.changeToNegative();\n                break;\n            default:\n                if (this.inputService.canInputMoreNumbers && (!isNaN(this.inputService.value) || String.fromCharCode(keyCode).match(/\\d/) != null)) {\n                    this.inputService.addNumber(keyCode);\n                }\n        }\n\n        event.preventDefault();\n        this.onModelChange(this.inputService.value);\n    }\n\n    handleKeyup(event: any): void {\n        this.inputService.fixCursorPosition();\n    }\n\n    handlePaste(event: any): void {\n        if (this.isReadOnly()) {\n            return;\n        }\n\n        setTimeout(() => {\n            this.inputService.updateFieldValue();\n            this.setValue(this.inputService.value);\n            this.onModelChange(this.inputService.value);\n        }, 1);\n    }\n\n    updateOptions(options: any): void {\n        this.inputService.updateOptions(options);\n    }\n\n    getOnModelChange(): Function {\n        return this.onModelChange;\n    }\n\n    setOnModelChange(callbackFunction: Function): void {\n        this.onModelChange = callbackFunction;\n    }\n\n    getOnModelTouched(): Function {\n        return this.onModelTouched;\n    }\n\n    setOnModelTouched(callbackFunction: Function) {\n        this.onModelTouched = callbackFunction;\n    }\n\n    setValue(value: number): void {\n        this.inputService.value = value;\n    }\n\n    private getNewKeyCode(oldString: string, newString: string): number {\n        if (oldString.length > newString.length) {\n            return null;\n        }\n\n        for (let x = 0; x < newString.length; x++) {\n            if (oldString.length == x || oldString[x] != newString[x]) {\n                return newString.charCodeAt(x);\n            }\n        }\n    }\n\n    private isArrowEndHomeKeyInFirefox(event: any) {\n        if ([35, 36, 37, 38, 39, 40].indexOf(event.keyCode) != -1 && (event.charCode == undefined || event.charCode == 0)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    private isReadOnly() {\n        return this.htmlInputElement && this.htmlInputElement.readOnly;\n    }\n\n    private setCursorPosition(event: any): void {\n        let rawValueWithoutSuffixEndPosition = this.inputService.getRawValueWithoutSuffixEndPosition();\n\n        setTimeout(function () {\n            event.target.setSelectionRange(rawValueWithoutSuffixEndPosition, rawValueWithoutSuffixEndPosition);\n        }, 0);\n    }\n}","import { AfterViewInit, Directive, DoCheck, ElementRef, forwardRef, HostListener, Inject, Input, KeyValueDiffer, KeyValueDiffers, OnInit, Optional } from \"@angular/core\";\nimport { AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator } from \"@angular/forms\";\nimport { CurrencyMaskConfig, CURRENCY_MASK_CONFIG } from \"./currency-mask.config\";\nimport { InputHandler } from \"./input.handler\";\n\nexport const CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CurrencyMaskDirective),\n    multi: true\n};\n\n@Directive({\n    selector: \"[currencyMask]\",\n    providers: [\n        CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR,\n        { provide: NG_VALIDATORS, useExisting: CurrencyMaskDirective, multi: true }\n    ]\n})\nexport class CurrencyMaskDirective implements AfterViewInit, ControlValueAccessor, DoCheck, OnInit, Validator {\n\n    @Input() max: number;\n    @Input() min: number;\n    @Input() options: any = {};\n\n    inputHandler: InputHandler;\n    keyValueDiffer: KeyValueDiffer<any, any>;\n\n    optionsTemplate = {\n        align: \"right\",\n        allowNegative: true,\n        decimal: \".\",\n        precision: 2,\n        prefix: \"$ \",\n        suffix: \"\",\n        thousands: \",\"\n    };\n\n    constructor(@Optional() @Inject(CURRENCY_MASK_CONFIG) private currencyMaskConfig: CurrencyMaskConfig, private elementRef: ElementRef, private keyValueDiffers: KeyValueDiffers) {\n        if (currencyMaskConfig) {\n            this.optionsTemplate = currencyMaskConfig;\n        }\n\n        this.keyValueDiffer = keyValueDiffers.find({}).create();\n    }\n\n    ngAfterViewInit() {\n        this.elementRef.nativeElement.style.textAlign = this.options.align ? this.options.align : this.optionsTemplate.align;\n    }\n\n    ngDoCheck() {\n        if (this.keyValueDiffer.diff(this.options)) {\n            this.elementRef.nativeElement.style.textAlign = this.options.align ? this.options.align : this.optionsTemplate.align;\n            this.inputHandler.updateOptions((<any>Object).assign({}, this.optionsTemplate, this.options));\n        }\n    }\n\n    ngOnInit() {\n        this.inputHandler = new InputHandler(this.elementRef.nativeElement, (<any>Object).assign({}, this.optionsTemplate, this.options));\n    }\n\n    @HostListener(\"blur\", [\"$event\"])\n    handleBlur(event: any) {\n        this.inputHandler.getOnModelTouched().apply(event);\n    }\n\n    @HostListener(\"click\", [\"$event\"])\n    handleClick(event: any) {\n        this.inputHandler.handleClick(event, this.isChromeAndroid());\n    }\n\n    @HostListener(\"cut\", [\"$event\"])\n    handleCut(event: any) {\n        if (!this.isChromeAndroid()) {\n            this.inputHandler.handleCut(event);\n        }\n    }\n\n    @HostListener(\"input\", [\"$event\"])\n    handleInput(event: any) {\n        if (this.isChromeAndroid()) {\n            this.inputHandler.handleInput(event);\n        }\n    }\n\n    @HostListener(\"keydown\", [\"$event\"])\n    handleKeydown(event: any) {\n        if (!this.isChromeAndroid()) {\n            this.inputHandler.handleKeydown(event);\n        }\n    }\n\n    @HostListener(\"keypress\", [\"$event\"])\n    handleKeypress(event: any) {\n        if (!this.isChromeAndroid()) {\n            this.inputHandler.handleKeypress(event);\n        }\n    }\n\n    @HostListener(\"keyup\", [\"$event\"])\n    handleKeyup(event: any) {\n        if (!this.isChromeAndroid()) {\n            this.inputHandler.handleKeyup(event);\n        }\n    }\n\n    @HostListener(\"paste\", [\"$event\"])\n    handlePaste(event: any) {\n        if (!this.isChromeAndroid()) {\n            this.inputHandler.handlePaste(event);\n        }\n    }\n\n    isChromeAndroid(): boolean {\n        return /chrome/i.test(navigator.userAgent) && /android/i.test(navigator.userAgent);\n    }\n\n    registerOnChange(callbackFunction: Function): void {\n        this.inputHandler.setOnModelChange(callbackFunction);\n    }\n\n    registerOnTouched(callbackFunction: Function): void {\n        this.inputHandler.setOnModelTouched(callbackFunction);\n    }\n\n    setDisabledState(value: boolean): void {\n        this.elementRef.nativeElement.disabled = value;\n    }\n\n    validate(abstractControl: AbstractControl): { [key: string]: any; } {\n        let result: any = {};\n\n        if (abstractControl.value > this.max) {\n            result.max = true;\n        }\n\n        if (abstractControl.value < this.min) {\n            result.min = true;\n        }\n\n        return result != {} ? result : null;\n    }\n\n    writeValue(value: number): void {\n        this.inputHandler.setValue(value);\n    }\n}","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { CurrencyMaskDirective } from \"./currency-mask.directive\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    declarations: [\n        CurrencyMaskDirective\n    ],\n    exports: [\n        CurrencyMaskDirective\n    ]\n})\nexport class CurrencyMaskModule {\n}","/*\n * Public API Surface of currency-mask\n */\n\nexport * from './lib/currency-mask.config';\nexport * from './lib/currency-mask.directive';\nexport * from './lib/currency-mask.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}