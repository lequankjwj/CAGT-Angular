/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { QueryList, TemplateRef } from '@angular/core';
import { ItemTemplateDirective } from './templates/item-template.directive';
import { ItemLinkTemplateDirective } from './templates/item-link-template.directive';
import { ItemContentTemplateDirective } from './templates/item-content-template.directive';
import { MenuItem } from './menu-item.interface';
/**
 * A component that can be used to specify the Menu items
 * ([more information and examples]({% slug items_menu %})).
 *
 * @example
 * ```ts-preview
 *
 * _@Component({
 *    selector: 'my-app',
 *    template: `
 *        <kendo-menu>
 *          <kendo-menu-item text="item1">
 *              <kendo-menu-item text="item1.1" url="https://example.com">
 *              </kendo-menu-item>
 *              <kendo-menu-item text="item1.2" [disabled]="true">
 *              </kendo-menu-item>
 *          </kendo-menu-item>
 *          <kendo-menu-item text="item2">
 *              <ng-template kendoMenuItemContentTemplate let-item="item">
 *                  <div style="padding: 10px;">
 *                      My Content Template: {{ item.text }}
 *                  </div>
 *              </ng-template>
 *              <ng-template kendoMenuItemTemplate let-item="item">
 *                  <div style="padding: 10px;">
 *                      My Template: {{ item.text }}
 *                  </div>
 *              </ng-template>
 *          </kendo-menu-item>
 *          <kendo-menu-item text="item3">
 *              <ng-template kendoMenuItemLinkTemplate let-item="item" let-index="index">
 *                  <span [kendoMenuItemLink]="index">
 *                      {{ item.text }}
 *                      <span *ngIf="item.items && item.items.length" [kendoMenuExpandArrow]="index"></span>
 *                  </span>
 *              </ng-template>
 *          </kendo-menu-item>
 *        </kendo-menu>
 *    `
 * })
 *
 * class AppComponent {
 * }
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class MenuItemComponent implements MenuItem {
    text: string;
    url: string;
    disabled: boolean;
    cssClass: any;
    cssStyle: any;
    icon: string;
    data: any;
    separator: boolean;
    /**
     * @hidden
     */
    itemTemplate: QueryList<ItemTemplateDirective>;
    /**
     * @hidden
     */
    itemLinkTemplate: QueryList<ItemLinkTemplateDirective>;
    /**
     * @hidden
     */
    itemContentTemplate: QueryList<ItemContentTemplateDirective>;
    /**
     * @hidden
     */
    children: QueryList<MenuItemComponent>;
    /**
     * @hidden
     */
    readonly template: TemplateRef<any>;
    /**
     * @hidden
     */
    readonly linkTemplate: TemplateRef<any>;
    /**
     * @hidden
     */
    readonly contentTemplate: TemplateRef<any>;
    /**
     * @hidden
     */
    readonly items: any[];
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MenuItemComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MenuItemComponent, "kendo-menu-item", never, { "text": "text"; "url": "url"; "disabled": "disabled"; "cssClass": "cssClass"; "cssStyle": "cssStyle"; "icon": "icon"; "data": "data"; "separator": "separator"; }, {}, ["itemTemplate", "itemLinkTemplate", "itemContentTemplate", "children"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS1pdGVtLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJtZW51LWl0ZW0uY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgUXVlcnlMaXN0LCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSXRlbVRlbXBsYXRlRGlyZWN0aXZlIH0gZnJvbSAnLi90ZW1wbGF0ZXMvaXRlbS10ZW1wbGF0ZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgSXRlbUxpbmtUZW1wbGF0ZURpcmVjdGl2ZSB9IGZyb20gJy4vdGVtcGxhdGVzL2l0ZW0tbGluay10ZW1wbGF0ZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgSXRlbUNvbnRlbnRUZW1wbGF0ZURpcmVjdGl2ZSB9IGZyb20gJy4vdGVtcGxhdGVzL2l0ZW0tY29udGVudC10ZW1wbGF0ZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTWVudUl0ZW0gfSBmcm9tICcuL21lbnUtaXRlbS5pbnRlcmZhY2UnO1xuLyoqXG4gKiBBIGNvbXBvbmVudCB0aGF0IGNhbiBiZSB1c2VkIHRvIHNwZWNpZnkgdGhlIE1lbnUgaXRlbXNcbiAqIChbbW9yZSBpbmZvcm1hdGlvbiBhbmQgZXhhbXBsZXNdKHslIHNsdWcgaXRlbXNfbWVudSAlfSkpLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0cy1wcmV2aWV3XG4gKlxuICogX0BDb21wb25lbnQoe1xuICogICAgc2VsZWN0b3I6ICdteS1hcHAnLFxuICogICAgdGVtcGxhdGU6IGBcbiAqICAgICAgICA8a2VuZG8tbWVudT5cbiAqICAgICAgICAgIDxrZW5kby1tZW51LWl0ZW0gdGV4dD1cIml0ZW0xXCI+XG4gKiAgICAgICAgICAgICAgPGtlbmRvLW1lbnUtaXRlbSB0ZXh0PVwiaXRlbTEuMVwiIHVybD1cImh0dHBzOi8vZXhhbXBsZS5jb21cIj5cbiAqICAgICAgICAgICAgICA8L2tlbmRvLW1lbnUtaXRlbT5cbiAqICAgICAgICAgICAgICA8a2VuZG8tbWVudS1pdGVtIHRleHQ9XCJpdGVtMS4yXCIgW2Rpc2FibGVkXT1cInRydWVcIj5cbiAqICAgICAgICAgICAgICA8L2tlbmRvLW1lbnUtaXRlbT5cbiAqICAgICAgICAgIDwva2VuZG8tbWVudS1pdGVtPlxuICogICAgICAgICAgPGtlbmRvLW1lbnUtaXRlbSB0ZXh0PVwiaXRlbTJcIj5cbiAqICAgICAgICAgICAgICA8bmctdGVtcGxhdGUga2VuZG9NZW51SXRlbUNvbnRlbnRUZW1wbGF0ZSBsZXQtaXRlbT1cIml0ZW1cIj5cbiAqICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cInBhZGRpbmc6IDEwcHg7XCI+XG4gKiAgICAgICAgICAgICAgICAgICAgICBNeSBDb250ZW50IFRlbXBsYXRlOiB7eyBpdGVtLnRleHQgfX1cbiAqICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gKiAgICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgICAgICAgICAgICA8bmctdGVtcGxhdGUga2VuZG9NZW51SXRlbVRlbXBsYXRlIGxldC1pdGVtPVwiaXRlbVwiPlxuICogICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwicGFkZGluZzogMTBweDtcIj5cbiAqICAgICAgICAgICAgICAgICAgICAgIE15IFRlbXBsYXRlOiB7eyBpdGVtLnRleHQgfX1cbiAqICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gKiAgICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgICAgICAgIDwva2VuZG8tbWVudS1pdGVtPlxuICogICAgICAgICAgPGtlbmRvLW1lbnUtaXRlbSB0ZXh0PVwiaXRlbTNcIj5cbiAqICAgICAgICAgICAgICA8bmctdGVtcGxhdGUga2VuZG9NZW51SXRlbUxpbmtUZW1wbGF0ZSBsZXQtaXRlbT1cIml0ZW1cIiBsZXQtaW5kZXg9XCJpbmRleFwiPlxuICogICAgICAgICAgICAgICAgICA8c3BhbiBba2VuZG9NZW51SXRlbUxpbmtdPVwiaW5kZXhcIj5cbiAqICAgICAgICAgICAgICAgICAgICAgIHt7IGl0ZW0udGV4dCB9fVxuICogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gKm5nSWY9XCJpdGVtLml0ZW1zICYmIGl0ZW0uaXRlbXMubGVuZ3RoXCIgW2tlbmRvTWVudUV4cGFuZEFycm93XT1cImluZGV4XCI+PC9zcGFuPlxuICogICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gKiAgICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgICAgICAgIDwva2VuZG8tbWVudS1pdGVtPlxuICogICAgICAgIDwva2VuZG8tbWVudT5cbiAqICAgIGBcbiAqIH0pXG4gKlxuICogY2xhc3MgQXBwQ29tcG9uZW50IHtcbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBNZW51SXRlbUNvbXBvbmVudCBpbXBsZW1lbnRzIE1lbnVJdGVtIHtcbiAgICB0ZXh0OiBzdHJpbmc7XG4gICAgdXJsOiBzdHJpbmc7XG4gICAgZGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgY3NzQ2xhc3M6IGFueTtcbiAgICBjc3NTdHlsZTogYW55O1xuICAgIGljb246IHN0cmluZztcbiAgICBkYXRhOiBhbnk7XG4gICAgc2VwYXJhdG9yOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBpdGVtVGVtcGxhdGU6IFF1ZXJ5TGlzdDxJdGVtVGVtcGxhdGVEaXJlY3RpdmU+O1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBpdGVtTGlua1RlbXBsYXRlOiBRdWVyeUxpc3Q8SXRlbUxpbmtUZW1wbGF0ZURpcmVjdGl2ZT47XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGl0ZW1Db250ZW50VGVtcGxhdGU6IFF1ZXJ5TGlzdDxJdGVtQ29udGVudFRlbXBsYXRlRGlyZWN0aXZlPjtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgY2hpbGRyZW46IFF1ZXJ5TGlzdDxNZW51SXRlbUNvbXBvbmVudD47XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHJlYWRvbmx5IHRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICByZWFkb25seSBsaW5rVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHJlYWRvbmx5IGNvbnRlbnRUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgcmVhZG9ubHkgaXRlbXM6IGFueVtdO1xufVxuIl19