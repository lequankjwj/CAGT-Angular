/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { EventEmitter, OnDestroy, AfterViewChecked, ElementRef, NgZone } from '@angular/core';
import { ResizeBatchService } from './resize-batch.service';
/**
 * Resize Sensor Component
 *
 * Triggers a "resize" event whenever the parent DOM element size changes.
 */
import * as ɵngcc0 from '@angular/core';
export declare class ResizeSensorComponent implements OnDestroy, AfterViewChecked {
    /**
     * The maximum number of resize events to emit per second.
     *
     * Defaults to 10.
     */
    rateLimit: number;
    /**
     * Fires when the parent DOM element has been resized.
     */
    resize: EventEmitter<any>;
    private subscription;
    private resizeService;
    constructor(resizeBatchService: ResizeBatchService, element: ElementRef, ngZone: NgZone);
    ngAfterViewChecked(): void;
    ngOnDestroy(): void;
    acceptSize(size?: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ResizeSensorComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ResizeSensorComponent, "kendo-resize-sensor", never, { "rateLimit": "rateLimit"; }, { "resize": "resize"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzaXplLXNlbnNvci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicmVzaXplLXNlbnNvci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBPbkRlc3Ryb3ksIEFmdGVyVmlld0NoZWNrZWQsIEVsZW1lbnRSZWYsIE5nWm9uZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUmVzaXplQmF0Y2hTZXJ2aWNlIH0gZnJvbSAnLi9yZXNpemUtYmF0Y2guc2VydmljZSc7XG4vKipcbiAqIFJlc2l6ZSBTZW5zb3IgQ29tcG9uZW50XG4gKlxuICogVHJpZ2dlcnMgYSBcInJlc2l6ZVwiIGV2ZW50IHdoZW5ldmVyIHRoZSBwYXJlbnQgRE9NIGVsZW1lbnQgc2l6ZSBjaGFuZ2VzLlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBSZXNpemVTZW5zb3JDb21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3ksIEFmdGVyVmlld0NoZWNrZWQge1xuICAgIC8qKlxuICAgICAqIFRoZSBtYXhpbXVtIG51bWJlciBvZiByZXNpemUgZXZlbnRzIHRvIGVtaXQgcGVyIHNlY29uZC5cbiAgICAgKlxuICAgICAqIERlZmF1bHRzIHRvIDEwLlxuICAgICAqL1xuICAgIHJhdGVMaW1pdDogbnVtYmVyO1xuICAgIC8qKlxuICAgICAqIEZpcmVzIHdoZW4gdGhlIHBhcmVudCBET00gZWxlbWVudCBoYXMgYmVlbiByZXNpemVkLlxuICAgICAqL1xuICAgIHJlc2l6ZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgcHJpdmF0ZSBzdWJzY3JpcHRpb247XG4gICAgcHJpdmF0ZSByZXNpemVTZXJ2aWNlO1xuICAgIGNvbnN0cnVjdG9yKHJlc2l6ZUJhdGNoU2VydmljZTogUmVzaXplQmF0Y2hTZXJ2aWNlLCBlbGVtZW50OiBFbGVtZW50UmVmLCBuZ1pvbmU6IE5nWm9uZSk7XG4gICAgbmdBZnRlclZpZXdDaGVja2VkKCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBhY2NlcHRTaXplKHNpemU/OiBhbnkpOiB2b2lkO1xufVxuIl19