/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { EventEmitter, TemplateRef } from '@angular/core';
import { ActionsLayout } from './models/actions-layout';
import { CardAction } from './models/card-action';
import { Orientation } from '../common/orientation';
/**
 * Specifies the action buttons of the Card.
 * * ([see example]({% slug actions_card %})).
 */
import * as ɵngcc0 from '@angular/core';
export declare class CardActionsComponent {
    hostClass: boolean;
    readonly stretchedClass: boolean;
    readonly startClass: boolean;
    readonly endClass: boolean;
    readonly centerClass: boolean;
    readonly verticalClass: boolean;
    readonly horizontalClass: boolean;
    /**
     * Specifies the layout of the Card action buttons.
     *
     * * The possible values are:
     * * (Default) `horizontal`
     * * `vertical`
     *
     */
    orientation: Orientation;
    /**
     * Specifies the layout of the Card action buttons.
     *
     * The possible values are:
     * * (Default) `start`
     * * `center`
     * * `end`
     * * `stretched`
     *
     */
    layout: ActionsLayout;
    /**
     * Allows the declarative specification of the Card actions.
     */
    actions?: CardAction[] | TemplateRef<any>;
    /**
     * Fires when the user clicks an action button.
     */
    action: EventEmitter<CardAction>;
    /**
     * @hidden
     */
    onClick(action: CardAction): void;
    /**
     * @hidden
     */
    actionTemplate(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CardActionsComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<CardActionsComponent, "kendo-card-actions", never, { "orientation": "orientation"; "layout": "layout"; "actions": "actions"; }, { "action": "action"; }, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC1hY3Rpb25zLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJjYXJkLWFjdGlvbnMuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWN0aW9uc0xheW91dCB9IGZyb20gJy4vbW9kZWxzL2FjdGlvbnMtbGF5b3V0JztcbmltcG9ydCB7IENhcmRBY3Rpb24gfSBmcm9tICcuL21vZGVscy9jYXJkLWFjdGlvbic7XG5pbXBvcnQgeyBPcmllbnRhdGlvbiB9IGZyb20gJy4uL2NvbW1vbi9vcmllbnRhdGlvbic7XG4vKipcbiAqIFNwZWNpZmllcyB0aGUgYWN0aW9uIGJ1dHRvbnMgb2YgdGhlIENhcmQuXG4gKiAqIChbc2VlIGV4YW1wbGVdKHslIHNsdWcgYWN0aW9uc19jYXJkICV9KSkuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENhcmRBY3Rpb25zQ29tcG9uZW50IHtcbiAgICBob3N0Q2xhc3M6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgc3RyZXRjaGVkQ2xhc3M6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgc3RhcnRDbGFzczogYm9vbGVhbjtcbiAgICByZWFkb25seSBlbmRDbGFzczogYm9vbGVhbjtcbiAgICByZWFkb25seSBjZW50ZXJDbGFzczogYm9vbGVhbjtcbiAgICByZWFkb25seSB2ZXJ0aWNhbENsYXNzOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IGhvcml6b250YWxDbGFzczogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBTcGVjaWZpZXMgdGhlIGxheW91dCBvZiB0aGUgQ2FyZCBhY3Rpb24gYnV0dG9ucy5cbiAgICAgKlxuICAgICAqICogVGhlIHBvc3NpYmxlIHZhbHVlcyBhcmU6XG4gICAgICogKiAoRGVmYXVsdCkgYGhvcml6b250YWxgXG4gICAgICogKiBgdmVydGljYWxgXG4gICAgICpcbiAgICAgKi9cbiAgICBvcmllbnRhdGlvbjogT3JpZW50YXRpb247XG4gICAgLyoqXG4gICAgICogU3BlY2lmaWVzIHRoZSBsYXlvdXQgb2YgdGhlIENhcmQgYWN0aW9uIGJ1dHRvbnMuXG4gICAgICpcbiAgICAgKiBUaGUgcG9zc2libGUgdmFsdWVzIGFyZTpcbiAgICAgKiAqIChEZWZhdWx0KSBgc3RhcnRgXG4gICAgICogKiBgY2VudGVyYFxuICAgICAqICogYGVuZGBcbiAgICAgKiAqIGBzdHJldGNoZWRgXG4gICAgICpcbiAgICAgKi9cbiAgICBsYXlvdXQ6IEFjdGlvbnNMYXlvdXQ7XG4gICAgLyoqXG4gICAgICogQWxsb3dzIHRoZSBkZWNsYXJhdGl2ZSBzcGVjaWZpY2F0aW9uIG9mIHRoZSBDYXJkIGFjdGlvbnMuXG4gICAgICovXG4gICAgYWN0aW9ucz86IENhcmRBY3Rpb25bXSB8IFRlbXBsYXRlUmVmPGFueT47XG4gICAgLyoqXG4gICAgICogRmlyZXMgd2hlbiB0aGUgdXNlciBjbGlja3MgYW4gYWN0aW9uIGJ1dHRvbi5cbiAgICAgKi9cbiAgICBhY3Rpb246IEV2ZW50RW1pdHRlcjxDYXJkQWN0aW9uPjtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgb25DbGljayhhY3Rpb246IENhcmRBY3Rpb24pOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBhY3Rpb25UZW1wbGF0ZSgpOiBib29sZWFuO1xufVxuIl19