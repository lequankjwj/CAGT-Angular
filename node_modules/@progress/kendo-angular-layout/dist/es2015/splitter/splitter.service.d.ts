/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { EventEmitter, NgZone } from '@angular/core';
import { Orientation } from '../common/orientation';
import { SplitterPaneComponent } from './splitter-pane.component';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare type SplitterParameters = {
    containerSize: () => number;
    panes: Array<SplitterPaneComponent>;
    orientation: Orientation;
};
/**
 * @hidden
 */
export declare type SplitterDragState = {
    prev: {
        index: number;
        initialSize: number;
        min: number;
        max: number;
    };
    next: {
        index: number;
        initialSize: number;
        min: number;
        max: number;
    };
};
/**
 * @hidden
 */
export declare class SplitterService {
    private zone;
    panes: Array<SplitterPaneComponent>;
    layoutChange: EventEmitter<any>;
    constructor(zone: NgZone);
    tryToggle(paneIndex: number): boolean;
    toggleContentOverlay(index: number, show: boolean): void;
    dragState(splitbarIndex: number): SplitterDragState;
    setSize(state: SplitterDragState, delta: number): void;
    isDraggable(splitBarIndex: number): boolean;
    isStatic(splitBarIndex: number): boolean;
    pane(index: number): SplitterPaneComponent;
    configure({ panes, orientation, containerSize }: SplitterParameters): void;
    private containerSize;
    private isPercent;
    private toPixels;
    private emit;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SplitterService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<SplitterService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BsaXR0ZXIuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJzcGxpdHRlci5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IEV2ZW50RW1pdHRlciwgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBPcmllbnRhdGlvbiB9IGZyb20gJy4uL2NvbW1vbi9vcmllbnRhdGlvbic7XG5pbXBvcnQgeyBTcGxpdHRlclBhbmVDb21wb25lbnQgfSBmcm9tICcuL3NwbGl0dGVyLXBhbmUuY29tcG9uZW50Jztcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSB0eXBlIFNwbGl0dGVyUGFyYW1ldGVycyA9IHtcbiAgICBjb250YWluZXJTaXplOiAoKSA9PiBudW1iZXI7XG4gICAgcGFuZXM6IEFycmF5PFNwbGl0dGVyUGFuZUNvbXBvbmVudD47XG4gICAgb3JpZW50YXRpb246IE9yaWVudGF0aW9uO1xufTtcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSB0eXBlIFNwbGl0dGVyRHJhZ1N0YXRlID0ge1xuICAgIHByZXY6IHtcbiAgICAgICAgaW5kZXg6IG51bWJlcjtcbiAgICAgICAgaW5pdGlhbFNpemU6IG51bWJlcjtcbiAgICAgICAgbWluOiBudW1iZXI7XG4gICAgICAgIG1heDogbnVtYmVyO1xuICAgIH07XG4gICAgbmV4dDoge1xuICAgICAgICBpbmRleDogbnVtYmVyO1xuICAgICAgICBpbml0aWFsU2l6ZTogbnVtYmVyO1xuICAgICAgICBtaW46IG51bWJlcjtcbiAgICAgICAgbWF4OiBudW1iZXI7XG4gICAgfTtcbn07XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU3BsaXR0ZXJTZXJ2aWNlIHtcbiAgICBwcml2YXRlIHpvbmU7XG4gICAgcGFuZXM6IEFycmF5PFNwbGl0dGVyUGFuZUNvbXBvbmVudD47XG4gICAgbGF5b3V0Q2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBjb25zdHJ1Y3Rvcih6b25lOiBOZ1pvbmUpO1xuICAgIHRyeVRvZ2dsZShwYW5lSW5kZXg6IG51bWJlcik6IGJvb2xlYW47XG4gICAgdG9nZ2xlQ29udGVudE92ZXJsYXkoaW5kZXg6IG51bWJlciwgc2hvdzogYm9vbGVhbik6IHZvaWQ7XG4gICAgZHJhZ1N0YXRlKHNwbGl0YmFySW5kZXg6IG51bWJlcik6IFNwbGl0dGVyRHJhZ1N0YXRlO1xuICAgIHNldFNpemUoc3RhdGU6IFNwbGl0dGVyRHJhZ1N0YXRlLCBkZWx0YTogbnVtYmVyKTogdm9pZDtcbiAgICBpc0RyYWdnYWJsZShzcGxpdEJhckluZGV4OiBudW1iZXIpOiBib29sZWFuO1xuICAgIGlzU3RhdGljKHNwbGl0QmFySW5kZXg6IG51bWJlcik6IGJvb2xlYW47XG4gICAgcGFuZShpbmRleDogbnVtYmVyKTogU3BsaXR0ZXJQYW5lQ29tcG9uZW50O1xuICAgIGNvbmZpZ3VyZSh7IHBhbmVzLCBvcmllbnRhdGlvbiwgY29udGFpbmVyU2l6ZSB9OiBTcGxpdHRlclBhcmFtZXRlcnMpOiB2b2lkO1xuICAgIHByaXZhdGUgY29udGFpbmVyU2l6ZTtcbiAgICBwcml2YXRlIGlzUGVyY2VudDtcbiAgICBwcml2YXRlIHRvUGl4ZWxzO1xuICAgIHByaXZhdGUgZW1pdDtcbn1cbiJdfQ==