/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { AfterContentInit, OnChanges, SimpleChange, QueryList } from '@angular/core';
import { TabContentDirective } from './tab-content.directive';
import { TabTitleDirective } from './tab-title.directive';
/**
 * Represents the tab component of the TabStrip.
 */
import * as ɵngcc0 from '@angular/core';
export declare class TabStripTabComponent implements AfterContentInit, OnChanges {
    active: boolean;
    /**
     * Sets the title of a tab ([see example]({% slug tabs_tabstrip %}#toc-titles)).
     * Used on a tab as an attribute.
     */
    title: string;
    /**
     * Disables a tab ([see example]({% slug tabs_tabstrip %}#toc-disabled-tabs)).
     * Used on a tab as an attribute.
     */
    disabled: boolean;
    /**
     * The CSS classes that will be rendered on the `tab` element.
     * Supports the type of values that are supported by [`ngClass`]({{ site.data.urls.angular['ngclassapi'] }}).
     */
    cssClass: any;
    /**
     * Determines which tab will be selected upon the initial loading of the TabStrip
     * ([see example]({% slug tabs_tabstrip %}#toc-displaying-tabs-on-initial-load)).
     */
    selected: boolean;
    readonly tabContent: TabContentDirective;
    _tabContent: QueryList<TabContentDirective>;
    tabTitle: TabTitleDirective;
    ngAfterContentInit(): void;
    ngOnChanges(changes: {
        [propertyName: string]: SimpleChange;
    }): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TabStripTabComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TabStripTabComponent, "kendo-tabstrip-tab", ["kendoTabStripTab"], { "title": "title"; "disabled": "disabled"; "cssClass": "cssClass"; "selected": "selected"; }, {}, ["tabTitle", "_tabContent"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFic3RyaXAtdGFiLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJ0YWJzdHJpcC10YWIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBBZnRlckNvbnRlbnRJbml0LCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZSwgUXVlcnlMaXN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUYWJDb250ZW50RGlyZWN0aXZlIH0gZnJvbSAnLi90YWItY29udGVudC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgVGFiVGl0bGVEaXJlY3RpdmUgfSBmcm9tICcuL3RhYi10aXRsZS5kaXJlY3RpdmUnO1xuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSB0YWIgY29tcG9uZW50IG9mIHRoZSBUYWJTdHJpcC5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgVGFiU3RyaXBUYWJDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0LCBPbkNoYW5nZXMge1xuICAgIGFjdGl2ZTogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSB0aXRsZSBvZiBhIHRhYiAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIHRhYnNfdGFic3RyaXAgJX0jdG9jLXRpdGxlcykpLlxuICAgICAqIFVzZWQgb24gYSB0YWIgYXMgYW4gYXR0cmlidXRlLlxuICAgICAqL1xuICAgIHRpdGxlOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogRGlzYWJsZXMgYSB0YWIgKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyB0YWJzX3RhYnN0cmlwICV9I3RvYy1kaXNhYmxlZC10YWJzKSkuXG4gICAgICogVXNlZCBvbiBhIHRhYiBhcyBhbiBhdHRyaWJ1dGUuXG4gICAgICovXG4gICAgZGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogVGhlIENTUyBjbGFzc2VzIHRoYXQgd2lsbCBiZSByZW5kZXJlZCBvbiB0aGUgYHRhYmAgZWxlbWVudC5cbiAgICAgKiBTdXBwb3J0cyB0aGUgdHlwZSBvZiB2YWx1ZXMgdGhhdCBhcmUgc3VwcG9ydGVkIGJ5IFtgbmdDbGFzc2BdKHt7IHNpdGUuZGF0YS51cmxzLmFuZ3VsYXJbJ25nY2xhc3NhcGknXSB9fSkuXG4gICAgICovXG4gICAgY3NzQ2xhc3M6IGFueTtcbiAgICAvKipcbiAgICAgKiBEZXRlcm1pbmVzIHdoaWNoIHRhYiB3aWxsIGJlIHNlbGVjdGVkIHVwb24gdGhlIGluaXRpYWwgbG9hZGluZyBvZiB0aGUgVGFiU3RyaXBcbiAgICAgKiAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIHRhYnNfdGFic3RyaXAgJX0jdG9jLWRpc3BsYXlpbmctdGFicy1vbi1pbml0aWFsLWxvYWQpKS5cbiAgICAgKi9cbiAgICBzZWxlY3RlZDogYm9vbGVhbjtcbiAgICByZWFkb25seSB0YWJDb250ZW50OiBUYWJDb250ZW50RGlyZWN0aXZlO1xuICAgIF90YWJDb250ZW50OiBRdWVyeUxpc3Q8VGFiQ29udGVudERpcmVjdGl2ZT47XG4gICAgdGFiVGl0bGU6IFRhYlRpdGxlRGlyZWN0aXZlO1xuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IHtcbiAgICAgICAgW3Byb3BlcnR5TmFtZTogc3RyaW5nXTogU2ltcGxlQ2hhbmdlO1xuICAgIH0pOiB2b2lkO1xufVxuIl19