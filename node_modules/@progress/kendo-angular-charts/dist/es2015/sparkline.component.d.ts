/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { NgZone, ElementRef, ChangeDetectorRef, Renderer2 } from '@angular/core';
import { ConfigurationService } from './common/configuration.service';
import { InstanceEventService } from './events/instance-event.service';
import { ChartInstanceObserver } from './common/chart-instance-observer';
import { ChartComponent } from './chart.component';
import { ThemeService } from './common/theme.service';
import { IntlService } from '@progress/kendo-angular-intl';
import { LocalizationService } from '@progress/kendo-angular-l10n';
/**
 * The root Chart component.
 *
 * @example
 * ```ts
 * import { Component } from '@angular/core';
 *
 * _@Component({
 *   selector: 'my-app',
 *   template: `
 *     <kendo-sparkline [data]="data" type="column">
 *     </kendo-sparkline>
 *   `
 * })
 * class AppComponent {
 *   public data: any[] = [
 *     936, 968, 1025, 999, 998, 1014, 1017, 1010, 1010, 1007,
 *     1004, 988, 990, 988, 987, 995, 946, 954, 991, 984,
 *     974, 956, 986, 936, 955, 1021, 1013, 1005, 958, 953,
 *     952, 940, 937, 980, 966, 965, 928, 916, 910, 980
 *   ];
 * }
 *
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class SparklineComponent extends ChartComponent {
    configurationService: ConfigurationService;
    themeService: ThemeService;
    protected element: ElementRef;
    protected intl: IntlService;
    protected localizationService: LocalizationService;
    protected ngZone: NgZone;
    protected instanceEventService: InstanceEventService;
    protected changeDetector: ChangeDetectorRef;
    protected renderer: Renderer2;
    /**
     * The default series type.
     */
    type: string;
    /**
     * The data for the default Sparkline series.
     * Discarded if series are supplied.
     */
    data: any[];
    /**
     * @hidden
     */
    tooltipWrapperClass: string;
    /**
     * @hidden
     */
    tooltipContentClasses: any;
    protected hostClasses: string[];
    constructor(configurationService: ConfigurationService, themeService: ThemeService, element: ElementRef, intl: IntlService, localizationService: LocalizationService, ngZone: NgZone, instanceEventService: InstanceEventService, changeDetector: ChangeDetectorRef, renderer: Renderer2);
    protected createInstance(element: any, observer: ChartInstanceObserver): void;
    protected updateOptions(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SparklineComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SparklineComponent, "kendo-sparkline", ["kendoSparkline"], { "type": "type"; "data": "data"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BhcmtsaW5lLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJzcGFya2xpbmUuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgTmdab25lLCBFbGVtZW50UmVmLCBDaGFuZ2VEZXRlY3RvclJlZiwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb25maWd1cmF0aW9uU2VydmljZSB9IGZyb20gJy4vY29tbW9uL2NvbmZpZ3VyYXRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBJbnN0YW5jZUV2ZW50U2VydmljZSB9IGZyb20gJy4vZXZlbnRzL2luc3RhbmNlLWV2ZW50LnNlcnZpY2UnO1xuaW1wb3J0IHsgQ2hhcnRJbnN0YW5jZU9ic2VydmVyIH0gZnJvbSAnLi9jb21tb24vY2hhcnQtaW5zdGFuY2Utb2JzZXJ2ZXInO1xuaW1wb3J0IHsgQ2hhcnRDb21wb25lbnQgfSBmcm9tICcuL2NoYXJ0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUaGVtZVNlcnZpY2UgfSBmcm9tICcuL2NvbW1vbi90aGVtZS5zZXJ2aWNlJztcbmltcG9ydCB7IEludGxTZXJ2aWNlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItaW50bCc7XG5pbXBvcnQgeyBMb2NhbGl6YXRpb25TZXJ2aWNlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItbDEwbic7XG4vKipcbiAqIFRoZSByb290IENoYXJ0IGNvbXBvbmVudC5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuICpcbiAqIF9AQ29tcG9uZW50KHtcbiAqICAgc2VsZWN0b3I6ICdteS1hcHAnLFxuICogICB0ZW1wbGF0ZTogYFxuICogICAgIDxrZW5kby1zcGFya2xpbmUgW2RhdGFdPVwiZGF0YVwiIHR5cGU9XCJjb2x1bW5cIj5cbiAqICAgICA8L2tlbmRvLXNwYXJrbGluZT5cbiAqICAgYFxuICogfSlcbiAqIGNsYXNzIEFwcENvbXBvbmVudCB7XG4gKiAgIHB1YmxpYyBkYXRhOiBhbnlbXSA9IFtcbiAqICAgICA5MzYsIDk2OCwgMTAyNSwgOTk5LCA5OTgsIDEwMTQsIDEwMTcsIDEwMTAsIDEwMTAsIDEwMDcsXG4gKiAgICAgMTAwNCwgOTg4LCA5OTAsIDk4OCwgOTg3LCA5OTUsIDk0NiwgOTU0LCA5OTEsIDk4NCxcbiAqICAgICA5NzQsIDk1NiwgOTg2LCA5MzYsIDk1NSwgMTAyMSwgMTAxMywgMTAwNSwgOTU4LCA5NTMsXG4gKiAgICAgOTUyLCA5NDAsIDkzNywgOTgwLCA5NjYsIDk2NSwgOTI4LCA5MTYsIDkxMCwgOTgwXG4gKiAgIF07XG4gKiB9XG4gKlxuICogYGBgXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFNwYXJrbGluZUNvbXBvbmVudCBleHRlbmRzIENoYXJ0Q29tcG9uZW50IHtcbiAgICBjb25maWd1cmF0aW9uU2VydmljZTogQ29uZmlndXJhdGlvblNlcnZpY2U7XG4gICAgdGhlbWVTZXJ2aWNlOiBUaGVtZVNlcnZpY2U7XG4gICAgcHJvdGVjdGVkIGVsZW1lbnQ6IEVsZW1lbnRSZWY7XG4gICAgcHJvdGVjdGVkIGludGw6IEludGxTZXJ2aWNlO1xuICAgIHByb3RlY3RlZCBsb2NhbGl6YXRpb25TZXJ2aWNlOiBMb2NhbGl6YXRpb25TZXJ2aWNlO1xuICAgIHByb3RlY3RlZCBuZ1pvbmU6IE5nWm9uZTtcbiAgICBwcm90ZWN0ZWQgaW5zdGFuY2VFdmVudFNlcnZpY2U6IEluc3RhbmNlRXZlbnRTZXJ2aWNlO1xuICAgIHByb3RlY3RlZCBjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWY7XG4gICAgcHJvdGVjdGVkIHJlbmRlcmVyOiBSZW5kZXJlcjI7XG4gICAgLyoqXG4gICAgICogVGhlIGRlZmF1bHQgc2VyaWVzIHR5cGUuXG4gICAgICovXG4gICAgdHlwZTogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSBkYXRhIGZvciB0aGUgZGVmYXVsdCBTcGFya2xpbmUgc2VyaWVzLlxuICAgICAqIERpc2NhcmRlZCBpZiBzZXJpZXMgYXJlIHN1cHBsaWVkLlxuICAgICAqL1xuICAgIGRhdGE6IGFueVtdO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICB0b29sdGlwV3JhcHBlckNsYXNzOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHRvb2x0aXBDb250ZW50Q2xhc3NlczogYW55O1xuICAgIHByb3RlY3RlZCBob3N0Q2xhc3Nlczogc3RyaW5nW107XG4gICAgY29uc3RydWN0b3IoY29uZmlndXJhdGlvblNlcnZpY2U6IENvbmZpZ3VyYXRpb25TZXJ2aWNlLCB0aGVtZVNlcnZpY2U6IFRoZW1lU2VydmljZSwgZWxlbWVudDogRWxlbWVudFJlZiwgaW50bDogSW50bFNlcnZpY2UsIGxvY2FsaXphdGlvblNlcnZpY2U6IExvY2FsaXphdGlvblNlcnZpY2UsIG5nWm9uZTogTmdab25lLCBpbnN0YW5jZUV2ZW50U2VydmljZTogSW5zdGFuY2VFdmVudFNlcnZpY2UsIGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZiwgcmVuZGVyZXI6IFJlbmRlcmVyMik7XG4gICAgcHJvdGVjdGVkIGNyZWF0ZUluc3RhbmNlKGVsZW1lbnQ6IGFueSwgb2JzZXJ2ZXI6IENoYXJ0SW5zdGFuY2VPYnNlcnZlcik6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIHVwZGF0ZU9wdGlvbnMoKTogdm9pZDtcbn1cbiJdfQ==