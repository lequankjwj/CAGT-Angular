/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { CollectionService } from '../common/collection.service';
import { CollectionItemComponent } from '../common/collection-item.component';
import { ConfigurationService } from '../common/configuration.service';
import { AxisLine, AxisTicks, GridLines, PlotBand } from '../common/property-types';
import { ValueAxisCrosshair, ValueAxisLabels, ValueAxisNotes, ValueAxisTitle, ValueAxis } from '../common/property-types';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare abstract class ValueAxisItemComponentGenerated extends CollectionItemComponent implements ValueAxis {
    protected configurationService: ConfigurationService;
    protected collectionService: CollectionService;
    axisCrossingValue: any | any[];
    background: string;
    color: string;
    line: AxisLine;
    majorGridLines: GridLines;
    majorTicks: AxisTicks;
    majorUnit: number;
    max: any;
    min: any;
    minorGridLines: GridLines;
    minorTicks: AxisTicks;
    minorUnit: number;
    name: string;
    narrowRange: boolean;
    pane: string;
    plotBands: PlotBand[];
    reverse: boolean;
    type: 'numeric' | 'log';
    visible: boolean;
    crosshair: ValueAxisCrosshair;
    labels: ValueAxisLabels;
    notes: ValueAxisNotes;
    title: ValueAxisTitle;
    constructor(configurationService: ConfigurationService, collectionService: CollectionService);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ValueAxisItemComponentGenerated, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ValueAxisItemComponentGenerated, never, never, { "axisCrossingValue": "axisCrossingValue"; "background": "background"; "color": "color"; "line": "line"; "majorGridLines": "majorGridLines"; "majorTicks": "majorTicks"; "majorUnit": "majorUnit"; "max": "max"; "min": "min"; "minorGridLines": "minorGridLines"; "minorTicks": "minorTicks"; "minorUnit": "minorUnit"; "name": "name"; "narrowRange": "narrowRange"; "pane": "pane"; "plotBands": "plotBands"; "reverse": "reverse"; "type": "type"; "visible": "visible"; "crosshair": "crosshair"; "labels": "labels"; "notes": "notes"; "title": "title"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFsdWUtYXhpcy1pdGVtLmNvbXBvbmVudC5nZW5lcmF0ZWQuZC50cyIsInNvdXJjZXMiOlsidmFsdWUtYXhpcy1pdGVtLmNvbXBvbmVudC5nZW5lcmF0ZWQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IENvbGxlY3Rpb25TZXJ2aWNlIH0gZnJvbSAnLi4vY29tbW9uL2NvbGxlY3Rpb24uc2VydmljZSc7XG5pbXBvcnQgeyBDb2xsZWN0aW9uSXRlbUNvbXBvbmVudCB9IGZyb20gJy4uL2NvbW1vbi9jb2xsZWN0aW9uLWl0ZW0uY29tcG9uZW50JztcbmltcG9ydCB7IENvbmZpZ3VyYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi4vY29tbW9uL2NvbmZpZ3VyYXRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBBeGlzTGluZSwgQXhpc1RpY2tzLCBHcmlkTGluZXMsIFBsb3RCYW5kIH0gZnJvbSAnLi4vY29tbW9uL3Byb3BlcnR5LXR5cGVzJztcbmltcG9ydCB7IFZhbHVlQXhpc0Nyb3NzaGFpciwgVmFsdWVBeGlzTGFiZWxzLCBWYWx1ZUF4aXNOb3RlcywgVmFsdWVBeGlzVGl0bGUsIFZhbHVlQXhpcyB9IGZyb20gJy4uL2NvbW1vbi9wcm9wZXJ0eS10eXBlcyc7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgYWJzdHJhY3QgY2xhc3MgVmFsdWVBeGlzSXRlbUNvbXBvbmVudEdlbmVyYXRlZCBleHRlbmRzIENvbGxlY3Rpb25JdGVtQ29tcG9uZW50IGltcGxlbWVudHMgVmFsdWVBeGlzIHtcbiAgICBwcm90ZWN0ZWQgY29uZmlndXJhdGlvblNlcnZpY2U6IENvbmZpZ3VyYXRpb25TZXJ2aWNlO1xuICAgIHByb3RlY3RlZCBjb2xsZWN0aW9uU2VydmljZTogQ29sbGVjdGlvblNlcnZpY2U7XG4gICAgYXhpc0Nyb3NzaW5nVmFsdWU6IGFueSB8IGFueVtdO1xuICAgIGJhY2tncm91bmQ6IHN0cmluZztcbiAgICBjb2xvcjogc3RyaW5nO1xuICAgIGxpbmU6IEF4aXNMaW5lO1xuICAgIG1ham9yR3JpZExpbmVzOiBHcmlkTGluZXM7XG4gICAgbWFqb3JUaWNrczogQXhpc1RpY2tzO1xuICAgIG1ham9yVW5pdDogbnVtYmVyO1xuICAgIG1heDogYW55O1xuICAgIG1pbjogYW55O1xuICAgIG1pbm9yR3JpZExpbmVzOiBHcmlkTGluZXM7XG4gICAgbWlub3JUaWNrczogQXhpc1RpY2tzO1xuICAgIG1pbm9yVW5pdDogbnVtYmVyO1xuICAgIG5hbWU6IHN0cmluZztcbiAgICBuYXJyb3dSYW5nZTogYm9vbGVhbjtcbiAgICBwYW5lOiBzdHJpbmc7XG4gICAgcGxvdEJhbmRzOiBQbG90QmFuZFtdO1xuICAgIHJldmVyc2U6IGJvb2xlYW47XG4gICAgdHlwZTogJ251bWVyaWMnIHwgJ2xvZyc7XG4gICAgdmlzaWJsZTogYm9vbGVhbjtcbiAgICBjcm9zc2hhaXI6IFZhbHVlQXhpc0Nyb3NzaGFpcjtcbiAgICBsYWJlbHM6IFZhbHVlQXhpc0xhYmVscztcbiAgICBub3RlczogVmFsdWVBeGlzTm90ZXM7XG4gICAgdGl0bGU6IFZhbHVlQXhpc1RpdGxlO1xuICAgIGNvbnN0cnVjdG9yKGNvbmZpZ3VyYXRpb25TZXJ2aWNlOiBDb25maWd1cmF0aW9uU2VydmljZSwgY29sbGVjdGlvblNlcnZpY2U6IENvbGxlY3Rpb25TZXJ2aWNlKTtcbn1cbiJdfQ==