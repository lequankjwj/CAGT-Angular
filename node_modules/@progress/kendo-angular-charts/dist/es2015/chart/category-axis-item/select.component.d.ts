/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ConfigurationService } from '../../common/configuration.service';
import { CategoryAxisSelectComponentGenerated } from '../category-axis-item/select.component.generated';
/**
 * The selected axis range. If set, the axis selection is enabled. The range is index-based and starts from zero.
 * Categories with indexes in the
 * ([`select.from`]({% slug api_charts_categoryaxisselectcomponent %}#toc-from)
 * &mdash;[`select.to`]({% slug api_charts_categoryaxisselectcomponent %}#toc-to)) range will be selected.
 * This means that the last category in the range will not be included in the selection.
 * If the categories are dates, the range has to be also specified with date values.
 */
import * as ɵngcc0 from '@angular/core';
export declare class CategoryAxisSelectComponent extends CategoryAxisSelectComponentGenerated {
    configurationService: ConfigurationService;
    constructor(configurationService: ConfigurationService);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CategoryAxisSelectComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<CategoryAxisSelectComponent, "kendo-chart-category-axis-item-select", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJzZWxlY3QuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgQ29uZmlndXJhdGlvblNlcnZpY2UgfSBmcm9tICcuLi8uLi9jb21tb24vY29uZmlndXJhdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IENhdGVnb3J5QXhpc1NlbGVjdENvbXBvbmVudEdlbmVyYXRlZCB9IGZyb20gJy4uL2NhdGVnb3J5LWF4aXMtaXRlbS9zZWxlY3QuY29tcG9uZW50LmdlbmVyYXRlZCc7XG4vKipcbiAqIFRoZSBzZWxlY3RlZCBheGlzIHJhbmdlLiBJZiBzZXQsIHRoZSBheGlzIHNlbGVjdGlvbiBpcyBlbmFibGVkLiBUaGUgcmFuZ2UgaXMgaW5kZXgtYmFzZWQgYW5kIHN0YXJ0cyBmcm9tIHplcm8uXG4gKiBDYXRlZ29yaWVzIHdpdGggaW5kZXhlcyBpbiB0aGVcbiAqIChbYHNlbGVjdC5mcm9tYF0oeyUgc2x1ZyBhcGlfY2hhcnRzX2NhdGVnb3J5YXhpc3NlbGVjdGNvbXBvbmVudCAlfSN0b2MtZnJvbSlcbiAqICZtZGFzaDtbYHNlbGVjdC50b2BdKHslIHNsdWcgYXBpX2NoYXJ0c19jYXRlZ29yeWF4aXNzZWxlY3Rjb21wb25lbnQgJX0jdG9jLXRvKSkgcmFuZ2Ugd2lsbCBiZSBzZWxlY3RlZC5cbiAqIFRoaXMgbWVhbnMgdGhhdCB0aGUgbGFzdCBjYXRlZ29yeSBpbiB0aGUgcmFuZ2Ugd2lsbCBub3QgYmUgaW5jbHVkZWQgaW4gdGhlIHNlbGVjdGlvbi5cbiAqIElmIHRoZSBjYXRlZ29yaWVzIGFyZSBkYXRlcywgdGhlIHJhbmdlIGhhcyB0byBiZSBhbHNvIHNwZWNpZmllZCB3aXRoIGRhdGUgdmFsdWVzLlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDYXRlZ29yeUF4aXNTZWxlY3RDb21wb25lbnQgZXh0ZW5kcyBDYXRlZ29yeUF4aXNTZWxlY3RDb21wb25lbnRHZW5lcmF0ZWQge1xuICAgIGNvbmZpZ3VyYXRpb25TZXJ2aWNlOiBDb25maWd1cmF0aW9uU2VydmljZTtcbiAgICBjb25zdHJ1Y3Rvcihjb25maWd1cmF0aW9uU2VydmljZTogQ29uZmlndXJhdGlvblNlcnZpY2UpO1xufVxuIl19