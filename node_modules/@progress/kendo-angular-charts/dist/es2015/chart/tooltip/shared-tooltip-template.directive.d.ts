/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { TemplateRef } from '@angular/core';
/**
 * A directive that selects a [template]({{ site.data.urls.angular['templatesyntax'] }})
 * within the `<kendo-chart-tooltip>` component for the
 * [shared series tooltip]({% slug tooltips_chart_charts %}#toc-shared-tooltip).
 *
 * @example
 * ```ts
 * import { Component } from '@angular/core';
 *
 * _@Component({
 *   selector: 'my-app',
 *   template: `
 *     <kendo-chart>
 *       <kendo-chart-tooltip [shared]="true">
 *         <ng-template kendoChartSharedTooltipTemplate let-category="category" let-points="points">
 *             <div> {{ category }} </div>
 *             <div *ngFor="let point of points">
 *                 {{ point.series.name }} : {{ point.value }}
 *             </div>
 *         </ng-template>
 *       </kendo-chart-tooltip>
 *       <kendo-chart-category-axis>
 *         <kendo-chart-category-axis-item [categories]="['A', 'B', 'C']">
 *         </kendo-chart-category-axis-item>
 *       </kendo-chart-category-axis>
 *       <kendo-chart-series>
 *         <kendo-chart-series-item name="A" [data]="[1, 2, 3]">
 *         </kendo-chart-series-item>
 *         <kendo-chart-series-item name="B" [data]="[1, 2, 3]">
 *         </kendo-chart-series-item>
 *       </kendo-chart-series>
 *     </kendo-chart>
 *   `
 * })
 * class AppComponent {
 * }
 *
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class SharedTooltipTemplateDirective {
    templateRef: TemplateRef<any>;
    constructor(templateRef: TemplateRef<any>);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SharedTooltipTemplateDirective, [{ optional: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<SharedTooltipTemplateDirective, "[kendoChartSharedTooltipTemplate]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhcmVkLXRvb2x0aXAtdGVtcGxhdGUuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbInNoYXJlZC10b29sdGlwLXRlbXBsYXRlLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG4vKipcbiAqIEEgZGlyZWN0aXZlIHRoYXQgc2VsZWN0cyBhIFt0ZW1wbGF0ZV0oe3sgc2l0ZS5kYXRhLnVybHMuYW5ndWxhclsndGVtcGxhdGVzeW50YXgnXSB9fSlcbiAqIHdpdGhpbiB0aGUgYDxrZW5kby1jaGFydC10b29sdGlwPmAgY29tcG9uZW50IGZvciB0aGVcbiAqIFtzaGFyZWQgc2VyaWVzIHRvb2x0aXBdKHslIHNsdWcgdG9vbHRpcHNfY2hhcnRfY2hhcnRzICV9I3RvYy1zaGFyZWQtdG9vbHRpcCkuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbiAqXG4gKiBfQENvbXBvbmVudCh7XG4gKiAgIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAqICAgdGVtcGxhdGU6IGBcbiAqICAgICA8a2VuZG8tY2hhcnQ+XG4gKiAgICAgICA8a2VuZG8tY2hhcnQtdG9vbHRpcCBbc2hhcmVkXT1cInRydWVcIj5cbiAqICAgICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvQ2hhcnRTaGFyZWRUb29sdGlwVGVtcGxhdGUgbGV0LWNhdGVnb3J5PVwiY2F0ZWdvcnlcIiBsZXQtcG9pbnRzPVwicG9pbnRzXCI+XG4gKiAgICAgICAgICAgICA8ZGl2PiB7eyBjYXRlZ29yeSB9fSA8L2Rpdj5cbiAqICAgICAgICAgICAgIDxkaXYgKm5nRm9yPVwibGV0IHBvaW50IG9mIHBvaW50c1wiPlxuICogICAgICAgICAgICAgICAgIHt7IHBvaW50LnNlcmllcy5uYW1lIH19IDoge3sgcG9pbnQudmFsdWUgfX1cbiAqICAgICAgICAgICAgIDwvZGl2PlxuICogICAgICAgICA8L25nLXRlbXBsYXRlPlxuICogICAgICAgPC9rZW5kby1jaGFydC10b29sdGlwPlxuICogICAgICAgPGtlbmRvLWNoYXJ0LWNhdGVnb3J5LWF4aXM+XG4gKiAgICAgICAgIDxrZW5kby1jaGFydC1jYXRlZ29yeS1heGlzLWl0ZW0gW2NhdGVnb3JpZXNdPVwiWydBJywgJ0InLCAnQyddXCI+XG4gKiAgICAgICAgIDwva2VuZG8tY2hhcnQtY2F0ZWdvcnktYXhpcy1pdGVtPlxuICogICAgICAgPC9rZW5kby1jaGFydC1jYXRlZ29yeS1heGlzPlxuICogICAgICAgPGtlbmRvLWNoYXJ0LXNlcmllcz5cbiAqICAgICAgICAgPGtlbmRvLWNoYXJ0LXNlcmllcy1pdGVtIG5hbWU9XCJBXCIgW2RhdGFdPVwiWzEsIDIsIDNdXCI+XG4gKiAgICAgICAgIDwva2VuZG8tY2hhcnQtc2VyaWVzLWl0ZW0+XG4gKiAgICAgICAgIDxrZW5kby1jaGFydC1zZXJpZXMtaXRlbSBuYW1lPVwiQlwiIFtkYXRhXT1cIlsxLCAyLCAzXVwiPlxuICogICAgICAgICA8L2tlbmRvLWNoYXJ0LXNlcmllcy1pdGVtPlxuICogICAgICAgPC9rZW5kby1jaGFydC1zZXJpZXM+XG4gKiAgICAgPC9rZW5kby1jaGFydD5cbiAqICAgYFxuICogfSlcbiAqIGNsYXNzIEFwcENvbXBvbmVudCB7XG4gKiB9XG4gKlxuICogYGBgXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFNoYXJlZFRvb2x0aXBUZW1wbGF0ZURpcmVjdGl2ZSB7XG4gICAgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgY29uc3RydWN0b3IodGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT4pO1xufVxuIl19