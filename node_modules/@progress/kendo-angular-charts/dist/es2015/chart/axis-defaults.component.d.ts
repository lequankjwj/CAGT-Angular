/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ConfigurationService } from '../common/configuration.service';
import { AxisDefaultsComponentGenerated } from './axis-defaults.component.generated';
/**
 * The default options for all Chart axes.
 * Accepts the options which are supported by [`categoryAxis`]({% slug api_charts_categoryaxisitemcomponent %}),
 * [`valueAxis`]({% slug api_charts_valueaxisitemcomponent %}),
 * [`xAxis`]({% slug api_charts_xaxisitemcomponent %}),
 * and [`yAxis`]({% slug api_charts_yaxisitemcomponent %}).
 *
 * @example
 * ```ts-preview
 * import { Component } from '@angular/core';
 *
 * _@Component({
 *   selector: 'my-app',
 *   template: `
 *  <div style="height: 600px;">
 *  <kendo-chart [categoryAxis]="{ categories: categories }" [chartArea]="{height: 600}" >
 *    <kendo-chart-axis-defaults
 *      [background]="background"
 *      [color]="color"
 *      [crosshair]="crosshair"
 *      [labels]="labels"
 *      [line]="line"
 *      [majorGridLines]="majorGridLines"
 *      [minorGridLines]="minorGridLines"
 *      [majorTicks]="majorTicks"
 *      [minorTicks]="minorTicks"
 *      [title]="title"
 *      ></kendo-chart-axis-defaults>
 *    <kendo-chart-title text="Gross domestic product growth /GDP annual %/"></kendo-chart-title>
 *    <kendo-chart-legend position="bottom" orientation="horizontal"></kendo-chart-legend>
 *    <kendo-chart-tooltip format="{0}%"></kendo-chart-tooltip>
 *    <kendo-chart-series>
 *        <kendo-chart-series-item *ngFor="let item of series"
 *            type="line" style="smooth" [data]="item.data" [name]="item.name">
 *        </kendo-chart-series-item>
 *    </kendo-chart-series>
 *  </kendo-chart>
 *  </div>
 * `
 * })
 * export class AppComponent {
 * public series: any[] = [{
 * name: "India",
 * data: [4, 8, 8, 9, 9, 9, 3, 8, 9, 6]
 * }, {
 * name: "Russian Federation",
 * data: [4, 7, 7, 6, 8, 8, 5, 8, 4, 4]
 * }, {
 * name: "Germany",
 * data: [0, 0, 1, 1, 4, 3, 1, 5, 4, 3]
 * },{
 * name: "World",
 * data: [2, 3, 4, 4, 4, 4, 1, 2, 4, 3]
 * }];
 *
 * public  categories: number[] = [2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011];
 *
 * public background = 'white';
 * // public color = 'cyan'; // will override the line.color option
 * public crosshair = {
 * visible: true
 * };
 * public labels = {
 * font: 'bold 12px/30px Helvetica, Arial, sans-serif',
 * color: '#4CAF50',
 * padding: 5,
 * rotation: 45,
 * background: 'white',
 * border: {
 * color: '#4CAF50',
 * width: 2
 * },
 * };
 * public line = {
 * color: 'black',
 * width: 3
 * };
 *
 * public majorGridLines = {
 * color: 'black',
 * visible: true
 * }
 *
 * public minorGridLines = {
 * color: 'lightgray',
 * visible: true
 * }
 *
 * public majorTicks = {
 * color: 'black',
 * size: 15
 * }
 *
 * public minorTicks = {
 * color: 'lightgray',
 * size: 10
 * }
 *
 * public title = {
 * text: 'Default Axis Title',
 * color: 'black',
 * background: 'white',
 * border: {
 * color: 'black',
 * width: 2
 * },
 * padding: 10
 * }
 * }
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class AxisDefaultsComponent extends AxisDefaultsComponentGenerated {
    configurationService: ConfigurationService;
    constructor(configurationService: ConfigurationService);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AxisDefaultsComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AxisDefaultsComponent, "kendo-chart-axis-defaults", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXhpcy1kZWZhdWx0cy5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiYXhpcy1kZWZhdWx0cy5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IENvbmZpZ3VyYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi4vY29tbW9uL2NvbmZpZ3VyYXRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBBeGlzRGVmYXVsdHNDb21wb25lbnRHZW5lcmF0ZWQgfSBmcm9tICcuL2F4aXMtZGVmYXVsdHMuY29tcG9uZW50LmdlbmVyYXRlZCc7XG4vKipcbiAqIFRoZSBkZWZhdWx0IG9wdGlvbnMgZm9yIGFsbCBDaGFydCBheGVzLlxuICogQWNjZXB0cyB0aGUgb3B0aW9ucyB3aGljaCBhcmUgc3VwcG9ydGVkIGJ5IFtgY2F0ZWdvcnlBeGlzYF0oeyUgc2x1ZyBhcGlfY2hhcnRzX2NhdGVnb3J5YXhpc2l0ZW1jb21wb25lbnQgJX0pLFxuICogW2B2YWx1ZUF4aXNgXSh7JSBzbHVnIGFwaV9jaGFydHNfdmFsdWVheGlzaXRlbWNvbXBvbmVudCAlfSksXG4gKiBbYHhBeGlzYF0oeyUgc2x1ZyBhcGlfY2hhcnRzX3hheGlzaXRlbWNvbXBvbmVudCAlfSksXG4gKiBhbmQgW2B5QXhpc2BdKHslIHNsdWcgYXBpX2NoYXJ0c195YXhpc2l0ZW1jb21wb25lbnQgJX0pLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0cy1wcmV2aWV3XG4gKiBpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbiAqXG4gKiBfQENvbXBvbmVudCh7XG4gKiAgIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAqICAgdGVtcGxhdGU6IGBcbiAqICA8ZGl2IHN0eWxlPVwiaGVpZ2h0OiA2MDBweDtcIj5cbiAqICA8a2VuZG8tY2hhcnQgW2NhdGVnb3J5QXhpc109XCJ7IGNhdGVnb3JpZXM6IGNhdGVnb3JpZXMgfVwiIFtjaGFydEFyZWFdPVwie2hlaWdodDogNjAwfVwiID5cbiAqICAgIDxrZW5kby1jaGFydC1heGlzLWRlZmF1bHRzXG4gKiAgICAgIFtiYWNrZ3JvdW5kXT1cImJhY2tncm91bmRcIlxuICogICAgICBbY29sb3JdPVwiY29sb3JcIlxuICogICAgICBbY3Jvc3NoYWlyXT1cImNyb3NzaGFpclwiXG4gKiAgICAgIFtsYWJlbHNdPVwibGFiZWxzXCJcbiAqICAgICAgW2xpbmVdPVwibGluZVwiXG4gKiAgICAgIFttYWpvckdyaWRMaW5lc109XCJtYWpvckdyaWRMaW5lc1wiXG4gKiAgICAgIFttaW5vckdyaWRMaW5lc109XCJtaW5vckdyaWRMaW5lc1wiXG4gKiAgICAgIFttYWpvclRpY2tzXT1cIm1ham9yVGlja3NcIlxuICogICAgICBbbWlub3JUaWNrc109XCJtaW5vclRpY2tzXCJcbiAqICAgICAgW3RpdGxlXT1cInRpdGxlXCJcbiAqICAgICAgPjwva2VuZG8tY2hhcnQtYXhpcy1kZWZhdWx0cz5cbiAqICAgIDxrZW5kby1jaGFydC10aXRsZSB0ZXh0PVwiR3Jvc3MgZG9tZXN0aWMgcHJvZHVjdCBncm93dGggL0dEUCBhbm51YWwgJS9cIj48L2tlbmRvLWNoYXJ0LXRpdGxlPlxuICogICAgPGtlbmRvLWNoYXJ0LWxlZ2VuZCBwb3NpdGlvbj1cImJvdHRvbVwiIG9yaWVudGF0aW9uPVwiaG9yaXpvbnRhbFwiPjwva2VuZG8tY2hhcnQtbGVnZW5kPlxuICogICAgPGtlbmRvLWNoYXJ0LXRvb2x0aXAgZm9ybWF0PVwiezB9JVwiPjwva2VuZG8tY2hhcnQtdG9vbHRpcD5cbiAqICAgIDxrZW5kby1jaGFydC1zZXJpZXM+XG4gKiAgICAgICAgPGtlbmRvLWNoYXJ0LXNlcmllcy1pdGVtICpuZ0Zvcj1cImxldCBpdGVtIG9mIHNlcmllc1wiXG4gKiAgICAgICAgICAgIHR5cGU9XCJsaW5lXCIgc3R5bGU9XCJzbW9vdGhcIiBbZGF0YV09XCJpdGVtLmRhdGFcIiBbbmFtZV09XCJpdGVtLm5hbWVcIj5cbiAqICAgICAgICA8L2tlbmRvLWNoYXJ0LXNlcmllcy1pdGVtPlxuICogICAgPC9rZW5kby1jaGFydC1zZXJpZXM+XG4gKiAgPC9rZW5kby1jaGFydD5cbiAqICA8L2Rpdj5cbiAqIGBcbiAqIH0pXG4gKiBleHBvcnQgY2xhc3MgQXBwQ29tcG9uZW50IHtcbiAqIHB1YmxpYyBzZXJpZXM6IGFueVtdID0gW3tcbiAqIG5hbWU6IFwiSW5kaWFcIixcbiAqIGRhdGE6IFs0LCA4LCA4LCA5LCA5LCA5LCAzLCA4LCA5LCA2XVxuICogfSwge1xuICogbmFtZTogXCJSdXNzaWFuIEZlZGVyYXRpb25cIixcbiAqIGRhdGE6IFs0LCA3LCA3LCA2LCA4LCA4LCA1LCA4LCA0LCA0XVxuICogfSwge1xuICogbmFtZTogXCJHZXJtYW55XCIsXG4gKiBkYXRhOiBbMCwgMCwgMSwgMSwgNCwgMywgMSwgNSwgNCwgM11cbiAqIH0se1xuICogbmFtZTogXCJXb3JsZFwiLFxuICogZGF0YTogWzIsIDMsIDQsIDQsIDQsIDQsIDEsIDIsIDQsIDNdXG4gKiB9XTtcbiAqXG4gKiBwdWJsaWMgIGNhdGVnb3JpZXM6IG51bWJlcltdID0gWzIwMDIsIDIwMDMsIDIwMDQsIDIwMDUsIDIwMDYsIDIwMDcsIDIwMDgsIDIwMDksIDIwMTAsIDIwMTFdO1xuICpcbiAqIHB1YmxpYyBiYWNrZ3JvdW5kID0gJ3doaXRlJztcbiAqIC8vIHB1YmxpYyBjb2xvciA9ICdjeWFuJzsgLy8gd2lsbCBvdmVycmlkZSB0aGUgbGluZS5jb2xvciBvcHRpb25cbiAqIHB1YmxpYyBjcm9zc2hhaXIgPSB7XG4gKiB2aXNpYmxlOiB0cnVlXG4gKiB9O1xuICogcHVibGljIGxhYmVscyA9IHtcbiAqIGZvbnQ6ICdib2xkIDEycHgvMzBweCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmJyxcbiAqIGNvbG9yOiAnIzRDQUY1MCcsXG4gKiBwYWRkaW5nOiA1LFxuICogcm90YXRpb246IDQ1LFxuICogYmFja2dyb3VuZDogJ3doaXRlJyxcbiAqIGJvcmRlcjoge1xuICogY29sb3I6ICcjNENBRjUwJyxcbiAqIHdpZHRoOiAyXG4gKiB9LFxuICogfTtcbiAqIHB1YmxpYyBsaW5lID0ge1xuICogY29sb3I6ICdibGFjaycsXG4gKiB3aWR0aDogM1xuICogfTtcbiAqXG4gKiBwdWJsaWMgbWFqb3JHcmlkTGluZXMgPSB7XG4gKiBjb2xvcjogJ2JsYWNrJyxcbiAqIHZpc2libGU6IHRydWVcbiAqIH1cbiAqXG4gKiBwdWJsaWMgbWlub3JHcmlkTGluZXMgPSB7XG4gKiBjb2xvcjogJ2xpZ2h0Z3JheScsXG4gKiB2aXNpYmxlOiB0cnVlXG4gKiB9XG4gKlxuICogcHVibGljIG1ham9yVGlja3MgPSB7XG4gKiBjb2xvcjogJ2JsYWNrJyxcbiAqIHNpemU6IDE1XG4gKiB9XG4gKlxuICogcHVibGljIG1pbm9yVGlja3MgPSB7XG4gKiBjb2xvcjogJ2xpZ2h0Z3JheScsXG4gKiBzaXplOiAxMFxuICogfVxuICpcbiAqIHB1YmxpYyB0aXRsZSA9IHtcbiAqIHRleHQ6ICdEZWZhdWx0IEF4aXMgVGl0bGUnLFxuICogY29sb3I6ICdibGFjaycsXG4gKiBiYWNrZ3JvdW5kOiAnd2hpdGUnLFxuICogYm9yZGVyOiB7XG4gKiBjb2xvcjogJ2JsYWNrJyxcbiAqIHdpZHRoOiAyXG4gKiB9LFxuICogcGFkZGluZzogMTBcbiAqIH1cbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBBeGlzRGVmYXVsdHNDb21wb25lbnQgZXh0ZW5kcyBBeGlzRGVmYXVsdHNDb21wb25lbnRHZW5lcmF0ZWQge1xuICAgIGNvbmZpZ3VyYXRpb25TZXJ2aWNlOiBDb25maWd1cmF0aW9uU2VydmljZTtcbiAgICBjb25zdHJ1Y3Rvcihjb25maWd1cmF0aW9uU2VydmljZTogQ29uZmlndXJhdGlvblNlcnZpY2UpO1xufVxuIl19