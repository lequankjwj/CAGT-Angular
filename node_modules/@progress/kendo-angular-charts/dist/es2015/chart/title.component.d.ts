/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ConfigurationService } from '../common/configuration.service';
import { TitleComponentGenerated } from './title.component.generated';
/**
 * The configuration options of the Chart title or text
 * ([see example]({% slug title_chart_charts %})).
 *
 * @example
 * ```ts-preview
 * import { Component } from '@angular/core';
 *
 * _@Component({
 *    selector: 'my-app',
 *    template: `
 *        <kendo-chart [categoryAxis]="{ categories: categories }">
 *            <kendo-chart-title text="Gross domestic product growth /GDP annual %/"></kendo-chart-title>
 *            <kendo-chart-legend
 *              position="bottom"
 *              orientation="horizontal"
 *              align="end"
 *              background="rgba(255, 0, 0, 0.1)"
 *              [border]="borderOptions"
 *              [margin]="10"
 *              [padding]="10"
 *              [width]="150"
 *              [offsetX]="11"
 *              [offsetY]="-103"
 *              [reverse]="true"
 *              [visible]="isVisible"
 *              ></kendo-chart-legend>
 *            <kendo-chart-tooltip format="{0}%"></kendo-chart-tooltip>
 *            <kendo-chart-series>
 *                <kendo-chart-series-item *ngFor="let item of series"
 *                    type="line" style="smooth" [data]="item.data" [name]="item.name">
 *                </kendo-chart-series-item>
 *            </kendo-chart-series>
 *        </kendo-chart>
 *        <br /><br />
 *        <button class="k-button" (click)="isVisible=!isVisible">Toggle Legend</button>
 *    `
 * })
 * export class AppComponent {
 *  public isVisible = true;
 *  public borderOptions = {
 *    color: "rgba(255, 0, 0, 0.8)",
 *    dashType: 'dash',
 *    width: 2
 *  };
 *
 * public series: any[] = [{
 *   name: "India",
 *   data: [3.907, 7.943, 7.848, 9.284, 9.263, 9.801, 3.890, 8.238, 9.552, 6.855]
 * }, {
 *   name: "Russian Federation",
 *   data: [4.743, 7.295, 7.175, 6.376, 8.153, 8.535, 5.247, -7.832, 4.3, 4.3]
 * }, {
 *   name: "Germany",
 *   data: [0.010, -0.375, 1.161, 0.684, 3.7, 3.269, 1.083, -5.127, 3.690, 2.995]
 * },{
 *   name: "World",
 *   data: [1.988, 2.733, 3.994, 3.464, 4.001, 3.939, 1.333, -2.245, 4.339, 2.727]
 * }];
 *  public categories: number[] = [2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011];
 * }
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class TitleComponent extends TitleComponentGenerated {
    configurationService: ConfigurationService;
    constructor(configurationService: ConfigurationService);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TitleComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TitleComponent, "kendo-chart-title", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGl0bGUuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInRpdGxlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgQ29uZmlndXJhdGlvblNlcnZpY2UgfSBmcm9tICcuLi9jb21tb24vY29uZmlndXJhdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IFRpdGxlQ29tcG9uZW50R2VuZXJhdGVkIH0gZnJvbSAnLi90aXRsZS5jb21wb25lbnQuZ2VuZXJhdGVkJztcbi8qKlxuICogVGhlIGNvbmZpZ3VyYXRpb24gb3B0aW9ucyBvZiB0aGUgQ2hhcnQgdGl0bGUgb3IgdGV4dFxuICogKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyB0aXRsZV9jaGFydF9jaGFydHMgJX0pKS5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHMtcHJldmlld1xuICogaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG4gKlxuICogX0BDb21wb25lbnQoe1xuICogICAgc2VsZWN0b3I6ICdteS1hcHAnLFxuICogICAgdGVtcGxhdGU6IGBcbiAqICAgICAgICA8a2VuZG8tY2hhcnQgW2NhdGVnb3J5QXhpc109XCJ7IGNhdGVnb3JpZXM6IGNhdGVnb3JpZXMgfVwiPlxuICogICAgICAgICAgICA8a2VuZG8tY2hhcnQtdGl0bGUgdGV4dD1cIkdyb3NzIGRvbWVzdGljIHByb2R1Y3QgZ3Jvd3RoIC9HRFAgYW5udWFsICUvXCI+PC9rZW5kby1jaGFydC10aXRsZT5cbiAqICAgICAgICAgICAgPGtlbmRvLWNoYXJ0LWxlZ2VuZFxuICogICAgICAgICAgICAgIHBvc2l0aW9uPVwiYm90dG9tXCJcbiAqICAgICAgICAgICAgICBvcmllbnRhdGlvbj1cImhvcml6b250YWxcIlxuICogICAgICAgICAgICAgIGFsaWduPVwiZW5kXCJcbiAqICAgICAgICAgICAgICBiYWNrZ3JvdW5kPVwicmdiYSgyNTUsIDAsIDAsIDAuMSlcIlxuICogICAgICAgICAgICAgIFtib3JkZXJdPVwiYm9yZGVyT3B0aW9uc1wiXG4gKiAgICAgICAgICAgICAgW21hcmdpbl09XCIxMFwiXG4gKiAgICAgICAgICAgICAgW3BhZGRpbmddPVwiMTBcIlxuICogICAgICAgICAgICAgIFt3aWR0aF09XCIxNTBcIlxuICogICAgICAgICAgICAgIFtvZmZzZXRYXT1cIjExXCJcbiAqICAgICAgICAgICAgICBbb2Zmc2V0WV09XCItMTAzXCJcbiAqICAgICAgICAgICAgICBbcmV2ZXJzZV09XCJ0cnVlXCJcbiAqICAgICAgICAgICAgICBbdmlzaWJsZV09XCJpc1Zpc2libGVcIlxuICogICAgICAgICAgICAgID48L2tlbmRvLWNoYXJ0LWxlZ2VuZD5cbiAqICAgICAgICAgICAgPGtlbmRvLWNoYXJ0LXRvb2x0aXAgZm9ybWF0PVwiezB9JVwiPjwva2VuZG8tY2hhcnQtdG9vbHRpcD5cbiAqICAgICAgICAgICAgPGtlbmRvLWNoYXJ0LXNlcmllcz5cbiAqICAgICAgICAgICAgICAgIDxrZW5kby1jaGFydC1zZXJpZXMtaXRlbSAqbmdGb3I9XCJsZXQgaXRlbSBvZiBzZXJpZXNcIlxuICogICAgICAgICAgICAgICAgICAgIHR5cGU9XCJsaW5lXCIgc3R5bGU9XCJzbW9vdGhcIiBbZGF0YV09XCJpdGVtLmRhdGFcIiBbbmFtZV09XCJpdGVtLm5hbWVcIj5cbiAqICAgICAgICAgICAgICAgIDwva2VuZG8tY2hhcnQtc2VyaWVzLWl0ZW0+XG4gKiAgICAgICAgICAgIDwva2VuZG8tY2hhcnQtc2VyaWVzPlxuICogICAgICAgIDwva2VuZG8tY2hhcnQ+XG4gKiAgICAgICAgPGJyIC8+PGJyIC8+XG4gKiAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImstYnV0dG9uXCIgKGNsaWNrKT1cImlzVmlzaWJsZT0haXNWaXNpYmxlXCI+VG9nZ2xlIExlZ2VuZDwvYnV0dG9uPlxuICogICAgYFxuICogfSlcbiAqIGV4cG9ydCBjbGFzcyBBcHBDb21wb25lbnQge1xuICogIHB1YmxpYyBpc1Zpc2libGUgPSB0cnVlO1xuICogIHB1YmxpYyBib3JkZXJPcHRpb25zID0ge1xuICogICAgY29sb3I6IFwicmdiYSgyNTUsIDAsIDAsIDAuOClcIixcbiAqICAgIGRhc2hUeXBlOiAnZGFzaCcsXG4gKiAgICB3aWR0aDogMlxuICogIH07XG4gKlxuICogcHVibGljIHNlcmllczogYW55W10gPSBbe1xuICogICBuYW1lOiBcIkluZGlhXCIsXG4gKiAgIGRhdGE6IFszLjkwNywgNy45NDMsIDcuODQ4LCA5LjI4NCwgOS4yNjMsIDkuODAxLCAzLjg5MCwgOC4yMzgsIDkuNTUyLCA2Ljg1NV1cbiAqIH0sIHtcbiAqICAgbmFtZTogXCJSdXNzaWFuIEZlZGVyYXRpb25cIixcbiAqICAgZGF0YTogWzQuNzQzLCA3LjI5NSwgNy4xNzUsIDYuMzc2LCA4LjE1MywgOC41MzUsIDUuMjQ3LCAtNy44MzIsIDQuMywgNC4zXVxuICogfSwge1xuICogICBuYW1lOiBcIkdlcm1hbnlcIixcbiAqICAgZGF0YTogWzAuMDEwLCAtMC4zNzUsIDEuMTYxLCAwLjY4NCwgMy43LCAzLjI2OSwgMS4wODMsIC01LjEyNywgMy42OTAsIDIuOTk1XVxuICogfSx7XG4gKiAgIG5hbWU6IFwiV29ybGRcIixcbiAqICAgZGF0YTogWzEuOTg4LCAyLjczMywgMy45OTQsIDMuNDY0LCA0LjAwMSwgMy45MzksIDEuMzMzLCAtMi4yNDUsIDQuMzM5LCAyLjcyN11cbiAqIH1dO1xuICogIHB1YmxpYyBjYXRlZ29yaWVzOiBudW1iZXJbXSA9IFsyMDAyLCAyMDAzLCAyMDA0LCAyMDA1LCAyMDA2LCAyMDA3LCAyMDA4LCAyMDA5LCAyMDEwLCAyMDExXTtcbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBUaXRsZUNvbXBvbmVudCBleHRlbmRzIFRpdGxlQ29tcG9uZW50R2VuZXJhdGVkIHtcbiAgICBjb25maWd1cmF0aW9uU2VydmljZTogQ29uZmlndXJhdGlvblNlcnZpY2U7XG4gICAgY29uc3RydWN0b3IoY29uZmlndXJhdGlvblNlcnZpY2U6IENvbmZpZ3VyYXRpb25TZXJ2aWNlKTtcbn1cbiJdfQ==