/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { CollectionService } from '../common/collection.service';
import { ConfigurationService } from '../common/configuration.service';
import { PaneComponentGenerated } from './pane.component.generated';
/**
 * The configuration component for a Chart pane.
 *
 * @example
 * ```ts
 * import { Component } from '@angular/core';
 *
 * _@Component({
 *   selector: 'my-app',
 *   template: `
 *       <kendo-chart>
 *         <kendo-chart-panes>
 *             <kendo-chart-pane name="top" background="pink" [border]="{ color: 'black', dashtype: 'dash', width: 2 }">
 *               <!--            ^^^^^^^^^^
 *                   Unique ID for the pane.
 *               -->
 *             </kendo-chart-pane>
 *             <kendo-chart-pane name="bottom" [height]="150" title="Bottom pane">
 *               <!--                          ^^^^^^^^^^^^^^
 *                   Note that the binding is required,
 *                   otherwise the property will be
 *                   bound to a '100' string.
 *               -->
 *             </kendo-chart-pane>
 *         </kendo-chart-panes>
 *
 *         <kendo-chart-value-axis>
 *             <kendo-chart-value-axis-item name="top">
 *               <!--                       ^^^^^^^^^^
 *                   Unique ID for the axis.
 *                   No need to set a pane as it will use the first,
 *                   'top' pane by default.
 *               -->
 *             </kendo-chart-value-axis-item>
 *             <kendo-chart-value-axis-item name="bottom"
 *                                          pane="bottom">
 *               <!--                       ^^^^^^^^^^^^^
 *                   Move the axis to the bottom pane.
 *               -->
 *             </kendo-chart-value-axis-item>
 *         </kendo-chart-value-axis>
 *         <kendo-chart-series>
 *           <kendo-chart-series-item [data]="seriesData[0]">
 *               <!-- Will use the first, 'top' value axis by default. -->
 *           </kendo-chart-series-item>
 *           <kendo-chart-series-item type="line" [data]="seriesData[1]" axis="bottom">
 *               <!-- Plot this series to the 'bottom' axis.              ^^^^^^^^^^^^^ -->
 *           </kendo-chart-series-item>
 *         </kendo-chart-series>
 *       </kendo-chart>
 *   `
 * })
 * export class AppComponent {
 *   public seriesData: number[][] = [[1, 2, 3, 5], [0, 1, 0, 1]];
 * }
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class PaneComponent extends PaneComponentGenerated {
    protected configurationService: ConfigurationService;
    protected collectionService: CollectionService;
    constructor(configurationService: ConfigurationService, collectionService: CollectionService);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PaneComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PaneComponent, "kendo-chart-pane", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFuZS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicGFuZS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBDb2xsZWN0aW9uU2VydmljZSB9IGZyb20gJy4uL2NvbW1vbi9jb2xsZWN0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29uZmlndXJhdGlvblNlcnZpY2UgfSBmcm9tICcuLi9jb21tb24vY29uZmlndXJhdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IFBhbmVDb21wb25lbnRHZW5lcmF0ZWQgfSBmcm9tICcuL3BhbmUuY29tcG9uZW50LmdlbmVyYXRlZCc7XG4vKipcbiAqIFRoZSBjb25maWd1cmF0aW9uIGNvbXBvbmVudCBmb3IgYSBDaGFydCBwYW5lLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG4gKlxuICogX0BDb21wb25lbnQoe1xuICogICBzZWxlY3RvcjogJ215LWFwcCcsXG4gKiAgIHRlbXBsYXRlOiBgXG4gKiAgICAgICA8a2VuZG8tY2hhcnQ+XG4gKiAgICAgICAgIDxrZW5kby1jaGFydC1wYW5lcz5cbiAqICAgICAgICAgICAgIDxrZW5kby1jaGFydC1wYW5lIG5hbWU9XCJ0b3BcIiBiYWNrZ3JvdW5kPVwicGlua1wiIFtib3JkZXJdPVwieyBjb2xvcjogJ2JsYWNrJywgZGFzaHR5cGU6ICdkYXNoJywgd2lkdGg6IDIgfVwiPlxuICogICAgICAgICAgICAgICA8IS0tICAgICAgICAgICAgXl5eXl5eXl5eXlxuICogICAgICAgICAgICAgICAgICAgVW5pcXVlIElEIGZvciB0aGUgcGFuZS5cbiAqICAgICAgICAgICAgICAgLS0+XG4gKiAgICAgICAgICAgICA8L2tlbmRvLWNoYXJ0LXBhbmU+XG4gKiAgICAgICAgICAgICA8a2VuZG8tY2hhcnQtcGFuZSBuYW1lPVwiYm90dG9tXCIgW2hlaWdodF09XCIxNTBcIiB0aXRsZT1cIkJvdHRvbSBwYW5lXCI+XG4gKiAgICAgICAgICAgICAgIDwhLS0gICAgICAgICAgICAgICAgICAgICAgICAgIF5eXl5eXl5eXl5eXl5eXG4gKiAgICAgICAgICAgICAgICAgICBOb3RlIHRoYXQgdGhlIGJpbmRpbmcgaXMgcmVxdWlyZWQsXG4gKiAgICAgICAgICAgICAgICAgICBvdGhlcndpc2UgdGhlIHByb3BlcnR5IHdpbGwgYmVcbiAqICAgICAgICAgICAgICAgICAgIGJvdW5kIHRvIGEgJzEwMCcgc3RyaW5nLlxuICogICAgICAgICAgICAgICAtLT5cbiAqICAgICAgICAgICAgIDwva2VuZG8tY2hhcnQtcGFuZT5cbiAqICAgICAgICAgPC9rZW5kby1jaGFydC1wYW5lcz5cbiAqXG4gKiAgICAgICAgIDxrZW5kby1jaGFydC12YWx1ZS1heGlzPlxuICogICAgICAgICAgICAgPGtlbmRvLWNoYXJ0LXZhbHVlLWF4aXMtaXRlbSBuYW1lPVwidG9wXCI+XG4gKiAgICAgICAgICAgICAgIDwhLS0gICAgICAgICAgICAgICAgICAgICAgIF5eXl5eXl5eXl5cbiAqICAgICAgICAgICAgICAgICAgIFVuaXF1ZSBJRCBmb3IgdGhlIGF4aXMuXG4gKiAgICAgICAgICAgICAgICAgICBObyBuZWVkIHRvIHNldCBhIHBhbmUgYXMgaXQgd2lsbCB1c2UgdGhlIGZpcnN0LFxuICogICAgICAgICAgICAgICAgICAgJ3RvcCcgcGFuZSBieSBkZWZhdWx0LlxuICogICAgICAgICAgICAgICAtLT5cbiAqICAgICAgICAgICAgIDwva2VuZG8tY2hhcnQtdmFsdWUtYXhpcy1pdGVtPlxuICogICAgICAgICAgICAgPGtlbmRvLWNoYXJ0LXZhbHVlLWF4aXMtaXRlbSBuYW1lPVwiYm90dG9tXCJcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFuZT1cImJvdHRvbVwiPlxuICogICAgICAgICAgICAgICA8IS0tICAgICAgICAgICAgICAgICAgICAgICBeXl5eXl5eXl5eXl5eXG4gKiAgICAgICAgICAgICAgICAgICBNb3ZlIHRoZSBheGlzIHRvIHRoZSBib3R0b20gcGFuZS5cbiAqICAgICAgICAgICAgICAgLS0+XG4gKiAgICAgICAgICAgICA8L2tlbmRvLWNoYXJ0LXZhbHVlLWF4aXMtaXRlbT5cbiAqICAgICAgICAgPC9rZW5kby1jaGFydC12YWx1ZS1heGlzPlxuICogICAgICAgICA8a2VuZG8tY2hhcnQtc2VyaWVzPlxuICogICAgICAgICAgIDxrZW5kby1jaGFydC1zZXJpZXMtaXRlbSBbZGF0YV09XCJzZXJpZXNEYXRhWzBdXCI+XG4gKiAgICAgICAgICAgICAgIDwhLS0gV2lsbCB1c2UgdGhlIGZpcnN0LCAndG9wJyB2YWx1ZSBheGlzIGJ5IGRlZmF1bHQuIC0tPlxuICogICAgICAgICAgIDwva2VuZG8tY2hhcnQtc2VyaWVzLWl0ZW0+XG4gKiAgICAgICAgICAgPGtlbmRvLWNoYXJ0LXNlcmllcy1pdGVtIHR5cGU9XCJsaW5lXCIgW2RhdGFdPVwic2VyaWVzRGF0YVsxXVwiIGF4aXM9XCJib3R0b21cIj5cbiAqICAgICAgICAgICAgICAgPCEtLSBQbG90IHRoaXMgc2VyaWVzIHRvIHRoZSAnYm90dG9tJyBheGlzLiAgICAgICAgICAgICAgXl5eXl5eXl5eXl5eXiAtLT5cbiAqICAgICAgICAgICA8L2tlbmRvLWNoYXJ0LXNlcmllcy1pdGVtPlxuICogICAgICAgICA8L2tlbmRvLWNoYXJ0LXNlcmllcz5cbiAqICAgICAgIDwva2VuZG8tY2hhcnQ+XG4gKiAgIGBcbiAqIH0pXG4gKiBleHBvcnQgY2xhc3MgQXBwQ29tcG9uZW50IHtcbiAqICAgcHVibGljIHNlcmllc0RhdGE6IG51bWJlcltdW10gPSBbWzEsIDIsIDMsIDVdLCBbMCwgMSwgMCwgMV1dO1xuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBhbmVDb21wb25lbnQgZXh0ZW5kcyBQYW5lQ29tcG9uZW50R2VuZXJhdGVkIHtcbiAgICBwcm90ZWN0ZWQgY29uZmlndXJhdGlvblNlcnZpY2U6IENvbmZpZ3VyYXRpb25TZXJ2aWNlO1xuICAgIHByb3RlY3RlZCBjb2xsZWN0aW9uU2VydmljZTogQ29sbGVjdGlvblNlcnZpY2U7XG4gICAgY29uc3RydWN0b3IoY29uZmlndXJhdGlvblNlcnZpY2U6IENvbmZpZ3VyYXRpb25TZXJ2aWNlLCBjb2xsZWN0aW9uU2VydmljZTogQ29sbGVjdGlvblNlcnZpY2UpO1xufVxuIl19