/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { TemplateRef } from '@angular/core';
/**
 * A directive which selects a [template]({{ site.data.urls.angular['templatesyntax'] }})
 * within the `<kendo-chart>` component for the
 * [Donut center template]({% slug donut_seriestypes_charts %}).
 *
 * @example
 * ```ts
 * import { Component } from '@angular/core';
 *
 * _@Component({
 *   selector: 'my-app',
 *   template: `
 *     <kendo-chart style="height: 450px;">
 *       <ng-template kendoChartDonutCenterTemplate>
 *         <h3>22.5%</h3>
 *         of which renewables
 *       </ng-template>
 *       <kendo-chart-series>
 *         <kendo-chart-series-item
 *             type="donut" [data]="data"
 *             categoryField="kind" field="share">
 *         </kendo-chart-series-item>
 *       </kendo-chart-series>
 *       <kendo-chart-legend [visible]="false"></kendo-chart-legend>
 *     </kendo-chart>
 *   `
 * })
 * export class AppComponent {
 *   public data: any[] = [{
 *     kind: 'Hydroelectric', share: 0.175
 *   }, {
 *     kind: 'Nuclear', share: 0.238
 *   }, {
 *     kind: 'Coal', share: 0.118
 *   }, {
 *     kind: 'Solar', share: 0.052
 *   }, {
 *     kind: 'Wind', share: 0.225
 *   }, {
 *     kind: 'Other', share: 0.192
 *   }];
 * }
 *
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class DonutCenterTemplateDirective {
    templateRef: TemplateRef<any>;
    constructor(templateRef: TemplateRef<any>);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DonutCenterTemplateDirective, [{ optional: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DonutCenterTemplateDirective, "[kendoChartDonutCenterTemplate]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9udXQtY2VudGVyLXRlbXBsYXRlLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJkb251dC1jZW50ZXItdGVtcGxhdGUuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbi8qKlxuICogQSBkaXJlY3RpdmUgd2hpY2ggc2VsZWN0cyBhIFt0ZW1wbGF0ZV0oe3sgc2l0ZS5kYXRhLnVybHMuYW5ndWxhclsndGVtcGxhdGVzeW50YXgnXSB9fSlcbiAqIHdpdGhpbiB0aGUgYDxrZW5kby1jaGFydD5gIGNvbXBvbmVudCBmb3IgdGhlXG4gKiBbRG9udXQgY2VudGVyIHRlbXBsYXRlXSh7JSBzbHVnIGRvbnV0X3Nlcmllc3R5cGVzX2NoYXJ0cyAlfSkuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbiAqXG4gKiBfQENvbXBvbmVudCh7XG4gKiAgIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAqICAgdGVtcGxhdGU6IGBcbiAqICAgICA8a2VuZG8tY2hhcnQgc3R5bGU9XCJoZWlnaHQ6IDQ1MHB4O1wiPlxuICogICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvQ2hhcnREb251dENlbnRlclRlbXBsYXRlPlxuICogICAgICAgICA8aDM+MjIuNSU8L2gzPlxuICogICAgICAgICBvZiB3aGljaCByZW5ld2FibGVzXG4gKiAgICAgICA8L25nLXRlbXBsYXRlPlxuICogICAgICAgPGtlbmRvLWNoYXJ0LXNlcmllcz5cbiAqICAgICAgICAgPGtlbmRvLWNoYXJ0LXNlcmllcy1pdGVtXG4gKiAgICAgICAgICAgICB0eXBlPVwiZG9udXRcIiBbZGF0YV09XCJkYXRhXCJcbiAqICAgICAgICAgICAgIGNhdGVnb3J5RmllbGQ9XCJraW5kXCIgZmllbGQ9XCJzaGFyZVwiPlxuICogICAgICAgICA8L2tlbmRvLWNoYXJ0LXNlcmllcy1pdGVtPlxuICogICAgICAgPC9rZW5kby1jaGFydC1zZXJpZXM+XG4gKiAgICAgICA8a2VuZG8tY2hhcnQtbGVnZW5kIFt2aXNpYmxlXT1cImZhbHNlXCI+PC9rZW5kby1jaGFydC1sZWdlbmQ+XG4gKiAgICAgPC9rZW5kby1jaGFydD5cbiAqICAgYFxuICogfSlcbiAqIGV4cG9ydCBjbGFzcyBBcHBDb21wb25lbnQge1xuICogICBwdWJsaWMgZGF0YTogYW55W10gPSBbe1xuICogICAgIGtpbmQ6ICdIeWRyb2VsZWN0cmljJywgc2hhcmU6IDAuMTc1XG4gKiAgIH0sIHtcbiAqICAgICBraW5kOiAnTnVjbGVhcicsIHNoYXJlOiAwLjIzOFxuICogICB9LCB7XG4gKiAgICAga2luZDogJ0NvYWwnLCBzaGFyZTogMC4xMThcbiAqICAgfSwge1xuICogICAgIGtpbmQ6ICdTb2xhcicsIHNoYXJlOiAwLjA1MlxuICogICB9LCB7XG4gKiAgICAga2luZDogJ1dpbmQnLCBzaGFyZTogMC4yMjVcbiAqICAgfSwge1xuICogICAgIGtpbmQ6ICdPdGhlcicsIHNoYXJlOiAwLjE5MlxuICogICB9XTtcbiAqIH1cbiAqXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRG9udXRDZW50ZXJUZW1wbGF0ZURpcmVjdGl2ZSB7XG4gICAgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgY29uc3RydWN0b3IodGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT4pO1xufVxuIl19