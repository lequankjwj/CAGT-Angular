/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { IntlService } from '@progress/kendo-angular-intl';
import { CollectionService } from '../common/collection.service';
import { CollectionItemComponent } from '../common/collection-item.component';
import { ConfigurationService } from '../common/configuration.service';
import { AutoBaseUnitSteps, AxisLine, AxisTicks, CategoryBaseUnit, GridLines, PlotBand, WeekStartDay } from '../common/property-types';
import { CategoryAxisCrosshair, CategoryAxisLabels, CategoryAxisNotes, CategoryAxisSelect, CategoryAxisTitle, CategoryAxis } from '../common/property-types';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare abstract class CategoryAxisItemComponentGenerated extends CollectionItemComponent implements CategoryAxis {
    protected configurationService: ConfigurationService;
    protected collectionService: CollectionService;
    autoBaseUnitSteps: AutoBaseUnitSteps;
    axisCrossingValue: any | any[];
    background: string;
    baseUnit: CategoryBaseUnit;
    baseUnitStep: number | 'auto';
    categories: any[];
    color: string;
    justified: boolean;
    line: AxisLine;
    majorGridLines: GridLines;
    majorTicks: AxisTicks;
    max: any;
    maxDateGroups: number;
    maxDivisions: number;
    min: any;
    minorGridLines: GridLines;
    minorTicks: AxisTicks;
    name: string;
    pane: string;
    plotBands: PlotBand[];
    reverse: boolean;
    roundToBaseUnit: boolean;
    startAngle: number;
    type: 'category' | 'date';
    visible: boolean;
    weekStartDay: WeekStartDay;
    crosshair: CategoryAxisCrosshair;
    labels: CategoryAxisLabels;
    notes: CategoryAxisNotes;
    select: CategoryAxisSelect;
    title: CategoryAxisTitle;
    constructor(configurationService: ConfigurationService, collectionService: CollectionService, intl: IntlService, localeId: string);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CategoryAxisItemComponentGenerated, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<CategoryAxisItemComponentGenerated, never, never, { "autoBaseUnitSteps": "autoBaseUnitSteps"; "axisCrossingValue": "axisCrossingValue"; "background": "background"; "baseUnit": "baseUnit"; "baseUnitStep": "baseUnitStep"; "categories": "categories"; "color": "color"; "justified": "justified"; "line": "line"; "majorGridLines": "majorGridLines"; "majorTicks": "majorTicks"; "max": "max"; "maxDateGroups": "maxDateGroups"; "maxDivisions": "maxDivisions"; "min": "min"; "minorGridLines": "minorGridLines"; "minorTicks": "minorTicks"; "name": "name"; "pane": "pane"; "plotBands": "plotBands"; "reverse": "reverse"; "roundToBaseUnit": "roundToBaseUnit"; "startAngle": "startAngle"; "type": "type"; "visible": "visible"; "weekStartDay": "weekStartDay"; "crosshair": "crosshair"; "labels": "labels"; "notes": "notes"; "select": "select"; "title": "title"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2F0ZWdvcnktYXhpcy1pdGVtLmNvbXBvbmVudC5nZW5lcmF0ZWQuZC50cyIsInNvdXJjZXMiOlsiY2F0ZWdvcnktYXhpcy1pdGVtLmNvbXBvbmVudC5nZW5lcmF0ZWQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IEludGxTZXJ2aWNlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItaW50bCc7XG5pbXBvcnQgeyBDb2xsZWN0aW9uU2VydmljZSB9IGZyb20gJy4uL2NvbW1vbi9jb2xsZWN0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29sbGVjdGlvbkl0ZW1Db21wb25lbnQgfSBmcm9tICcuLi9jb21tb24vY29sbGVjdGlvbi1pdGVtLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb25maWd1cmF0aW9uU2VydmljZSB9IGZyb20gJy4uL2NvbW1vbi9jb25maWd1cmF0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgQXV0b0Jhc2VVbml0U3RlcHMsIEF4aXNMaW5lLCBBeGlzVGlja3MsIENhdGVnb3J5QmFzZVVuaXQsIEdyaWRMaW5lcywgUGxvdEJhbmQsIFdlZWtTdGFydERheSB9IGZyb20gJy4uL2NvbW1vbi9wcm9wZXJ0eS10eXBlcyc7XG5pbXBvcnQgeyBDYXRlZ29yeUF4aXNDcm9zc2hhaXIsIENhdGVnb3J5QXhpc0xhYmVscywgQ2F0ZWdvcnlBeGlzTm90ZXMsIENhdGVnb3J5QXhpc1NlbGVjdCwgQ2F0ZWdvcnlBeGlzVGl0bGUsIENhdGVnb3J5QXhpcyB9IGZyb20gJy4uL2NvbW1vbi9wcm9wZXJ0eS10eXBlcyc7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgYWJzdHJhY3QgY2xhc3MgQ2F0ZWdvcnlBeGlzSXRlbUNvbXBvbmVudEdlbmVyYXRlZCBleHRlbmRzIENvbGxlY3Rpb25JdGVtQ29tcG9uZW50IGltcGxlbWVudHMgQ2F0ZWdvcnlBeGlzIHtcbiAgICBwcm90ZWN0ZWQgY29uZmlndXJhdGlvblNlcnZpY2U6IENvbmZpZ3VyYXRpb25TZXJ2aWNlO1xuICAgIHByb3RlY3RlZCBjb2xsZWN0aW9uU2VydmljZTogQ29sbGVjdGlvblNlcnZpY2U7XG4gICAgYXV0b0Jhc2VVbml0U3RlcHM6IEF1dG9CYXNlVW5pdFN0ZXBzO1xuICAgIGF4aXNDcm9zc2luZ1ZhbHVlOiBhbnkgfCBhbnlbXTtcbiAgICBiYWNrZ3JvdW5kOiBzdHJpbmc7XG4gICAgYmFzZVVuaXQ6IENhdGVnb3J5QmFzZVVuaXQ7XG4gICAgYmFzZVVuaXRTdGVwOiBudW1iZXIgfCAnYXV0byc7XG4gICAgY2F0ZWdvcmllczogYW55W107XG4gICAgY29sb3I6IHN0cmluZztcbiAgICBqdXN0aWZpZWQ6IGJvb2xlYW47XG4gICAgbGluZTogQXhpc0xpbmU7XG4gICAgbWFqb3JHcmlkTGluZXM6IEdyaWRMaW5lcztcbiAgICBtYWpvclRpY2tzOiBBeGlzVGlja3M7XG4gICAgbWF4OiBhbnk7XG4gICAgbWF4RGF0ZUdyb3VwczogbnVtYmVyO1xuICAgIG1heERpdmlzaW9uczogbnVtYmVyO1xuICAgIG1pbjogYW55O1xuICAgIG1pbm9yR3JpZExpbmVzOiBHcmlkTGluZXM7XG4gICAgbWlub3JUaWNrczogQXhpc1RpY2tzO1xuICAgIG5hbWU6IHN0cmluZztcbiAgICBwYW5lOiBzdHJpbmc7XG4gICAgcGxvdEJhbmRzOiBQbG90QmFuZFtdO1xuICAgIHJldmVyc2U6IGJvb2xlYW47XG4gICAgcm91bmRUb0Jhc2VVbml0OiBib29sZWFuO1xuICAgIHN0YXJ0QW5nbGU6IG51bWJlcjtcbiAgICB0eXBlOiAnY2F0ZWdvcnknIHwgJ2RhdGUnO1xuICAgIHZpc2libGU6IGJvb2xlYW47XG4gICAgd2Vla1N0YXJ0RGF5OiBXZWVrU3RhcnREYXk7XG4gICAgY3Jvc3NoYWlyOiBDYXRlZ29yeUF4aXNDcm9zc2hhaXI7XG4gICAgbGFiZWxzOiBDYXRlZ29yeUF4aXNMYWJlbHM7XG4gICAgbm90ZXM6IENhdGVnb3J5QXhpc05vdGVzO1xuICAgIHNlbGVjdDogQ2F0ZWdvcnlBeGlzU2VsZWN0O1xuICAgIHRpdGxlOiBDYXRlZ29yeUF4aXNUaXRsZTtcbiAgICBjb25zdHJ1Y3Rvcihjb25maWd1cmF0aW9uU2VydmljZTogQ29uZmlndXJhdGlvblNlcnZpY2UsIGNvbGxlY3Rpb25TZXJ2aWNlOiBDb2xsZWN0aW9uU2VydmljZSwgaW50bDogSW50bFNlcnZpY2UsIGxvY2FsZUlkOiBzdHJpbmcpO1xufVxuIl19