/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { EventEmitter } from '@angular/core';
import { NavigationAction } from './navigation-action';
import { DisabledItemsService } from '../disabled-items/disabled-items.service';
import { SelectionService } from '../selection/selection.service';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class NavigationEvent {
    index: number;
    originalEvent: KeyboardEvent;
    /**
     * The index of the item to which the user navigated.
     */
    constructor(index: number, originalEvent: KeyboardEvent);
}
/**
 * @hidden
 */
export declare class NavigationService {
    private disabledItemsService;
    private selectionService;
    open: EventEmitter<NavigationEvent>;
    close: EventEmitter<NavigationEvent>;
    enter: EventEmitter<NavigationEvent>;
    tab: EventEmitter<NavigationEvent>;
    esc: EventEmitter<NavigationEvent>;
    up: EventEmitter<NavigationEvent>;
    right: EventEmitter<NavigationEvent>;
    down: EventEmitter<NavigationEvent>;
    left: EventEmitter<NavigationEvent>;
    delete: EventEmitter<NavigationEvent>;
    backspace: EventEmitter<NavigationEvent>;
    home: EventEmitter<NavigationEvent>;
    end: EventEmitter<NavigationEvent>;
    constructor(disabledItemsService: DisabledItemsService, selectionService: SelectionService);
    process(args: any): NavigationAction;
    private next;
    private clampIndex;
    private firstFocusableIndex;
    private isDisabled;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NavigationService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NavigationService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2aWdhdGlvbi5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbIm5hdmlnYXRpb24uc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmF2aWdhdGlvbkFjdGlvbiB9IGZyb20gJy4vbmF2aWdhdGlvbi1hY3Rpb24nO1xuaW1wb3J0IHsgRGlzYWJsZWRJdGVtc1NlcnZpY2UgfSBmcm9tICcuLi9kaXNhYmxlZC1pdGVtcy9kaXNhYmxlZC1pdGVtcy5zZXJ2aWNlJztcbmltcG9ydCB7IFNlbGVjdGlvblNlcnZpY2UgfSBmcm9tICcuLi9zZWxlY3Rpb24vc2VsZWN0aW9uLnNlcnZpY2UnO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5hdmlnYXRpb25FdmVudCB7XG4gICAgaW5kZXg6IG51bWJlcjtcbiAgICBvcmlnaW5hbEV2ZW50OiBLZXlib2FyZEV2ZW50O1xuICAgIC8qKlxuICAgICAqIFRoZSBpbmRleCBvZiB0aGUgaXRlbSB0byB3aGljaCB0aGUgdXNlciBuYXZpZ2F0ZWQuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoaW5kZXg6IG51bWJlciwgb3JpZ2luYWxFdmVudDogS2V5Ym9hcmRFdmVudCk7XG59XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmF2aWdhdGlvblNlcnZpY2Uge1xuICAgIHByaXZhdGUgZGlzYWJsZWRJdGVtc1NlcnZpY2U7XG4gICAgcHJpdmF0ZSBzZWxlY3Rpb25TZXJ2aWNlO1xuICAgIG9wZW46IEV2ZW50RW1pdHRlcjxOYXZpZ2F0aW9uRXZlbnQ+O1xuICAgIGNsb3NlOiBFdmVudEVtaXR0ZXI8TmF2aWdhdGlvbkV2ZW50PjtcbiAgICBlbnRlcjogRXZlbnRFbWl0dGVyPE5hdmlnYXRpb25FdmVudD47XG4gICAgdGFiOiBFdmVudEVtaXR0ZXI8TmF2aWdhdGlvbkV2ZW50PjtcbiAgICBlc2M6IEV2ZW50RW1pdHRlcjxOYXZpZ2F0aW9uRXZlbnQ+O1xuICAgIHVwOiBFdmVudEVtaXR0ZXI8TmF2aWdhdGlvbkV2ZW50PjtcbiAgICByaWdodDogRXZlbnRFbWl0dGVyPE5hdmlnYXRpb25FdmVudD47XG4gICAgZG93bjogRXZlbnRFbWl0dGVyPE5hdmlnYXRpb25FdmVudD47XG4gICAgbGVmdDogRXZlbnRFbWl0dGVyPE5hdmlnYXRpb25FdmVudD47XG4gICAgZGVsZXRlOiBFdmVudEVtaXR0ZXI8TmF2aWdhdGlvbkV2ZW50PjtcbiAgICBiYWNrc3BhY2U6IEV2ZW50RW1pdHRlcjxOYXZpZ2F0aW9uRXZlbnQ+O1xuICAgIGhvbWU6IEV2ZW50RW1pdHRlcjxOYXZpZ2F0aW9uRXZlbnQ+O1xuICAgIGVuZDogRXZlbnRFbWl0dGVyPE5hdmlnYXRpb25FdmVudD47XG4gICAgY29uc3RydWN0b3IoZGlzYWJsZWRJdGVtc1NlcnZpY2U6IERpc2FibGVkSXRlbXNTZXJ2aWNlLCBzZWxlY3Rpb25TZXJ2aWNlOiBTZWxlY3Rpb25TZXJ2aWNlKTtcbiAgICBwcm9jZXNzKGFyZ3M6IGFueSk6IE5hdmlnYXRpb25BY3Rpb247XG4gICAgcHJpdmF0ZSBuZXh0O1xuICAgIHByaXZhdGUgY2xhbXBJbmRleDtcbiAgICBwcml2YXRlIGZpcnN0Rm9jdXNhYmxlSW5kZXg7XG4gICAgcHJpdmF0ZSBpc0Rpc2FibGVkO1xufVxuIl19