/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { EventEmitter } from '@angular/core';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export interface SelectionEvent {
    indices: number[];
    added?: number;
    removed?: number;
    newSelection?: boolean;
}
/**
 * @hidden
 */
export declare class SelectionService {
    onSelect: EventEmitter<SelectionEvent>;
    onChange: EventEmitter<SelectionEvent>;
    onFocus: EventEmitter<number>;
    total: number;
    private selectedIndices;
    private focusedIndex;
    getTotal(): number;
    isSelected(index: number): boolean;
    isFocused(index: number): boolean;
    focus(index: number): void;
    select(index: number): void;
    add(index: number): void;
    unselect(index: number): void;
    change(index: number): void;
    resetSelection(index: number | number[]): void;
    readonly selected: number[];
    focused: number;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SelectionService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<SelectionService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0aW9uLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsic2VsZWN0aW9uLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgaW50ZXJmYWNlIFNlbGVjdGlvbkV2ZW50IHtcbiAgICBpbmRpY2VzOiBudW1iZXJbXTtcbiAgICBhZGRlZD86IG51bWJlcjtcbiAgICByZW1vdmVkPzogbnVtYmVyO1xuICAgIG5ld1NlbGVjdGlvbj86IGJvb2xlYW47XG59XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU2VsZWN0aW9uU2VydmljZSB7XG4gICAgb25TZWxlY3Q6IEV2ZW50RW1pdHRlcjxTZWxlY3Rpb25FdmVudD47XG4gICAgb25DaGFuZ2U6IEV2ZW50RW1pdHRlcjxTZWxlY3Rpb25FdmVudD47XG4gICAgb25Gb2N1czogRXZlbnRFbWl0dGVyPG51bWJlcj47XG4gICAgdG90YWw6IG51bWJlcjtcbiAgICBwcml2YXRlIHNlbGVjdGVkSW5kaWNlcztcbiAgICBwcml2YXRlIGZvY3VzZWRJbmRleDtcbiAgICBnZXRUb3RhbCgpOiBudW1iZXI7XG4gICAgaXNTZWxlY3RlZChpbmRleDogbnVtYmVyKTogYm9vbGVhbjtcbiAgICBpc0ZvY3VzZWQoaW5kZXg6IG51bWJlcik6IGJvb2xlYW47XG4gICAgZm9jdXMoaW5kZXg6IG51bWJlcik6IHZvaWQ7XG4gICAgc2VsZWN0KGluZGV4OiBudW1iZXIpOiB2b2lkO1xuICAgIGFkZChpbmRleDogbnVtYmVyKTogdm9pZDtcbiAgICB1bnNlbGVjdChpbmRleDogbnVtYmVyKTogdm9pZDtcbiAgICBjaGFuZ2UoaW5kZXg6IG51bWJlcik6IHZvaWQ7XG4gICAgcmVzZXRTZWxlY3Rpb24oaW5kZXg6IG51bWJlciB8IG51bWJlcltdKTogdm9pZDtcbiAgICByZWFkb25seSBzZWxlY3RlZDogbnVtYmVyW107XG4gICAgZm9jdXNlZDogbnVtYmVyO1xufVxuIl19