/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { TemplateRef } from '@angular/core';
/**
 * Renders the group header content. To define the group template, nest an `<ng-template>` tag
 * with the `kendo<ComponentName>GroupTemplate` directive inside the component tag. The template context is
 * set to the current component. To get a reference to the current data item, use the `let-groupName` directive.
 *
 * - [Using `GroupTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-group-template)
 * - [Using `GroupTemplate` with the ComboBox]({% slug templates_combobox %}#toc-group-template)
 * - [Using `GroupTemplate` with the DropDownList]({% slug templates_ddl %}#toc-group-template)
 * - [Using `GroupTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-group-template)
 *
 * @example
 * ```ts
 * import { groupBy } from '@progress/kendo-data-query';
 * _@Component({
 * selector: 'my-app',
 * template: `
 *  <kendo-combobox [data]="groupedData" [textField]="'name'" [valueField]="'name'">
 *    <ng-template kendoComboBoxGroupTemplate let-groupName>
 *      <span>Food type: {{groupName}} option</span>
 *    </ng-template>
 *  </kendo-combobox>
 * `
 * })
 * class AppComponent {
 *   public data = [
 *       { name: "Pork", category: "Food", subcategory: "Meat" },
 *       { name: "Pepper", category: "Food", subcategory: "Vegetables" },
 *       { name: "Beef", category: "Food", subcategory: "Meat" }
 *   ];
 *   public groupedData = groupBy(this.data, [{field: "subcategory"}]);
 * }
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class GroupTemplateDirective {
    templateRef: TemplateRef<any>;
    constructor(templateRef: TemplateRef<any>);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<GroupTemplateDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<GroupTemplateDirective, "[kendoDropDownListGroupTemplate],[kendoComboBoxGroupTemplate],[kendoAutoCompleteGroupTemplate],[kendoMultiSelectGroupTemplate]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JvdXAtdGVtcGxhdGUuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbImdyb3VwLXRlbXBsYXRlLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG4vKipcbiAqIFJlbmRlcnMgdGhlIGdyb3VwIGhlYWRlciBjb250ZW50LiBUbyBkZWZpbmUgdGhlIGdyb3VwIHRlbXBsYXRlLCBuZXN0IGFuIGA8bmctdGVtcGxhdGU+YCB0YWdcbiAqIHdpdGggdGhlIGBrZW5kbzxDb21wb25lbnROYW1lPkdyb3VwVGVtcGxhdGVgIGRpcmVjdGl2ZSBpbnNpZGUgdGhlIGNvbXBvbmVudCB0YWcuIFRoZSB0ZW1wbGF0ZSBjb250ZXh0IGlzXG4gKiBzZXQgdG8gdGhlIGN1cnJlbnQgY29tcG9uZW50LiBUbyBnZXQgYSByZWZlcmVuY2UgdG8gdGhlIGN1cnJlbnQgZGF0YSBpdGVtLCB1c2UgdGhlIGBsZXQtZ3JvdXBOYW1lYCBkaXJlY3RpdmUuXG4gKlxuICogLSBbVXNpbmcgYEdyb3VwVGVtcGxhdGVgIHdpdGggdGhlIEF1dG9Db21wbGV0ZV0oeyUgc2x1ZyB0ZW1wbGF0ZXNfYXV0b2NvbXBsZXRlICV9I3RvYy1ncm91cC10ZW1wbGF0ZSlcbiAqIC0gW1VzaW5nIGBHcm91cFRlbXBsYXRlYCB3aXRoIHRoZSBDb21ib0JveF0oeyUgc2x1ZyB0ZW1wbGF0ZXNfY29tYm9ib3ggJX0jdG9jLWdyb3VwLXRlbXBsYXRlKVxuICogLSBbVXNpbmcgYEdyb3VwVGVtcGxhdGVgIHdpdGggdGhlIERyb3BEb3duTGlzdF0oeyUgc2x1ZyB0ZW1wbGF0ZXNfZGRsICV9I3RvYy1ncm91cC10ZW1wbGF0ZSlcbiAqIC0gW1VzaW5nIGBHcm91cFRlbXBsYXRlYCB3aXRoIHRoZSBNdWx0aVNlbGVjdF0oeyUgc2x1ZyB0ZW1wbGF0ZXNfbXVsdGlzZWxlY3QgJX0jdG9jLWdyb3VwLXRlbXBsYXRlKVxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgZ3JvdXBCeSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1kYXRhLXF1ZXJ5JztcbiAqIF9AQ29tcG9uZW50KHtcbiAqIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAqIHRlbXBsYXRlOiBgXG4gKiAgPGtlbmRvLWNvbWJvYm94IFtkYXRhXT1cImdyb3VwZWREYXRhXCIgW3RleHRGaWVsZF09XCInbmFtZSdcIiBbdmFsdWVGaWVsZF09XCInbmFtZSdcIj5cbiAqICAgIDxuZy10ZW1wbGF0ZSBrZW5kb0NvbWJvQm94R3JvdXBUZW1wbGF0ZSBsZXQtZ3JvdXBOYW1lPlxuICogICAgICA8c3Bhbj5Gb29kIHR5cGU6IHt7Z3JvdXBOYW1lfX0gb3B0aW9uPC9zcGFuPlxuICogICAgPC9uZy10ZW1wbGF0ZT5cbiAqICA8L2tlbmRvLWNvbWJvYm94PlxuICogYFxuICogfSlcbiAqIGNsYXNzIEFwcENvbXBvbmVudCB7XG4gKiAgIHB1YmxpYyBkYXRhID0gW1xuICogICAgICAgeyBuYW1lOiBcIlBvcmtcIiwgY2F0ZWdvcnk6IFwiRm9vZFwiLCBzdWJjYXRlZ29yeTogXCJNZWF0XCIgfSxcbiAqICAgICAgIHsgbmFtZTogXCJQZXBwZXJcIiwgY2F0ZWdvcnk6IFwiRm9vZFwiLCBzdWJjYXRlZ29yeTogXCJWZWdldGFibGVzXCIgfSxcbiAqICAgICAgIHsgbmFtZTogXCJCZWVmXCIsIGNhdGVnb3J5OiBcIkZvb2RcIiwgc3ViY2F0ZWdvcnk6IFwiTWVhdFwiIH1cbiAqICAgXTtcbiAqICAgcHVibGljIGdyb3VwZWREYXRhID0gZ3JvdXBCeSh0aGlzLmRhdGEsIFt7ZmllbGQ6IFwic3ViY2F0ZWdvcnlcIn1dKTtcbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBHcm91cFRlbXBsYXRlRGlyZWN0aXZlIHtcbiAgICB0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBjb25zdHJ1Y3Rvcih0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55Pik7XG59XG4iXX0=