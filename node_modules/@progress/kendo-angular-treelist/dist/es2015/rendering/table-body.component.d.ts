/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { SimpleChange, NgZone, Renderer2, ElementRef, OnInit, OnDestroy, OnChanges, TrackByFunction } from '@angular/core';
import { ColumnBase } from '../columns/column-base';
import { ChangeNotificationService } from '../data/change-notification.service';
import { NoRecordsTemplateDirective } from './no-records-template.directive';
import { EditService } from '../editing/edit.service';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { RowClassFn } from './common/row-class';
import { DomEventsService } from '../common/dom-events.service';
import { ColumnInfoService } from "../common/column-info.service";
import { FilterableSettings } from '../filtering/filterable';
import { NavigationService } from '../navigation/navigation.service';
import { TreeListItem } from '../data/treelist-item.interface';
import { ExpandStateService } from '../expand-state/expand-state.service';
import { SelectionService } from '../selection/selection.service';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class TableBodyComponent implements OnInit, OnDestroy, OnChanges {
    private changeNotification;
    editService: EditService;
    private localization;
    private ngZone;
    private renderer;
    private element;
    private domEvents;
    private columnInfoService;
    private navigationService;
    private expandState;
    private selection;
    columns: Array<ColumnBase>;
    allColumns: Array<ColumnBase>;
    noRecordsTemplate: NoRecordsTemplateDirective;
    view: any;
    skip: number;
    filterable: FilterableSettings;
    noRecordsText: string;
    isLocked: boolean;
    lockedColumnsCount: number;
    totalColumnsCount: number;
    virtualColumns: boolean;
    expandIcons: boolean;
    trackBy: TrackByFunction<TreeListItem>;
    private clickSubscription;
    private cellKeydownSubscription;
    private clickTimeout;
    private headerOffset;
    rowClass: RowClassFn;
    constructor(changeNotification: ChangeNotificationService, editService: EditService, localization: LocalizationService, ngZone: NgZone, renderer: Renderer2, element: ElementRef, domEvents: DomEventsService, columnInfoService: ColumnInfoService, navigationService: NavigationService, expandState: ExpandStateService, selection: SelectionService);
    readonly newDataItem: any;
    readonly unlockedColumnsCount: number;
    isOdd(item: any): boolean;
    trackByWrapper(index: number, item: TreeListItem): any;
    trackByColumns(index: number, item: any): any;
    ngOnChanges(changes: {
        [propertyName: string]: SimpleChange;
    }): void;
    addRowLogicalIndex(): number;
    logicalColIndex(column: any): number;
    ariaExpanded(item: any, column: any): any;
    ariaSelected(item: any, column: any, columnIndex: number): any;
    ngOnInit(): void;
    ngDoCheck(): void;
    ngOnDestroy(): void;
    isEditingCell(item: any, column: any): boolean;
    isEditingRow(item: any): boolean;
    readonly columnsContainer: any;
    readonly hasFooter: boolean;
    readonly columnsSpan: number;
    readonly allColumnsSpan: number;
    readonly colSpan: number;
    readonly footerColumns: ColumnBase[];
    logicalRowIndex(rowIndex: number): number;
    isCellSelected(dataItem: any, column: any, columnIndex: number): boolean;
    targetArgs(target: any, skipFocusable?: boolean): any;
    private clickHandler;
    private emitCellClick;
    private cellKeydownHandler;
    private cellClickArgs;
    private targetElements;
    private expandClick;
    private checkboxClick;
    private rowItem;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TableBodyComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TableBodyComponent, "[kendoTreeListTableBody]", never, { "columns": "columns"; "skip": "skip"; "noRecordsText": "noRecordsText"; "isLocked": "isLocked"; "lockedColumnsCount": "lockedColumnsCount"; "totalColumnsCount": "totalColumnsCount"; "trackBy": "trackBy"; "rowClass": "rowClass"; "allColumns": "allColumns"; "noRecordsTemplate": "noRecordsTemplate"; "view": "view"; "filterable": "filterable"; "virtualColumns": "virtualColumns"; "expandIcons": "expandIcons"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtYm9keS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsidGFibGUtYm9keS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBTaW1wbGVDaGFuZ2UsIE5nWm9uZSwgUmVuZGVyZXIyLCBFbGVtZW50UmVmLCBPbkluaXQsIE9uRGVzdHJveSwgT25DaGFuZ2VzLCBUcmFja0J5RnVuY3Rpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbHVtbkJhc2UgfSBmcm9tICcuLi9jb2x1bW5zL2NvbHVtbi1iYXNlJztcbmltcG9ydCB7IENoYW5nZU5vdGlmaWNhdGlvblNlcnZpY2UgfSBmcm9tICcuLi9kYXRhL2NoYW5nZS1ub3RpZmljYXRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBOb1JlY29yZHNUZW1wbGF0ZURpcmVjdGl2ZSB9IGZyb20gJy4vbm8tcmVjb3Jkcy10ZW1wbGF0ZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRWRpdFNlcnZpY2UgfSBmcm9tICcuLi9lZGl0aW5nL2VkaXQuc2VydmljZSc7XG5pbXBvcnQgeyBMb2NhbGl6YXRpb25TZXJ2aWNlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItbDEwbic7XG5pbXBvcnQgeyBSb3dDbGFzc0ZuIH0gZnJvbSAnLi9jb21tb24vcm93LWNsYXNzJztcbmltcG9ydCB7IERvbUV2ZW50c1NlcnZpY2UgfSBmcm9tICcuLi9jb21tb24vZG9tLWV2ZW50cy5zZXJ2aWNlJztcbmltcG9ydCB7IENvbHVtbkluZm9TZXJ2aWNlIH0gZnJvbSBcIi4uL2NvbW1vbi9jb2x1bW4taW5mby5zZXJ2aWNlXCI7XG5pbXBvcnQgeyBGaWx0ZXJhYmxlU2V0dGluZ3MgfSBmcm9tICcuLi9maWx0ZXJpbmcvZmlsdGVyYWJsZSc7XG5pbXBvcnQgeyBOYXZpZ2F0aW9uU2VydmljZSB9IGZyb20gJy4uL25hdmlnYXRpb24vbmF2aWdhdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IFRyZWVMaXN0SXRlbSB9IGZyb20gJy4uL2RhdGEvdHJlZWxpc3QtaXRlbS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgRXhwYW5kU3RhdGVTZXJ2aWNlIH0gZnJvbSAnLi4vZXhwYW5kLXN0YXRlL2V4cGFuZC1zdGF0ZS5zZXJ2aWNlJztcbmltcG9ydCB7IFNlbGVjdGlvblNlcnZpY2UgfSBmcm9tICcuLi9zZWxlY3Rpb24vc2VsZWN0aW9uLnNlcnZpY2UnO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFRhYmxlQm9keUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95LCBPbkNoYW5nZXMge1xuICAgIHByaXZhdGUgY2hhbmdlTm90aWZpY2F0aW9uO1xuICAgIGVkaXRTZXJ2aWNlOiBFZGl0U2VydmljZTtcbiAgICBwcml2YXRlIGxvY2FsaXphdGlvbjtcbiAgICBwcml2YXRlIG5nWm9uZTtcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xuICAgIHByaXZhdGUgZWxlbWVudDtcbiAgICBwcml2YXRlIGRvbUV2ZW50cztcbiAgICBwcml2YXRlIGNvbHVtbkluZm9TZXJ2aWNlO1xuICAgIHByaXZhdGUgbmF2aWdhdGlvblNlcnZpY2U7XG4gICAgcHJpdmF0ZSBleHBhbmRTdGF0ZTtcbiAgICBwcml2YXRlIHNlbGVjdGlvbjtcbiAgICBjb2x1bW5zOiBBcnJheTxDb2x1bW5CYXNlPjtcbiAgICBhbGxDb2x1bW5zOiBBcnJheTxDb2x1bW5CYXNlPjtcbiAgICBub1JlY29yZHNUZW1wbGF0ZTogTm9SZWNvcmRzVGVtcGxhdGVEaXJlY3RpdmU7XG4gICAgdmlldzogYW55O1xuICAgIHNraXA6IG51bWJlcjtcbiAgICBmaWx0ZXJhYmxlOiBGaWx0ZXJhYmxlU2V0dGluZ3M7XG4gICAgbm9SZWNvcmRzVGV4dDogc3RyaW5nO1xuICAgIGlzTG9ja2VkOiBib29sZWFuO1xuICAgIGxvY2tlZENvbHVtbnNDb3VudDogbnVtYmVyO1xuICAgIHRvdGFsQ29sdW1uc0NvdW50OiBudW1iZXI7XG4gICAgdmlydHVhbENvbHVtbnM6IGJvb2xlYW47XG4gICAgZXhwYW5kSWNvbnM6IGJvb2xlYW47XG4gICAgdHJhY2tCeTogVHJhY2tCeUZ1bmN0aW9uPFRyZWVMaXN0SXRlbT47XG4gICAgcHJpdmF0ZSBjbGlja1N1YnNjcmlwdGlvbjtcbiAgICBwcml2YXRlIGNlbGxLZXlkb3duU3Vic2NyaXB0aW9uO1xuICAgIHByaXZhdGUgY2xpY2tUaW1lb3V0O1xuICAgIHByaXZhdGUgaGVhZGVyT2Zmc2V0O1xuICAgIHJvd0NsYXNzOiBSb3dDbGFzc0ZuO1xuICAgIGNvbnN0cnVjdG9yKGNoYW5nZU5vdGlmaWNhdGlvbjogQ2hhbmdlTm90aWZpY2F0aW9uU2VydmljZSwgZWRpdFNlcnZpY2U6IEVkaXRTZXJ2aWNlLCBsb2NhbGl6YXRpb246IExvY2FsaXphdGlvblNlcnZpY2UsIG5nWm9uZTogTmdab25lLCByZW5kZXJlcjogUmVuZGVyZXIyLCBlbGVtZW50OiBFbGVtZW50UmVmLCBkb21FdmVudHM6IERvbUV2ZW50c1NlcnZpY2UsIGNvbHVtbkluZm9TZXJ2aWNlOiBDb2x1bW5JbmZvU2VydmljZSwgbmF2aWdhdGlvblNlcnZpY2U6IE5hdmlnYXRpb25TZXJ2aWNlLCBleHBhbmRTdGF0ZTogRXhwYW5kU3RhdGVTZXJ2aWNlLCBzZWxlY3Rpb246IFNlbGVjdGlvblNlcnZpY2UpO1xuICAgIHJlYWRvbmx5IG5ld0RhdGFJdGVtOiBhbnk7XG4gICAgcmVhZG9ubHkgdW5sb2NrZWRDb2x1bW5zQ291bnQ6IG51bWJlcjtcbiAgICBpc09kZChpdGVtOiBhbnkpOiBib29sZWFuO1xuICAgIHRyYWNrQnlXcmFwcGVyKGluZGV4OiBudW1iZXIsIGl0ZW06IFRyZWVMaXN0SXRlbSk6IGFueTtcbiAgICB0cmFja0J5Q29sdW1ucyhpbmRleDogbnVtYmVyLCBpdGVtOiBhbnkpOiBhbnk7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczoge1xuICAgICAgICBbcHJvcGVydHlOYW1lOiBzdHJpbmddOiBTaW1wbGVDaGFuZ2U7XG4gICAgfSk6IHZvaWQ7XG4gICAgYWRkUm93TG9naWNhbEluZGV4KCk6IG51bWJlcjtcbiAgICBsb2dpY2FsQ29sSW5kZXgoY29sdW1uOiBhbnkpOiBudW1iZXI7XG4gICAgYXJpYUV4cGFuZGVkKGl0ZW06IGFueSwgY29sdW1uOiBhbnkpOiBhbnk7XG4gICAgYXJpYVNlbGVjdGVkKGl0ZW06IGFueSwgY29sdW1uOiBhbnksIGNvbHVtbkluZGV4OiBudW1iZXIpOiBhbnk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ0RvQ2hlY2soKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIGlzRWRpdGluZ0NlbGwoaXRlbTogYW55LCBjb2x1bW46IGFueSk6IGJvb2xlYW47XG4gICAgaXNFZGl0aW5nUm93KGl0ZW06IGFueSk6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgY29sdW1uc0NvbnRhaW5lcjogYW55O1xuICAgIHJlYWRvbmx5IGhhc0Zvb3RlcjogYm9vbGVhbjtcbiAgICByZWFkb25seSBjb2x1bW5zU3BhbjogbnVtYmVyO1xuICAgIHJlYWRvbmx5IGFsbENvbHVtbnNTcGFuOiBudW1iZXI7XG4gICAgcmVhZG9ubHkgY29sU3BhbjogbnVtYmVyO1xuICAgIHJlYWRvbmx5IGZvb3RlckNvbHVtbnM6IENvbHVtbkJhc2VbXTtcbiAgICBsb2dpY2FsUm93SW5kZXgocm93SW5kZXg6IG51bWJlcik6IG51bWJlcjtcbiAgICBpc0NlbGxTZWxlY3RlZChkYXRhSXRlbTogYW55LCBjb2x1bW46IGFueSwgY29sdW1uSW5kZXg6IG51bWJlcik6IGJvb2xlYW47XG4gICAgdGFyZ2V0QXJncyh0YXJnZXQ6IGFueSwgc2tpcEZvY3VzYWJsZT86IGJvb2xlYW4pOiBhbnk7XG4gICAgcHJpdmF0ZSBjbGlja0hhbmRsZXI7XG4gICAgcHJpdmF0ZSBlbWl0Q2VsbENsaWNrO1xuICAgIHByaXZhdGUgY2VsbEtleWRvd25IYW5kbGVyO1xuICAgIHByaXZhdGUgY2VsbENsaWNrQXJncztcbiAgICBwcml2YXRlIHRhcmdldEVsZW1lbnRzO1xuICAgIHByaXZhdGUgZXhwYW5kQ2xpY2s7XG4gICAgcHJpdmF0ZSBjaGVja2JveENsaWNrO1xuICAgIHByaXZhdGUgcm93SXRlbTtcbn1cbiJdfQ==