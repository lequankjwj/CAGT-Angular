/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, OnDestroy, NgZone, QueryList } from '@angular/core';
import { Subscription } from 'rxjs';
import { SuspendService } from '../scrolling/suspend.service';
import { PDFService } from './pdf.service';
import { PDFMarginComponent } from './pdf-margin.component';
import { PDFTemplateDirective } from './pdf-template.directive';
import { ColumnBase } from '../columns/column-base';
import { DrawOptions } from '@progress/kendo-drawing';
import { PDFExportComponent } from '@progress/kendo-angular-pdf-export';
/**
 * Configures the settings for the export of TreeList in PDF ([see example]({% slug pdfexport_treelist %})).
 */
import * as ɵngcc0 from '@angular/core';
export declare class PDFComponent extends PDFExportComponent implements OnDestroy {
    protected pdfService: PDFService;
    protected suspendService: SuspendService;
    protected ngZone: NgZone;
    /**
     * Exports all TreeList pages, starting from the first one.
     */
    allPages: boolean;
    columns: QueryList<ColumnBase>;
    /**
     * @hidden
     */
    marginComponent: PDFMarginComponent;
    /**
     * @hidden
     */
    pageTemplateDirective: PDFTemplateDirective;
    protected progress: HTMLElement;
    protected component: any;
    protected container: HTMLElement;
    protected skip: number;
    protected pageSize: number;
    protected originalHeight: string;
    protected originalOverflow: string;
    protected saveSubscription: Subscription;
    protected drawSubscription: Subscription;
    protected renderAllPages: boolean;
    protected originalColumns: ColumnBase[];
    constructor(pdfService: PDFService, suspendService: SuspendService, ngZone: NgZone, element: ElementRef);
    ngOnDestroy(): void;
    protected savePDF(component: any): void;
    protected drawPDF({ component, promise }: any): void;
    protected createPDF(component: any, callback: any): void;
    protected initProgress(): void;
    protected applyScroll(overlay: HTMLElement): void;
    protected draw(): void;
    protected createExportGroup(promise: any): void;
    protected createExportElement(callback: any): void;
    protected drawOptions(): DrawOptions;
    protected cleanup(): void;
    protected removeContainer(): void;
    protected changePage(skip: number, _take: number, callback: () => void, columns?: any[]): void;
    protected changeColumns(columns: any[], callback: () => void): void;
    protected reset(): void;
    protected onStable(callback: () => void): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PDFComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PDFComponent, "kendo-treelist-pdf", never, { "allPages": "allPages"; }, {}, ["marginComponent", "pageTemplateDirective", "columns"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGRmLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwZGYuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IEVsZW1lbnRSZWYsIE9uRGVzdHJveSwgTmdab25lLCBRdWVyeUxpc3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgU3VzcGVuZFNlcnZpY2UgfSBmcm9tICcuLi9zY3JvbGxpbmcvc3VzcGVuZC5zZXJ2aWNlJztcbmltcG9ydCB7IFBERlNlcnZpY2UgfSBmcm9tICcuL3BkZi5zZXJ2aWNlJztcbmltcG9ydCB7IFBERk1hcmdpbkNvbXBvbmVudCB9IGZyb20gJy4vcGRmLW1hcmdpbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgUERGVGVtcGxhdGVEaXJlY3RpdmUgfSBmcm9tICcuL3BkZi10ZW1wbGF0ZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgQ29sdW1uQmFzZSB9IGZyb20gJy4uL2NvbHVtbnMvY29sdW1uLWJhc2UnO1xuaW1wb3J0IHsgRHJhd09wdGlvbnMgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tZHJhd2luZyc7XG5pbXBvcnQgeyBQREZFeHBvcnRDb21wb25lbnQgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1wZGYtZXhwb3J0Jztcbi8qKlxuICogQ29uZmlndXJlcyB0aGUgc2V0dGluZ3MgZm9yIHRoZSBleHBvcnQgb2YgVHJlZUxpc3QgaW4gUERGIChbc2VlIGV4YW1wbGVdKHslIHNsdWcgcGRmZXhwb3J0X3RyZWVsaXN0ICV9KSkuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBERkNvbXBvbmVudCBleHRlbmRzIFBERkV4cG9ydENvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gICAgcHJvdGVjdGVkIHBkZlNlcnZpY2U6IFBERlNlcnZpY2U7XG4gICAgcHJvdGVjdGVkIHN1c3BlbmRTZXJ2aWNlOiBTdXNwZW5kU2VydmljZTtcbiAgICBwcm90ZWN0ZWQgbmdab25lOiBOZ1pvbmU7XG4gICAgLyoqXG4gICAgICogRXhwb3J0cyBhbGwgVHJlZUxpc3QgcGFnZXMsIHN0YXJ0aW5nIGZyb20gdGhlIGZpcnN0IG9uZS5cbiAgICAgKi9cbiAgICBhbGxQYWdlczogYm9vbGVhbjtcbiAgICBjb2x1bW5zOiBRdWVyeUxpc3Q8Q29sdW1uQmFzZT47XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG1hcmdpbkNvbXBvbmVudDogUERGTWFyZ2luQ29tcG9uZW50O1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBwYWdlVGVtcGxhdGVEaXJlY3RpdmU6IFBERlRlbXBsYXRlRGlyZWN0aXZlO1xuICAgIHByb3RlY3RlZCBwcm9ncmVzczogSFRNTEVsZW1lbnQ7XG4gICAgcHJvdGVjdGVkIGNvbXBvbmVudDogYW55O1xuICAgIHByb3RlY3RlZCBjb250YWluZXI6IEhUTUxFbGVtZW50O1xuICAgIHByb3RlY3RlZCBza2lwOiBudW1iZXI7XG4gICAgcHJvdGVjdGVkIHBhZ2VTaXplOiBudW1iZXI7XG4gICAgcHJvdGVjdGVkIG9yaWdpbmFsSGVpZ2h0OiBzdHJpbmc7XG4gICAgcHJvdGVjdGVkIG9yaWdpbmFsT3ZlcmZsb3c6IHN0cmluZztcbiAgICBwcm90ZWN0ZWQgc2F2ZVN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuICAgIHByb3RlY3RlZCBkcmF3U3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG4gICAgcHJvdGVjdGVkIHJlbmRlckFsbFBhZ2VzOiBib29sZWFuO1xuICAgIHByb3RlY3RlZCBvcmlnaW5hbENvbHVtbnM6IENvbHVtbkJhc2VbXTtcbiAgICBjb25zdHJ1Y3RvcihwZGZTZXJ2aWNlOiBQREZTZXJ2aWNlLCBzdXNwZW5kU2VydmljZTogU3VzcGVuZFNlcnZpY2UsIG5nWm9uZTogTmdab25lLCBlbGVtZW50OiBFbGVtZW50UmVmKTtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBzYXZlUERGKGNvbXBvbmVudDogYW55KTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgZHJhd1BERih7IGNvbXBvbmVudCwgcHJvbWlzZSB9OiBhbnkpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBjcmVhdGVQREYoY29tcG9uZW50OiBhbnksIGNhbGxiYWNrOiBhbnkpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBpbml0UHJvZ3Jlc3MoKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgYXBwbHlTY3JvbGwob3ZlcmxheTogSFRNTEVsZW1lbnQpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBkcmF3KCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIGNyZWF0ZUV4cG9ydEdyb3VwKHByb21pc2U6IGFueSk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIGNyZWF0ZUV4cG9ydEVsZW1lbnQoY2FsbGJhY2s6IGFueSk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIGRyYXdPcHRpb25zKCk6IERyYXdPcHRpb25zO1xuICAgIHByb3RlY3RlZCBjbGVhbnVwKCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIHJlbW92ZUNvbnRhaW5lcigpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBjaGFuZ2VQYWdlKHNraXA6IG51bWJlciwgX3Rha2U6IG51bWJlciwgY2FsbGJhY2s6ICgpID0+IHZvaWQsIGNvbHVtbnM/OiBhbnlbXSk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIGNoYW5nZUNvbHVtbnMoY29sdW1uczogYW55W10sIGNhbGxiYWNrOiAoKSA9PiB2b2lkKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgcmVzZXQoKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgb25TdGFibGUoY2FsbGJhY2s6ICgpID0+IHZvaWQpOiB2b2lkO1xufVxuIl19