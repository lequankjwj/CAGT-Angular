/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { PopupService, PopupRef } from '@progress/kendo-angular-popup';
import { Renderer2, NgZone, OnDestroy } from '@angular/core';
import { PreventableEvent } from './preventable-event';
import { Subject } from 'rxjs';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { ScrollSyncService } from '../scrolling/scroll-sync.service';
/**
 * Arguments for the `close` event of the filter and column-menu popup.
 */
import * as ɵngcc0 from '@angular/core';
export declare class PopupCloseEvent extends PreventableEvent {
    /**
     * The original DOM event that causes the popup to close.
     */
    originalEvent: any;
    constructor(e: any);
}
/**
 * The service that is used for the popups of the filter and column menus
 * ([see example]({% slug reusablecustomfilters_treelist %}#toc-filter-menu-with-popup)).
 */
export declare class SinglePopupService implements OnDestroy {
    private popupService;
    private renderer;
    private ngZone;
    private localization;
    /**
     * Fires when the filter or column menus are about to close because the user clicked outside their popups.
     * Used to prevent the popup from closing.
     */
    readonly onClose: Subject<PopupCloseEvent>;
    private removeClick;
    private popupRef;
    private scrollSubscription;
    constructor(popupService: PopupService, renderer: Renderer2, ngZone: NgZone, scrollSyncService: ScrollSyncService, localization: LocalizationService);
    /**
     * @hidden
     */
    open(anchor: any, template: any, popupRef: PopupRef, popupClass?: string): PopupRef;
    /**
     * @hidden
     */
    destroy(): void;
    ngOnDestroy(): void;
    private detachClose;
    private attachClose;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SinglePopupService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<SinglePopupService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2luZ2xlLXBvcHVwLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsic2luZ2xlLXBvcHVwLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgUG9wdXBTZXJ2aWNlLCBQb3B1cFJlZiB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLXBvcHVwJztcbmltcG9ydCB7IFJlbmRlcmVyMiwgTmdab25lLCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFByZXZlbnRhYmxlRXZlbnQgfSBmcm9tICcuL3ByZXZlbnRhYmxlLWV2ZW50JztcbmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IExvY2FsaXphdGlvblNlcnZpY2UgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1sMTBuJztcbmltcG9ydCB7IFNjcm9sbFN5bmNTZXJ2aWNlIH0gZnJvbSAnLi4vc2Nyb2xsaW5nL3Njcm9sbC1zeW5jLnNlcnZpY2UnO1xuLyoqXG4gKiBBcmd1bWVudHMgZm9yIHRoZSBgY2xvc2VgIGV2ZW50IG9mIHRoZSBmaWx0ZXIgYW5kIGNvbHVtbi1tZW51IHBvcHVwLlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQb3B1cENsb3NlRXZlbnQgZXh0ZW5kcyBQcmV2ZW50YWJsZUV2ZW50IHtcbiAgICAvKipcbiAgICAgKiBUaGUgb3JpZ2luYWwgRE9NIGV2ZW50IHRoYXQgY2F1c2VzIHRoZSBwb3B1cCB0byBjbG9zZS5cbiAgICAgKi9cbiAgICBvcmlnaW5hbEV2ZW50OiBhbnk7XG4gICAgY29uc3RydWN0b3IoZTogYW55KTtcbn1cbi8qKlxuICogVGhlIHNlcnZpY2UgdGhhdCBpcyB1c2VkIGZvciB0aGUgcG9wdXBzIG9mIHRoZSBmaWx0ZXIgYW5kIGNvbHVtbiBtZW51c1xuICogKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyByZXVzYWJsZWN1c3RvbWZpbHRlcnNfdHJlZWxpc3QgJX0jdG9jLWZpbHRlci1tZW51LXdpdGgtcG9wdXApKS5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU2luZ2xlUG9wdXBTZXJ2aWNlIGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIHBvcHVwU2VydmljZTtcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xuICAgIHByaXZhdGUgbmdab25lO1xuICAgIHByaXZhdGUgbG9jYWxpemF0aW9uO1xuICAgIC8qKlxuICAgICAqIEZpcmVzIHdoZW4gdGhlIGZpbHRlciBvciBjb2x1bW4gbWVudXMgYXJlIGFib3V0IHRvIGNsb3NlIGJlY2F1c2UgdGhlIHVzZXIgY2xpY2tlZCBvdXRzaWRlIHRoZWlyIHBvcHVwcy5cbiAgICAgKiBVc2VkIHRvIHByZXZlbnQgdGhlIHBvcHVwIGZyb20gY2xvc2luZy5cbiAgICAgKi9cbiAgICByZWFkb25seSBvbkNsb3NlOiBTdWJqZWN0PFBvcHVwQ2xvc2VFdmVudD47XG4gICAgcHJpdmF0ZSByZW1vdmVDbGljaztcbiAgICBwcml2YXRlIHBvcHVwUmVmO1xuICAgIHByaXZhdGUgc2Nyb2xsU3Vic2NyaXB0aW9uO1xuICAgIGNvbnN0cnVjdG9yKHBvcHVwU2VydmljZTogUG9wdXBTZXJ2aWNlLCByZW5kZXJlcjogUmVuZGVyZXIyLCBuZ1pvbmU6IE5nWm9uZSwgc2Nyb2xsU3luY1NlcnZpY2U6IFNjcm9sbFN5bmNTZXJ2aWNlLCBsb2NhbGl6YXRpb246IExvY2FsaXphdGlvblNlcnZpY2UpO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBvcGVuKGFuY2hvcjogYW55LCB0ZW1wbGF0ZTogYW55LCBwb3B1cFJlZjogUG9wdXBSZWYsIHBvcHVwQ2xhc3M/OiBzdHJpbmcpOiBQb3B1cFJlZjtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZGVzdHJveSgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBkZXRhY2hDbG9zZTtcbiAgICBwcml2YXRlIGF0dGFjaENsb3NlO1xufVxuIl19