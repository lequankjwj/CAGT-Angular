/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { FormGroup } from '@angular/forms';
import { RowEditingDirectiveBase } from './row-editing-directive-base';
import { TreeListComponent } from '../treelist.component';
import { CreateFormGroupArgs } from './create-form-group-args.interface';
/**
 * A directive which encapsulates the editing operations of the TreeList when using the
 * Reactive Forms ([see example]({% slug editing_directives_treelist %}#toc-the-reactive-directive)).
 */
import * as ɵngcc0 from '@angular/core';
export declare class ReactiveEditingDirective extends RowEditingDirectiveBase {
    protected treelist: TreeListComponent;
    /**
     * The function that creates the `FormGroup` for the edited model.
     */
    createFormGroup: (args: CreateFormGroupArgs) => FormGroup;
    constructor(treelist: TreeListComponent);
    protected createModel(args: any): any;
    protected saveModel({ dataItem, formGroup, isNew }: any): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ReactiveEditingDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ReactiveEditingDirective, "[kendoTreeListReactiveEditing]", ["kendoTreeListReactiveEditing"], { "createFormGroup": "kendoTreeListReactiveEditing"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVhY3RpdmUtZWRpdGluZy5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsicmVhY3RpdmUtZWRpdGluZy5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IFJvd0VkaXRpbmdEaXJlY3RpdmVCYXNlIH0gZnJvbSAnLi9yb3ctZWRpdGluZy1kaXJlY3RpdmUtYmFzZSc7XG5pbXBvcnQgeyBUcmVlTGlzdENvbXBvbmVudCB9IGZyb20gJy4uL3RyZWVsaXN0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDcmVhdGVGb3JtR3JvdXBBcmdzIH0gZnJvbSAnLi9jcmVhdGUtZm9ybS1ncm91cC1hcmdzLmludGVyZmFjZSc7XG4vKipcbiAqIEEgZGlyZWN0aXZlIHdoaWNoIGVuY2Fwc3VsYXRlcyB0aGUgZWRpdGluZyBvcGVyYXRpb25zIG9mIHRoZSBUcmVlTGlzdCB3aGVuIHVzaW5nIHRoZVxuICogUmVhY3RpdmUgRm9ybXMgKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyBlZGl0aW5nX2RpcmVjdGl2ZXNfdHJlZWxpc3QgJX0jdG9jLXRoZS1yZWFjdGl2ZS1kaXJlY3RpdmUpKS5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUmVhY3RpdmVFZGl0aW5nRGlyZWN0aXZlIGV4dGVuZHMgUm93RWRpdGluZ0RpcmVjdGl2ZUJhc2Uge1xuICAgIHByb3RlY3RlZCB0cmVlbGlzdDogVHJlZUxpc3RDb21wb25lbnQ7XG4gICAgLyoqXG4gICAgICogVGhlIGZ1bmN0aW9uIHRoYXQgY3JlYXRlcyB0aGUgYEZvcm1Hcm91cGAgZm9yIHRoZSBlZGl0ZWQgbW9kZWwuXG4gICAgICovXG4gICAgY3JlYXRlRm9ybUdyb3VwOiAoYXJnczogQ3JlYXRlRm9ybUdyb3VwQXJncykgPT4gRm9ybUdyb3VwO1xuICAgIGNvbnN0cnVjdG9yKHRyZWVsaXN0OiBUcmVlTGlzdENvbXBvbmVudCk7XG4gICAgcHJvdGVjdGVkIGNyZWF0ZU1vZGVsKGFyZ3M6IGFueSk6IGFueTtcbiAgICBwcm90ZWN0ZWQgc2F2ZU1vZGVsKHsgZGF0YUl0ZW0sIGZvcm1Hcm91cCwgaXNOZXcgfTogYW55KTogYW55O1xufVxuIl19