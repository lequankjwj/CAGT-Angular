/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { OnInit, EventEmitter, OnDestroy, ChangeDetectorRef } from '@angular/core';
import { CompositeFilterDescriptor } from "@progress/kendo-data-query";
import { ColumnComponent } from "../../columns/column.component";
import { FilterService } from "../filter.service";
import { LocalizationService } from '@progress/kendo-angular-l10n';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class FilterMenuContainerComponent implements OnInit, OnDestroy {
    protected parentService: FilterService;
    childService: FilterService;
    protected localization: LocalizationService;
    protected cd: ChangeDetectorRef;
    close: EventEmitter<any>;
    /**
     * The column with which the filter is associated.
     * @type {ColumnComponent}
     */
    column: ColumnComponent;
    /**
    * The current root filter.
    * @type {CompositeFilterDescriptor}
    */
    filter: CompositeFilterDescriptor;
    /**
     * @hidden
     */
    actionsClass: string;
    readonly childFilter: CompositeFilterDescriptor;
    private _childFilter;
    private subscription;
    private _templateContext;
    private _filter;
    constructor(parentService: FilterService, childService: FilterService, localization: LocalizationService, cd: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnDestroy(): void;
    readonly disabled: boolean;
    readonly templateContext: any;
    readonly hasTemplate: boolean;
    submit(): boolean;
    reset(): void;
    readonly clearText: string;
    readonly filterText: string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FilterMenuContainerComponent, [{ skipSelf: true; }, null, null, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<FilterMenuContainerComponent, "kendo-treelist-filter-menu-container", never, { "actionsClass": "actionsClass"; "filter": "filter"; "column": "column"; }, { "close": "close"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLW1lbnUtY29udGFpbmVyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJmaWx0ZXItbWVudS1jb250YWluZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgT25Jbml0LCBFdmVudEVtaXR0ZXIsIE9uRGVzdHJveSwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbXBvc2l0ZUZpbHRlckRlc2NyaXB0b3IgfSBmcm9tIFwiQHByb2dyZXNzL2tlbmRvLWRhdGEtcXVlcnlcIjtcbmltcG9ydCB7IENvbHVtbkNvbXBvbmVudCB9IGZyb20gXCIuLi8uLi9jb2x1bW5zL2NvbHVtbi5jb21wb25lbnRcIjtcbmltcG9ydCB7IEZpbHRlclNlcnZpY2UgfSBmcm9tIFwiLi4vZmlsdGVyLnNlcnZpY2VcIjtcbmltcG9ydCB7IExvY2FsaXphdGlvblNlcnZpY2UgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1sMTBuJztcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBGaWx0ZXJNZW51Q29udGFpbmVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICAgIHByb3RlY3RlZCBwYXJlbnRTZXJ2aWNlOiBGaWx0ZXJTZXJ2aWNlO1xuICAgIGNoaWxkU2VydmljZTogRmlsdGVyU2VydmljZTtcbiAgICBwcm90ZWN0ZWQgbG9jYWxpemF0aW9uOiBMb2NhbGl6YXRpb25TZXJ2aWNlO1xuICAgIHByb3RlY3RlZCBjZDogQ2hhbmdlRGV0ZWN0b3JSZWY7XG4gICAgY2xvc2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIC8qKlxuICAgICAqIFRoZSBjb2x1bW4gd2l0aCB3aGljaCB0aGUgZmlsdGVyIGlzIGFzc29jaWF0ZWQuXG4gICAgICogQHR5cGUge0NvbHVtbkNvbXBvbmVudH1cbiAgICAgKi9cbiAgICBjb2x1bW46IENvbHVtbkNvbXBvbmVudDtcbiAgICAvKipcbiAgICAqIFRoZSBjdXJyZW50IHJvb3QgZmlsdGVyLlxuICAgICogQHR5cGUge0NvbXBvc2l0ZUZpbHRlckRlc2NyaXB0b3J9XG4gICAgKi9cbiAgICBmaWx0ZXI6IENvbXBvc2l0ZUZpbHRlckRlc2NyaXB0b3I7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGFjdGlvbnNDbGFzczogc3RyaW5nO1xuICAgIHJlYWRvbmx5IGNoaWxkRmlsdGVyOiBDb21wb3NpdGVGaWx0ZXJEZXNjcmlwdG9yO1xuICAgIHByaXZhdGUgX2NoaWxkRmlsdGVyO1xuICAgIHByaXZhdGUgc3Vic2NyaXB0aW9uO1xuICAgIHByaXZhdGUgX3RlbXBsYXRlQ29udGV4dDtcbiAgICBwcml2YXRlIF9maWx0ZXI7XG4gICAgY29uc3RydWN0b3IocGFyZW50U2VydmljZTogRmlsdGVyU2VydmljZSwgY2hpbGRTZXJ2aWNlOiBGaWx0ZXJTZXJ2aWNlLCBsb2NhbGl6YXRpb246IExvY2FsaXphdGlvblNlcnZpY2UsIGNkOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIHJlYWRvbmx5IGRpc2FibGVkOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IHRlbXBsYXRlQ29udGV4dDogYW55O1xuICAgIHJlYWRvbmx5IGhhc1RlbXBsYXRlOiBib29sZWFuO1xuICAgIHN1Ym1pdCgpOiBib29sZWFuO1xuICAgIHJlc2V0KCk6IHZvaWQ7XG4gICAgcmVhZG9ubHkgY2xlYXJUZXh0OiBzdHJpbmc7XG4gICAgcmVhZG9ubHkgZmlsdGVyVGV4dDogc3RyaW5nO1xufVxuIl19