/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { CompositeFilterDescriptor, FilterDescriptor } from '@progress/kendo-data-query';
import { ColumnComponent } from "../../columns/column.component";
import { FilterService } from '../filter.service';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { DateFilterComponent } from '../date-filter.component';
/**
 * Represents a date-filter menu component.
 *
 * @example
 *  ```html-no-run
 *      <kendo-treelist-column field="OrderDate" title="Order Date">
 *          <ng-template kendoTreeListFilterMenuTemplate let-filter let-column="column" let-filterService="filterService">
 *            <kendo-treelist-date-filter-menu
 *                [column]="column"
 *                [filter]="filter"
 *                [filterService]="filterService"
 *                >
 *            </kendo-treelist-date-filter-menu>
 *          </ng-template>
 *      </kendo-treelist-column>
 *   ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class DateFilterMenuComponent extends DateFilterComponent {
    logicOperators: Array<{
        text: string;
        value: "and" | "or";
    }>;
    /**
     * @hidden
     */
    readonly hostClasses: boolean;
    /**
     * The column with which the filter is associated.
     * @type {ColumnComponent}
     */
    column: ColumnComponent;
    /**
     * The current menu filter.
     * @type {CompositeFilterDescriptor}
     */
    filter: CompositeFilterDescriptor;
    /**
     * Determines if the inputs of second criteria will be displayed.
     */
    extra: boolean;
    /**
     * The `FilterService` instance which is responsible for handling the changes in the filter descriptor.
     */
    filterService: FilterService;
    constructor(localization: LocalizationService);
    readonly firstFilter: FilterDescriptor;
    readonly secondFilter: FilterDescriptor;
    logicChange(value: 'and' | 'or'): void;
    protected localizationChange(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DateFilterMenuComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DateFilterMenuComponent, "kendo-treelist-date-filter-menu", never, { "filter": "filter"; "extra": "extra"; "column": "column"; "filterService": "filterService"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1maWx0ZXItbWVudS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiZGF0ZS1maWx0ZXItbWVudS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgQ29tcG9zaXRlRmlsdGVyRGVzY3JpcHRvciwgRmlsdGVyRGVzY3JpcHRvciB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1kYXRhLXF1ZXJ5JztcbmltcG9ydCB7IENvbHVtbkNvbXBvbmVudCB9IGZyb20gXCIuLi8uLi9jb2x1bW5zL2NvbHVtbi5jb21wb25lbnRcIjtcbmltcG9ydCB7IEZpbHRlclNlcnZpY2UgfSBmcm9tICcuLi9maWx0ZXIuc2VydmljZSc7XG5pbXBvcnQgeyBMb2NhbGl6YXRpb25TZXJ2aWNlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItbDEwbic7XG5pbXBvcnQgeyBEYXRlRmlsdGVyQ29tcG9uZW50IH0gZnJvbSAnLi4vZGF0ZS1maWx0ZXIuY29tcG9uZW50Jztcbi8qKlxuICogUmVwcmVzZW50cyBhIGRhdGUtZmlsdGVyIG1lbnUgY29tcG9uZW50LlxuICpcbiAqIEBleGFtcGxlXG4gKiAgYGBgaHRtbC1uby1ydW5cbiAqICAgICAgPGtlbmRvLXRyZWVsaXN0LWNvbHVtbiBmaWVsZD1cIk9yZGVyRGF0ZVwiIHRpdGxlPVwiT3JkZXIgRGF0ZVwiPlxuICogICAgICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvVHJlZUxpc3RGaWx0ZXJNZW51VGVtcGxhdGUgbGV0LWZpbHRlciBsZXQtY29sdW1uPVwiY29sdW1uXCIgbGV0LWZpbHRlclNlcnZpY2U9XCJmaWx0ZXJTZXJ2aWNlXCI+XG4gKiAgICAgICAgICAgIDxrZW5kby10cmVlbGlzdC1kYXRlLWZpbHRlci1tZW51XG4gKiAgICAgICAgICAgICAgICBbY29sdW1uXT1cImNvbHVtblwiXG4gKiAgICAgICAgICAgICAgICBbZmlsdGVyXT1cImZpbHRlclwiXG4gKiAgICAgICAgICAgICAgICBbZmlsdGVyU2VydmljZV09XCJmaWx0ZXJTZXJ2aWNlXCJcbiAqICAgICAgICAgICAgICAgID5cbiAqICAgICAgICAgICAgPC9rZW5kby10cmVlbGlzdC1kYXRlLWZpbHRlci1tZW51PlxuICogICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgICAgPC9rZW5kby10cmVlbGlzdC1jb2x1bW4+XG4gKiAgIGBgYFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEYXRlRmlsdGVyTWVudUNvbXBvbmVudCBleHRlbmRzIERhdGVGaWx0ZXJDb21wb25lbnQge1xuICAgIGxvZ2ljT3BlcmF0b3JzOiBBcnJheTx7XG4gICAgICAgIHRleHQ6IHN0cmluZztcbiAgICAgICAgdmFsdWU6IFwiYW5kXCIgfCBcIm9yXCI7XG4gICAgfT47XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHJlYWRvbmx5IGhvc3RDbGFzc2VzOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIFRoZSBjb2x1bW4gd2l0aCB3aGljaCB0aGUgZmlsdGVyIGlzIGFzc29jaWF0ZWQuXG4gICAgICogQHR5cGUge0NvbHVtbkNvbXBvbmVudH1cbiAgICAgKi9cbiAgICBjb2x1bW46IENvbHVtbkNvbXBvbmVudDtcbiAgICAvKipcbiAgICAgKiBUaGUgY3VycmVudCBtZW51IGZpbHRlci5cbiAgICAgKiBAdHlwZSB7Q29tcG9zaXRlRmlsdGVyRGVzY3JpcHRvcn1cbiAgICAgKi9cbiAgICBmaWx0ZXI6IENvbXBvc2l0ZUZpbHRlckRlc2NyaXB0b3I7XG4gICAgLyoqXG4gICAgICogRGV0ZXJtaW5lcyBpZiB0aGUgaW5wdXRzIG9mIHNlY29uZCBjcml0ZXJpYSB3aWxsIGJlIGRpc3BsYXllZC5cbiAgICAgKi9cbiAgICBleHRyYTogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBUaGUgYEZpbHRlclNlcnZpY2VgIGluc3RhbmNlIHdoaWNoIGlzIHJlc3BvbnNpYmxlIGZvciBoYW5kbGluZyB0aGUgY2hhbmdlcyBpbiB0aGUgZmlsdGVyIGRlc2NyaXB0b3IuXG4gICAgICovXG4gICAgZmlsdGVyU2VydmljZTogRmlsdGVyU2VydmljZTtcbiAgICBjb25zdHJ1Y3Rvcihsb2NhbGl6YXRpb246IExvY2FsaXphdGlvblNlcnZpY2UpO1xuICAgIHJlYWRvbmx5IGZpcnN0RmlsdGVyOiBGaWx0ZXJEZXNjcmlwdG9yO1xuICAgIHJlYWRvbmx5IHNlY29uZEZpbHRlcjogRmlsdGVyRGVzY3JpcHRvcjtcbiAgICBsb2dpY0NoYW5nZSh2YWx1ZTogJ2FuZCcgfCAnb3InKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgbG9jYWxpemF0aW9uQ2hhbmdlKCk6IHZvaWQ7XG59XG4iXX0=