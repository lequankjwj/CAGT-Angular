/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, NgZone, Renderer2, EventEmitter, OnInit, OnDestroy } from '@angular/core';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class ColumnListComponent implements OnInit, OnDestroy {
    private element;
    private ngZone;
    private renderer;
    readonly className: boolean;
    reset: EventEmitter<any>;
    apply: EventEmitter<any>;
    columnChange: EventEmitter<any>;
    columns: any[];
    autoSync: boolean;
    allowHideAll: boolean;
    applyText: string;
    resetText: string;
    actionsClass: string;
    private hasLocked;
    private hasVisibleLocked;
    private unlockedCount;
    private hasUnlockedFiltered;
    private hasFiltered;
    private _columns;
    private allColumns;
    private domSubscriptions;
    constructor(element: ElementRef, ngZone: NgZone, renderer: Renderer2);
    isDisabled(column: any): boolean;
    ngOnInit(): void;
    ngOnDestroy(): void;
    cancelChanges(): void;
    applyChanges(): void;
    private forEachCheckBox;
    private updateDisabled;
    private updateColumnState;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ColumnListComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ColumnListComponent, "kendo-treelist-columnlist", never, { "autoSync": "autoSync"; "allowHideAll": "allowHideAll"; "actionsClass": "actionsClass"; "columns": "columns"; "applyText": "applyText"; "resetText": "resetText"; }, { "reset": "reset"; "apply": "apply"; "columnChange": "columnChange"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLWxpc3QuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImNvbHVtbi1saXN0LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgRWxlbWVudFJlZiwgTmdab25lLCBSZW5kZXJlcjIsIEV2ZW50RW1pdHRlciwgT25Jbml0LCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDb2x1bW5MaXN0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgZWxlbWVudDtcbiAgICBwcml2YXRlIG5nWm9uZTtcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xuICAgIHJlYWRvbmx5IGNsYXNzTmFtZTogYm9vbGVhbjtcbiAgICByZXNldDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgYXBwbHk6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGNvbHVtbkNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgY29sdW1uczogYW55W107XG4gICAgYXV0b1N5bmM6IGJvb2xlYW47XG4gICAgYWxsb3dIaWRlQWxsOiBib29sZWFuO1xuICAgIGFwcGx5VGV4dDogc3RyaW5nO1xuICAgIHJlc2V0VGV4dDogc3RyaW5nO1xuICAgIGFjdGlvbnNDbGFzczogc3RyaW5nO1xuICAgIHByaXZhdGUgaGFzTG9ja2VkO1xuICAgIHByaXZhdGUgaGFzVmlzaWJsZUxvY2tlZDtcbiAgICBwcml2YXRlIHVubG9ja2VkQ291bnQ7XG4gICAgcHJpdmF0ZSBoYXNVbmxvY2tlZEZpbHRlcmVkO1xuICAgIHByaXZhdGUgaGFzRmlsdGVyZWQ7XG4gICAgcHJpdmF0ZSBfY29sdW1ucztcbiAgICBwcml2YXRlIGFsbENvbHVtbnM7XG4gICAgcHJpdmF0ZSBkb21TdWJzY3JpcHRpb25zO1xuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnQ6IEVsZW1lbnRSZWYsIG5nWm9uZTogTmdab25lLCByZW5kZXJlcjogUmVuZGVyZXIyKTtcbiAgICBpc0Rpc2FibGVkKGNvbHVtbjogYW55KTogYm9vbGVhbjtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgY2FuY2VsQ2hhbmdlcygpOiB2b2lkO1xuICAgIGFwcGx5Q2hhbmdlcygpOiB2b2lkO1xuICAgIHByaXZhdGUgZm9yRWFjaENoZWNrQm94O1xuICAgIHByaXZhdGUgdXBkYXRlRGlzYWJsZWQ7XG4gICAgcHJpdmF0ZSB1cGRhdGVDb2x1bW5TdGF0ZTtcbn1cbiJdfQ==