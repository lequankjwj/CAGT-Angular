/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { NgZone, Renderer2, OnDestroy, ChangeDetectorRef } from '@angular/core';
import { PopupService } from '@progress/kendo-angular-popup';
import { ColumnInfoService } from '../common/column-info.service';
import { LocalizationService } from "@progress/kendo-angular-l10n";
/**
 * Represents the component for selecting columns in the TreeList. To enable the user to show or hide columns,
 * add the component inside a [`ToolbarTemplate`]({% slug api_treelist_toolbartemplatedirective %}) directive.
 *
 * {% meta height:500 %}
 * {% embed_file column-menu/chooser-toolbar/app.component.ts preview %}
 * {% embed_file column-menu/app.module.ts %}
 * {% embed_file column-menu/main.ts %}
 * {% embed_file shared/employees.ts %}
 * {% endmeta %}
 */
import * as ɵngcc0 from '@angular/core';
export declare class ColumnChooserComponent implements OnDestroy {
    localization: LocalizationService;
    private columnInfoService;
    private popupService;
    private ngZone;
    private renderer;
    private changeDetector;
    /**
     * Specifies if the changes in the visibility of the column will be immediately applied.
     */
    autoSync: boolean;
    /**
     * Specifies if all columns can be hidden.
     */
    allowHideAll: boolean;
    readonly columns: any[];
    private popupRef;
    private closeClick;
    constructor(localization: LocalizationService, columnInfoService: ColumnInfoService, popupService: PopupService, ngZone: NgZone, renderer: Renderer2, changeDetector: ChangeDetectorRef);
    ngOnDestroy(): void;
    /**
     * @hidden
     */
    toggle(anchor: any, template: any): void;
    /**
     * @hidden
     */
    onApply(changed: any[]): void;
    /**
     * @hidden
     */
    onChange(changed: any[]): void;
    private close;
    private detachClose;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ColumnChooserComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ColumnChooserComponent, "kendo-treelist-column-chooser", never, { "autoSync": "autoSync"; "allowHideAll": "allowHideAll"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLWNob29zZXIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImNvbHVtbi1jaG9vc2VyLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IE5nWm9uZSwgUmVuZGVyZXIyLCBPbkRlc3Ryb3ksIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQb3B1cFNlcnZpY2UgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1wb3B1cCc7XG5pbXBvcnQgeyBDb2x1bW5JbmZvU2VydmljZSB9IGZyb20gJy4uL2NvbW1vbi9jb2x1bW4taW5mby5zZXJ2aWNlJztcbmltcG9ydCB7IExvY2FsaXphdGlvblNlcnZpY2UgfSBmcm9tIFwiQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItbDEwblwiO1xuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBjb21wb25lbnQgZm9yIHNlbGVjdGluZyBjb2x1bW5zIGluIHRoZSBUcmVlTGlzdC4gVG8gZW5hYmxlIHRoZSB1c2VyIHRvIHNob3cgb3IgaGlkZSBjb2x1bW5zLFxuICogYWRkIHRoZSBjb21wb25lbnQgaW5zaWRlIGEgW2BUb29sYmFyVGVtcGxhdGVgXSh7JSBzbHVnIGFwaV90cmVlbGlzdF90b29sYmFydGVtcGxhdGVkaXJlY3RpdmUgJX0pIGRpcmVjdGl2ZS5cbiAqXG4gKiB7JSBtZXRhIGhlaWdodDo1MDAgJX1cbiAqIHslIGVtYmVkX2ZpbGUgY29sdW1uLW1lbnUvY2hvb3Nlci10b29sYmFyL2FwcC5jb21wb25lbnQudHMgcHJldmlldyAlfVxuICogeyUgZW1iZWRfZmlsZSBjb2x1bW4tbWVudS9hcHAubW9kdWxlLnRzICV9XG4gKiB7JSBlbWJlZF9maWxlIGNvbHVtbi1tZW51L21haW4udHMgJX1cbiAqIHslIGVtYmVkX2ZpbGUgc2hhcmVkL2VtcGxveWVlcy50cyAlfVxuICogeyUgZW5kbWV0YSAlfVxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDb2x1bW5DaG9vc2VyQ29tcG9uZW50IGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgICBsb2NhbGl6YXRpb246IExvY2FsaXphdGlvblNlcnZpY2U7XG4gICAgcHJpdmF0ZSBjb2x1bW5JbmZvU2VydmljZTtcbiAgICBwcml2YXRlIHBvcHVwU2VydmljZTtcbiAgICBwcml2YXRlIG5nWm9uZTtcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xuICAgIHByaXZhdGUgY2hhbmdlRGV0ZWN0b3I7XG4gICAgLyoqXG4gICAgICogU3BlY2lmaWVzIGlmIHRoZSBjaGFuZ2VzIGluIHRoZSB2aXNpYmlsaXR5IG9mIHRoZSBjb2x1bW4gd2lsbCBiZSBpbW1lZGlhdGVseSBhcHBsaWVkLlxuICAgICAqL1xuICAgIGF1dG9TeW5jOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIFNwZWNpZmllcyBpZiBhbGwgY29sdW1ucyBjYW4gYmUgaGlkZGVuLlxuICAgICAqL1xuICAgIGFsbG93SGlkZUFsbDogYm9vbGVhbjtcbiAgICByZWFkb25seSBjb2x1bW5zOiBhbnlbXTtcbiAgICBwcml2YXRlIHBvcHVwUmVmO1xuICAgIHByaXZhdGUgY2xvc2VDbGljaztcbiAgICBjb25zdHJ1Y3Rvcihsb2NhbGl6YXRpb246IExvY2FsaXphdGlvblNlcnZpY2UsIGNvbHVtbkluZm9TZXJ2aWNlOiBDb2x1bW5JbmZvU2VydmljZSwgcG9wdXBTZXJ2aWNlOiBQb3B1cFNlcnZpY2UsIG5nWm9uZTogTmdab25lLCByZW5kZXJlcjogUmVuZGVyZXIyLCBjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHRvZ2dsZShhbmNob3I6IGFueSwgdGVtcGxhdGU6IGFueSk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG9uQXBwbHkoY2hhbmdlZDogYW55W10pOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBvbkNoYW5nZShjaGFuZ2VkOiBhbnlbXSk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBjbG9zZTtcbiAgICBwcml2YXRlIGRldGFjaENsb3NlO1xufVxuIl19