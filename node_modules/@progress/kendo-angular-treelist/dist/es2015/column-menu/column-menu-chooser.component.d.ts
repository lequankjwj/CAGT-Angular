/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { EventEmitter, ChangeDetectorRef } from '@angular/core';
import { ColumnInfoService } from '../common/column-info.service';
import { LocalizationService } from "@progress/kendo-angular-l10n";
import { ColumnMenuItemBase } from './column-menu-item-base';
/**
 * Represents the component for selecting columns in the TreeList that can be placed
 * inside a [`ColumnMenuTemplate`]({% slug api_treelist_columnmenutemplatedirective %}) directive.
 *
 * > You have to set the [ColumnMenuService]({% slug api_treelist_columnmenuservice %}) that is passed by
 * > the template to the service input of the `kendo-treelist-columnmenu-chooser` component.
 *
 * {% meta height:500 %}
 * {% embed_file column-menu/template-chooser/app.component.ts preview %}
 * {% embed_file column-menu/app.module.ts %}
 * {% embed_file column-menu/main.ts %}
 * {% embed_file shared/employees.ts %}
 * {% endmeta %}
 */
import * as ɵngcc0 from '@angular/core';
export declare class ColumnMenuChooserComponent extends ColumnMenuItemBase {
    localization: LocalizationService;
    private columnInfoService;
    private changeDetector;
    /**
     * Fires when the content is expanded.
     */
    expand: EventEmitter<any>;
    /**
     * Fires when the content is collapsed.
     */
    collapse: EventEmitter<any>;
    /**
     * Specifies if the content is expanded.
     */
    expanded: boolean;
    /**
     * @hidden
     */
    actionsClass: string;
    readonly columns: any;
    constructor(localization: LocalizationService, columnInfoService: ColumnInfoService, changeDetector: ChangeDetectorRef);
    /**
     * @hidden
     */
    onApply(changed: any[]): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ColumnMenuChooserComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ColumnMenuChooserComponent, "kendo-treelist-columnmenu-chooser", never, { "expanded": "expanded"; }, { "expand": "expand"; "collapse": "collapse"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLW1lbnUtY2hvb3Nlci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiY29sdW1uLW1lbnUtY2hvb3Nlci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IEV2ZW50RW1pdHRlciwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbHVtbkluZm9TZXJ2aWNlIH0gZnJvbSAnLi4vY29tbW9uL2NvbHVtbi1pbmZvLnNlcnZpY2UnO1xuaW1wb3J0IHsgTG9jYWxpemF0aW9uU2VydmljZSB9IGZyb20gXCJAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1sMTBuXCI7XG5pbXBvcnQgeyBDb2x1bW5NZW51SXRlbUJhc2UgfSBmcm9tICcuL2NvbHVtbi1tZW51LWl0ZW0tYmFzZSc7XG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIGNvbXBvbmVudCBmb3Igc2VsZWN0aW5nIGNvbHVtbnMgaW4gdGhlIFRyZWVMaXN0IHRoYXQgY2FuIGJlIHBsYWNlZFxuICogaW5zaWRlIGEgW2BDb2x1bW5NZW51VGVtcGxhdGVgXSh7JSBzbHVnIGFwaV90cmVlbGlzdF9jb2x1bW5tZW51dGVtcGxhdGVkaXJlY3RpdmUgJX0pIGRpcmVjdGl2ZS5cbiAqXG4gKiA+IFlvdSBoYXZlIHRvIHNldCB0aGUgW0NvbHVtbk1lbnVTZXJ2aWNlXSh7JSBzbHVnIGFwaV90cmVlbGlzdF9jb2x1bW5tZW51c2VydmljZSAlfSkgdGhhdCBpcyBwYXNzZWQgYnlcbiAqID4gdGhlIHRlbXBsYXRlIHRvIHRoZSBzZXJ2aWNlIGlucHV0IG9mIHRoZSBga2VuZG8tdHJlZWxpc3QtY29sdW1ubWVudS1jaG9vc2VyYCBjb21wb25lbnQuXG4gKlxuICogeyUgbWV0YSBoZWlnaHQ6NTAwICV9XG4gKiB7JSBlbWJlZF9maWxlIGNvbHVtbi1tZW51L3RlbXBsYXRlLWNob29zZXIvYXBwLmNvbXBvbmVudC50cyBwcmV2aWV3ICV9XG4gKiB7JSBlbWJlZF9maWxlIGNvbHVtbi1tZW51L2FwcC5tb2R1bGUudHMgJX1cbiAqIHslIGVtYmVkX2ZpbGUgY29sdW1uLW1lbnUvbWFpbi50cyAlfVxuICogeyUgZW1iZWRfZmlsZSBzaGFyZWQvZW1wbG95ZWVzLnRzICV9XG4gKiB7JSBlbmRtZXRhICV9XG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENvbHVtbk1lbnVDaG9vc2VyQ29tcG9uZW50IGV4dGVuZHMgQ29sdW1uTWVudUl0ZW1CYXNlIHtcbiAgICBsb2NhbGl6YXRpb246IExvY2FsaXphdGlvblNlcnZpY2U7XG4gICAgcHJpdmF0ZSBjb2x1bW5JbmZvU2VydmljZTtcbiAgICBwcml2YXRlIGNoYW5nZURldGVjdG9yO1xuICAgIC8qKlxuICAgICAqIEZpcmVzIHdoZW4gdGhlIGNvbnRlbnQgaXMgZXhwYW5kZWQuXG4gICAgICovXG4gICAgZXhwYW5kOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICAvKipcbiAgICAgKiBGaXJlcyB3aGVuIHRoZSBjb250ZW50IGlzIGNvbGxhcHNlZC5cbiAgICAgKi9cbiAgICBjb2xsYXBzZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgLyoqXG4gICAgICogU3BlY2lmaWVzIGlmIHRoZSBjb250ZW50IGlzIGV4cGFuZGVkLlxuICAgICAqL1xuICAgIGV4cGFuZGVkOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBhY3Rpb25zQ2xhc3M6IHN0cmluZztcbiAgICByZWFkb25seSBjb2x1bW5zOiBhbnk7XG4gICAgY29uc3RydWN0b3IobG9jYWxpemF0aW9uOiBMb2NhbGl6YXRpb25TZXJ2aWNlLCBjb2x1bW5JbmZvU2VydmljZTogQ29sdW1uSW5mb1NlcnZpY2UsIGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG9uQXBwbHkoY2hhbmdlZDogYW55W10pOiB2b2lkO1xufVxuIl19