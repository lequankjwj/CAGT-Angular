/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { TemplateRef, OnChanges, OnDestroy } from '@angular/core';
import { LocalizationService } from "@progress/kendo-angular-l10n";
import { SinglePopupService } from '../common/single-popup.service';
import { ColumnMenuService } from './column-menu.service';
import { ColumnMenuSettings } from './column-menu-settings.interface';
/**
 * Represents the [column menu]({% slug columnmenu_treelist %}) component.
 */
import * as ɵngcc0 from '@angular/core';
export declare class ColumnMenuComponent implements OnChanges, OnDestroy {
    protected popupService: SinglePopupService;
    localization: LocalizationService;
    service: ColumnMenuService;
    /**
     * @hidden
     */
    standalone: boolean;
    /**
     * The TreeList column instance to control with the menu.
     */
    column: any;
    /**
     * The settings for the Column Menu.
     */
    settings: ColumnMenuSettings;
    /**
     * The descriptors by which the data will be sorted.
     * Typically bound to the same value as [TreeListComponent.sort]({% slug api_treelist_treelistcomponent %}#toc-sort).
     */
    sort: any;
    /**
     * The descriptor by which the data will be filtered.
     * Typically bound to the same value as [TreeListComponent.filter]({% slug api_treelist_treelistcomponent %}#toc-filter).
     */
    filter: any;
    /**
     * @hidden
     */
    sortable: any;
    /**
     * @hidden
     */
    columnMenuTemplate: TemplateRef<any>;
    /**
     * @hidden
     */
    expandedFilter: boolean;
    /**
     * @hidden
     */
    expandedColumns: boolean;
    private popupRef;
    private closeSubscription;
    constructor(popupService: SinglePopupService, localization: LocalizationService, service: ColumnMenuService);
    /**
     * @hidden
     */
    readonly isActive: boolean;
    /**
     * @hidden
     */
    readonly hasFilter: boolean;
    /**
     * @hidden
     */
    readonly hasSort: boolean;
    /**
     * @hidden
     */
    readonly hasColumnChooser: boolean;
    /**
     * @hidden
     */
    readonly hasLock: boolean;
    ngOnChanges(): void;
    ngOnDestroy(): void;
    /**
     * @hidden
     */
    toggle(e: any, anchor: any, template: any): void;
    /**
     * @hidden
     */
    close(): void;
    /**
     * @hidden
     */
    onColumnsExpand(): void;
    /**
     * @hidden
     */
    onFilterExpand(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ColumnMenuComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ColumnMenuComponent, "kendo-treelist-column-menu", never, { "standalone": "standalone"; "settings": "settings"; "sortable": "sortable"; "column": "column"; "sort": "sort"; "filter": "filter"; "columnMenuTemplate": "columnMenuTemplate"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLW1lbnUuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImNvbHVtbi1tZW51LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IFRlbXBsYXRlUmVmLCBPbkNoYW5nZXMsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTG9jYWxpemF0aW9uU2VydmljZSB9IGZyb20gXCJAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1sMTBuXCI7XG5pbXBvcnQgeyBTaW5nbGVQb3B1cFNlcnZpY2UgfSBmcm9tICcuLi9jb21tb24vc2luZ2xlLXBvcHVwLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29sdW1uTWVudVNlcnZpY2UgfSBmcm9tICcuL2NvbHVtbi1tZW51LnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29sdW1uTWVudVNldHRpbmdzIH0gZnJvbSAnLi9jb2x1bW4tbWVudS1zZXR0aW5ncy5pbnRlcmZhY2UnO1xuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBbY29sdW1uIG1lbnVdKHslIHNsdWcgY29sdW1ubWVudV90cmVlbGlzdCAlfSkgY29tcG9uZW50LlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDb2x1bW5NZW51Q29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xuICAgIHByb3RlY3RlZCBwb3B1cFNlcnZpY2U6IFNpbmdsZVBvcHVwU2VydmljZTtcbiAgICBsb2NhbGl6YXRpb246IExvY2FsaXphdGlvblNlcnZpY2U7XG4gICAgc2VydmljZTogQ29sdW1uTWVudVNlcnZpY2U7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHN0YW5kYWxvbmU6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogVGhlIFRyZWVMaXN0IGNvbHVtbiBpbnN0YW5jZSB0byBjb250cm9sIHdpdGggdGhlIG1lbnUuXG4gICAgICovXG4gICAgY29sdW1uOiBhbnk7XG4gICAgLyoqXG4gICAgICogVGhlIHNldHRpbmdzIGZvciB0aGUgQ29sdW1uIE1lbnUuXG4gICAgICovXG4gICAgc2V0dGluZ3M6IENvbHVtbk1lbnVTZXR0aW5ncztcbiAgICAvKipcbiAgICAgKiBUaGUgZGVzY3JpcHRvcnMgYnkgd2hpY2ggdGhlIGRhdGEgd2lsbCBiZSBzb3J0ZWQuXG4gICAgICogVHlwaWNhbGx5IGJvdW5kIHRvIHRoZSBzYW1lIHZhbHVlIGFzIFtUcmVlTGlzdENvbXBvbmVudC5zb3J0XSh7JSBzbHVnIGFwaV90cmVlbGlzdF90cmVlbGlzdGNvbXBvbmVudCAlfSN0b2Mtc29ydCkuXG4gICAgICovXG4gICAgc29ydDogYW55O1xuICAgIC8qKlxuICAgICAqIFRoZSBkZXNjcmlwdG9yIGJ5IHdoaWNoIHRoZSBkYXRhIHdpbGwgYmUgZmlsdGVyZWQuXG4gICAgICogVHlwaWNhbGx5IGJvdW5kIHRvIHRoZSBzYW1lIHZhbHVlIGFzIFtUcmVlTGlzdENvbXBvbmVudC5maWx0ZXJdKHslIHNsdWcgYXBpX3RyZWVsaXN0X3RyZWVsaXN0Y29tcG9uZW50ICV9I3RvYy1maWx0ZXIpLlxuICAgICAqL1xuICAgIGZpbHRlcjogYW55O1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBzb3J0YWJsZTogYW55O1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBjb2x1bW5NZW51VGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGV4cGFuZGVkRmlsdGVyOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBleHBhbmRlZENvbHVtbnM6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBwb3B1cFJlZjtcbiAgICBwcml2YXRlIGNsb3NlU3Vic2NyaXB0aW9uO1xuICAgIGNvbnN0cnVjdG9yKHBvcHVwU2VydmljZTogU2luZ2xlUG9wdXBTZXJ2aWNlLCBsb2NhbGl6YXRpb246IExvY2FsaXphdGlvblNlcnZpY2UsIHNlcnZpY2U6IENvbHVtbk1lbnVTZXJ2aWNlKTtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgcmVhZG9ubHkgaXNBY3RpdmU6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHJlYWRvbmx5IGhhc0ZpbHRlcjogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgcmVhZG9ubHkgaGFzU29ydDogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgcmVhZG9ubHkgaGFzQ29sdW1uQ2hvb3NlcjogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgcmVhZG9ubHkgaGFzTG9jazogYm9vbGVhbjtcbiAgICBuZ09uQ2hhbmdlcygpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHRvZ2dsZShlOiBhbnksIGFuY2hvcjogYW55LCB0ZW1wbGF0ZTogYW55KTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgY2xvc2UoKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgb25Db2x1bW5zRXhwYW5kKCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG9uRmlsdGVyRXhwYW5kKCk6IHZvaWQ7XG59XG4iXX0=