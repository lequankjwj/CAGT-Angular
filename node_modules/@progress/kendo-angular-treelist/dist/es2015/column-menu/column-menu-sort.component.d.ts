/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { LocalizationService } from "@progress/kendo-angular-l10n";
import { SortService } from '../common/sort.service';
import { ColumnMenuItemBase } from './column-menu-item-base';
/**
 * Represents a column-menu item for sorting TreeList columns that can be placed inside a
 * [`ColumnMenuTemplate`]({% slug api_treelist_columnmenutemplatedirective %}) directive.
 * Allows the user to sort the column.
 *
 * > You have to set the [ColumnMenuService]({% slug api_treelist_columnmenuservice %}) that is passed by
 * > the template to the service input of the `kendo-treelist-columnmenu-sort` component.
 *
 * {% meta height:500 %}
 * {% embed_file column-menu/template-sort/app.component.ts preview %}
 * {% embed_file column-menu/app.module.ts %}
 * {% embed_file column-menu/main.ts %}
 * {% embed_file shared/employees.ts %}
 * {% endmeta %}
 */
import * as ɵngcc0 from '@angular/core';
export declare class ColumnMenuSortComponent extends ColumnMenuItemBase {
    localization: LocalizationService;
    protected sortService: SortService;
    constructor(localization: LocalizationService, sortService: SortService);
    readonly sortedAsc: boolean;
    readonly sortedDesc: boolean;
    /**
     * @hidden
     */
    toggleSort(dir: string): void;
    private readonly descriptor;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ColumnMenuSortComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ColumnMenuSortComponent, "kendo-treelist-columnmenu-sort", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLW1lbnUtc29ydC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiY29sdW1uLW1lbnUtc29ydC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IExvY2FsaXphdGlvblNlcnZpY2UgfSBmcm9tIFwiQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItbDEwblwiO1xuaW1wb3J0IHsgU29ydFNlcnZpY2UgfSBmcm9tICcuLi9jb21tb24vc29ydC5zZXJ2aWNlJztcbmltcG9ydCB7IENvbHVtbk1lbnVJdGVtQmFzZSB9IGZyb20gJy4vY29sdW1uLW1lbnUtaXRlbS1iYXNlJztcbi8qKlxuICogUmVwcmVzZW50cyBhIGNvbHVtbi1tZW51IGl0ZW0gZm9yIHNvcnRpbmcgVHJlZUxpc3QgY29sdW1ucyB0aGF0IGNhbiBiZSBwbGFjZWQgaW5zaWRlIGFcbiAqIFtgQ29sdW1uTWVudVRlbXBsYXRlYF0oeyUgc2x1ZyBhcGlfdHJlZWxpc3RfY29sdW1ubWVudXRlbXBsYXRlZGlyZWN0aXZlICV9KSBkaXJlY3RpdmUuXG4gKiBBbGxvd3MgdGhlIHVzZXIgdG8gc29ydCB0aGUgY29sdW1uLlxuICpcbiAqID4gWW91IGhhdmUgdG8gc2V0IHRoZSBbQ29sdW1uTWVudVNlcnZpY2VdKHslIHNsdWcgYXBpX3RyZWVsaXN0X2NvbHVtbm1lbnVzZXJ2aWNlICV9KSB0aGF0IGlzIHBhc3NlZCBieVxuICogPiB0aGUgdGVtcGxhdGUgdG8gdGhlIHNlcnZpY2UgaW5wdXQgb2YgdGhlIGBrZW5kby10cmVlbGlzdC1jb2x1bW5tZW51LXNvcnRgIGNvbXBvbmVudC5cbiAqXG4gKiB7JSBtZXRhIGhlaWdodDo1MDAgJX1cbiAqIHslIGVtYmVkX2ZpbGUgY29sdW1uLW1lbnUvdGVtcGxhdGUtc29ydC9hcHAuY29tcG9uZW50LnRzIHByZXZpZXcgJX1cbiAqIHslIGVtYmVkX2ZpbGUgY29sdW1uLW1lbnUvYXBwLm1vZHVsZS50cyAlfVxuICogeyUgZW1iZWRfZmlsZSBjb2x1bW4tbWVudS9tYWluLnRzICV9XG4gKiB7JSBlbWJlZF9maWxlIHNoYXJlZC9lbXBsb3llZXMudHMgJX1cbiAqIHslIGVuZG1ldGEgJX1cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ29sdW1uTWVudVNvcnRDb21wb25lbnQgZXh0ZW5kcyBDb2x1bW5NZW51SXRlbUJhc2Uge1xuICAgIGxvY2FsaXphdGlvbjogTG9jYWxpemF0aW9uU2VydmljZTtcbiAgICBwcm90ZWN0ZWQgc29ydFNlcnZpY2U6IFNvcnRTZXJ2aWNlO1xuICAgIGNvbnN0cnVjdG9yKGxvY2FsaXphdGlvbjogTG9jYWxpemF0aW9uU2VydmljZSwgc29ydFNlcnZpY2U6IFNvcnRTZXJ2aWNlKTtcbiAgICByZWFkb25seSBzb3J0ZWRBc2M6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgc29ydGVkRGVzYzogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgdG9nZ2xlU29ydChkaXI6IHN0cmluZyk6IHZvaWQ7XG4gICAgcHJpdmF0ZSByZWFkb25seSBkZXNjcmlwdG9yO1xufVxuIl19