/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { TemplateRef } from '@angular/core';
/**
 * Represents the pager template which helps to customize the pager appearance in the TreeList. To define a pager
 * template, nest an `<ng-template>` tag with the `kendoTreeListPagerTemplate` directive inside `<kendo-treelist>`.
 *
 * The template context provides the following fields:
 * * `currentPage`&mdash;The index of the displayed page.
 * * `pageSize`&mdash;The value of the current `pageSize`.
 * * `skip`&mdash;The current skip value.
 * * `total`&mdash;The total number of records.
 * * `totalPages`&mdash;The total number of available pages.
 *
 * {% meta height:470 %}
 * {% embed_file configuration/pager-template-all/app.component.ts preview %}
 * {% embed_file shared/app.module.ts %}
 * {% embed_file shared/main.ts %}
 * {% embed_file shared/filesystem.ts %}
 * {% endmeta %}
 */
import * as ɵngcc0 from '@angular/core';
export declare class PagerTemplateDirective {
    templateRef: TemplateRef<any>;
    constructor(templateRef: TemplateRef<any>);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PagerTemplateDirective, [{ optional: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PagerTemplateDirective, "[kendoTreeListPagerTemplate]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZXItdGVtcGxhdGUuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbInBhZ2VyLXRlbXBsYXRlLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIHBhZ2VyIHRlbXBsYXRlIHdoaWNoIGhlbHBzIHRvIGN1c3RvbWl6ZSB0aGUgcGFnZXIgYXBwZWFyYW5jZSBpbiB0aGUgVHJlZUxpc3QuIFRvIGRlZmluZSBhIHBhZ2VyXG4gKiB0ZW1wbGF0ZSwgbmVzdCBhbiBgPG5nLXRlbXBsYXRlPmAgdGFnIHdpdGggdGhlIGBrZW5kb1RyZWVMaXN0UGFnZXJUZW1wbGF0ZWAgZGlyZWN0aXZlIGluc2lkZSBgPGtlbmRvLXRyZWVsaXN0PmAuXG4gKlxuICogVGhlIHRlbXBsYXRlIGNvbnRleHQgcHJvdmlkZXMgdGhlIGZvbGxvd2luZyBmaWVsZHM6XG4gKiAqIGBjdXJyZW50UGFnZWAmbWRhc2g7VGhlIGluZGV4IG9mIHRoZSBkaXNwbGF5ZWQgcGFnZS5cbiAqICogYHBhZ2VTaXplYCZtZGFzaDtUaGUgdmFsdWUgb2YgdGhlIGN1cnJlbnQgYHBhZ2VTaXplYC5cbiAqICogYHNraXBgJm1kYXNoO1RoZSBjdXJyZW50IHNraXAgdmFsdWUuXG4gKiAqIGB0b3RhbGAmbWRhc2g7VGhlIHRvdGFsIG51bWJlciBvZiByZWNvcmRzLlxuICogKiBgdG90YWxQYWdlc2AmbWRhc2g7VGhlIHRvdGFsIG51bWJlciBvZiBhdmFpbGFibGUgcGFnZXMuXG4gKlxuICogeyUgbWV0YSBoZWlnaHQ6NDcwICV9XG4gKiB7JSBlbWJlZF9maWxlIGNvbmZpZ3VyYXRpb24vcGFnZXItdGVtcGxhdGUtYWxsL2FwcC5jb21wb25lbnQudHMgcHJldmlldyAlfVxuICogeyUgZW1iZWRfZmlsZSBzaGFyZWQvYXBwLm1vZHVsZS50cyAlfVxuICogeyUgZW1iZWRfZmlsZSBzaGFyZWQvbWFpbi50cyAlfVxuICogeyUgZW1iZWRfZmlsZSBzaGFyZWQvZmlsZXN5c3RlbS50cyAlfVxuICogeyUgZW5kbWV0YSAlfVxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQYWdlclRlbXBsYXRlRGlyZWN0aXZlIHtcbiAgICB0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBjb25zdHJ1Y3Rvcih0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55Pik7XG59XG4iXX0=