/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { NumericTextBoxComponent } from '@progress/kendo-angular-inputs';
import { ChangeDetectorRef, NgZone } from '@angular/core';
import { PagerElementComponent } from './pager-element.component';
import { LocalizationService } from "@progress/kendo-angular-l10n";
import { PagerContextService, PagerContextChanges } from "./pager-context.service";
/**
 * Displays an input element which allows the typing and rendering of page numbers.
 */
import * as ɵngcc0 from '@angular/core';
export declare class PagerInputComponent extends PagerElementComponent {
    protected pagerContext: PagerContextService;
    private zone;
    numericInput: NumericTextBoxComponent;
    constructor(localization: LocalizationService, pagerContext: PagerContextService, zone: NgZone, cd: ChangeDetectorRef);
    /**
     * @hidden
     *
     * @param {string} value
     *
     * @memberOf PagerInputComponent
     */
    handleKeyDown: (event: KeyboardEvent) => void;
    /**
     * @hidden
     *
     * @param {string} value
     *
     * @memberOf PagerInputComponent
     */
    handleBlur: () => void;
    /**
     * @hidden
     */
    readonly current: number;
    readonly hasPages: boolean;
    protected onChanges({ total, skip, pageSize }: PagerContextChanges): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PagerInputComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PagerInputComponent, "kendo-treelist-pager-input", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZXItaW5wdXQuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBhZ2VyLWlucHV0LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgTnVtZXJpY1RleHRCb3hDb21wb25lbnQgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1pbnB1dHMnO1xuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIE5nWm9uZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUGFnZXJFbGVtZW50Q29tcG9uZW50IH0gZnJvbSAnLi9wYWdlci1lbGVtZW50LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBMb2NhbGl6YXRpb25TZXJ2aWNlIH0gZnJvbSBcIkBwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWwxMG5cIjtcbmltcG9ydCB7IFBhZ2VyQ29udGV4dFNlcnZpY2UsIFBhZ2VyQ29udGV4dENoYW5nZXMgfSBmcm9tIFwiLi9wYWdlci1jb250ZXh0LnNlcnZpY2VcIjtcbi8qKlxuICogRGlzcGxheXMgYW4gaW5wdXQgZWxlbWVudCB3aGljaCBhbGxvd3MgdGhlIHR5cGluZyBhbmQgcmVuZGVyaW5nIG9mIHBhZ2UgbnVtYmVycy5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUGFnZXJJbnB1dENvbXBvbmVudCBleHRlbmRzIFBhZ2VyRWxlbWVudENvbXBvbmVudCB7XG4gICAgcHJvdGVjdGVkIHBhZ2VyQ29udGV4dDogUGFnZXJDb250ZXh0U2VydmljZTtcbiAgICBwcml2YXRlIHpvbmU7XG4gICAgbnVtZXJpY0lucHV0OiBOdW1lcmljVGV4dEJveENvbXBvbmVudDtcbiAgICBjb25zdHJ1Y3Rvcihsb2NhbGl6YXRpb246IExvY2FsaXphdGlvblNlcnZpY2UsIHBhZ2VyQ29udGV4dDogUGFnZXJDb250ZXh0U2VydmljZSwgem9uZTogTmdab25lLCBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxuICAgICAqXG4gICAgICogQG1lbWJlck9mIFBhZ2VySW5wdXRDb21wb25lbnRcbiAgICAgKi9cbiAgICBoYW5kbGVLZXlEb3duOiAoZXZlbnQ6IEtleWJvYXJkRXZlbnQpID0+IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXG4gICAgICpcbiAgICAgKiBAbWVtYmVyT2YgUGFnZXJJbnB1dENvbXBvbmVudFxuICAgICAqL1xuICAgIGhhbmRsZUJsdXI6ICgpID0+IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHJlYWRvbmx5IGN1cnJlbnQ6IG51bWJlcjtcbiAgICByZWFkb25seSBoYXNQYWdlczogYm9vbGVhbjtcbiAgICBwcm90ZWN0ZWQgb25DaGFuZ2VzKHsgdG90YWwsIHNraXAsIHBhZ2VTaXplIH06IFBhZ2VyQ29udGV4dENoYW5nZXMpOiB2b2lkO1xufVxuIl19