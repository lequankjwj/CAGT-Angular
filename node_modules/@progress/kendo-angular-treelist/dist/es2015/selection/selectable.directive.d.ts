/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { OnDestroy, EventEmitter } from '@angular/core';
import { TreeListComponent } from '../treelist.component';
/**
 * The `kendoTreeListSelectable` state items.
 */
import * as ɵngcc0 from '@angular/core';
export interface SelectionItem {
    /**
     * The key that identifies the selected item.
     */
    itemKey: any;
    /**
     * The key that identifies the selected item column. Available in `cell` selection mode.
     */
    columnKey?: any;
}
/**
 * A directive which controls the selection state
 */
export declare class SelectableDirective implements OnDestroy {
    private treelist;
    /**
     * @hidden
     */
    selectable: any;
    /**
     * Specifies the selected items.
     */
    selectedItems: SelectionItem[];
    /**
     * Fires when the selected items are changed.
     */
    selectedItemsChange: EventEmitter<SelectionItem[]>;
    /**
     * The field name or a function that specify the dataItems key.
     */
    itemKey: string | ((dataItem: any) => any);
    /**
     * The field name or a function that specify the columns key.
     */
    columnKey: string | ((column: any, columnIndex: number) => any);
    protected readonly keyGetter: any;
    protected readonly columnKeyGetter: any;
    protected subscriptions: any;
    protected state: any;
    protected _settings: any;
    protected lastChange: any[];
    protected _columnKeyGetter: any;
    protected _keyGetter: any;
    constructor(treelist: TreeListComponent);
    ngOnDestroy(): void;
    /**
     * @hidden
     */
    protected cellSelected(dataItem: any, column: any, columnIndex: number): boolean;
    /**
     * @hidden
     */
    protected rowSelected(dataItem: any): boolean;
    protected selectionChange({ action, items }: any): void;
    protected emitSelectedItemsChange(): void;
    private subscribeSelection;
    private unsubscribeSelection;
    private updateColumnIndices;
    private readonly leafColumns;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SelectableDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<SelectableDirective, "[kendoTreeListSelectable]", ["kendoTreeListSelectable"], { "selectable": "selectable"; "selectedItems": "selectedItems"; "itemKey": "itemKey"; "columnKey": "columnKey"; }, { "selectedItemsChange": "selectedItemsChange"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0YWJsZS5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsic2VsZWN0YWJsZS5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBPbkRlc3Ryb3ksIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVHJlZUxpc3RDb21wb25lbnQgfSBmcm9tICcuLi90cmVlbGlzdC5jb21wb25lbnQnO1xuLyoqXG4gKiBUaGUgYGtlbmRvVHJlZUxpc3RTZWxlY3RhYmxlYCBzdGF0ZSBpdGVtcy5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBTZWxlY3Rpb25JdGVtIHtcbiAgICAvKipcbiAgICAgKiBUaGUga2V5IHRoYXQgaWRlbnRpZmllcyB0aGUgc2VsZWN0ZWQgaXRlbS5cbiAgICAgKi9cbiAgICBpdGVtS2V5OiBhbnk7XG4gICAgLyoqXG4gICAgICogVGhlIGtleSB0aGF0IGlkZW50aWZpZXMgdGhlIHNlbGVjdGVkIGl0ZW0gY29sdW1uLiBBdmFpbGFibGUgaW4gYGNlbGxgIHNlbGVjdGlvbiBtb2RlLlxuICAgICAqL1xuICAgIGNvbHVtbktleT86IGFueTtcbn1cbi8qKlxuICogQSBkaXJlY3RpdmUgd2hpY2ggY29udHJvbHMgdGhlIHNlbGVjdGlvbiBzdGF0ZVxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTZWxlY3RhYmxlRGlyZWN0aXZlIGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIHRyZWVsaXN0O1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBzZWxlY3RhYmxlOiBhbnk7XG4gICAgLyoqXG4gICAgICogU3BlY2lmaWVzIHRoZSBzZWxlY3RlZCBpdGVtcy5cbiAgICAgKi9cbiAgICBzZWxlY3RlZEl0ZW1zOiBTZWxlY3Rpb25JdGVtW107XG4gICAgLyoqXG4gICAgICogRmlyZXMgd2hlbiB0aGUgc2VsZWN0ZWQgaXRlbXMgYXJlIGNoYW5nZWQuXG4gICAgICovXG4gICAgc2VsZWN0ZWRJdGVtc0NoYW5nZTogRXZlbnRFbWl0dGVyPFNlbGVjdGlvbkl0ZW1bXT47XG4gICAgLyoqXG4gICAgICogVGhlIGZpZWxkIG5hbWUgb3IgYSBmdW5jdGlvbiB0aGF0IHNwZWNpZnkgdGhlIGRhdGFJdGVtcyBrZXkuXG4gICAgICovXG4gICAgaXRlbUtleTogc3RyaW5nIHwgKChkYXRhSXRlbTogYW55KSA9PiBhbnkpO1xuICAgIC8qKlxuICAgICAqIFRoZSBmaWVsZCBuYW1lIG9yIGEgZnVuY3Rpb24gdGhhdCBzcGVjaWZ5IHRoZSBjb2x1bW5zIGtleS5cbiAgICAgKi9cbiAgICBjb2x1bW5LZXk6IHN0cmluZyB8ICgoY29sdW1uOiBhbnksIGNvbHVtbkluZGV4OiBudW1iZXIpID0+IGFueSk7XG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IGtleUdldHRlcjogYW55O1xuICAgIHByb3RlY3RlZCByZWFkb25seSBjb2x1bW5LZXlHZXR0ZXI6IGFueTtcbiAgICBwcm90ZWN0ZWQgc3Vic2NyaXB0aW9uczogYW55O1xuICAgIHByb3RlY3RlZCBzdGF0ZTogYW55O1xuICAgIHByb3RlY3RlZCBfc2V0dGluZ3M6IGFueTtcbiAgICBwcm90ZWN0ZWQgbGFzdENoYW5nZTogYW55W107XG4gICAgcHJvdGVjdGVkIF9jb2x1bW5LZXlHZXR0ZXI6IGFueTtcbiAgICBwcm90ZWN0ZWQgX2tleUdldHRlcjogYW55O1xuICAgIGNvbnN0cnVjdG9yKHRyZWVsaXN0OiBUcmVlTGlzdENvbXBvbmVudCk7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgcHJvdGVjdGVkIGNlbGxTZWxlY3RlZChkYXRhSXRlbTogYW55LCBjb2x1bW46IGFueSwgY29sdW1uSW5kZXg6IG51bWJlcik6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHByb3RlY3RlZCByb3dTZWxlY3RlZChkYXRhSXRlbTogYW55KTogYm9vbGVhbjtcbiAgICBwcm90ZWN0ZWQgc2VsZWN0aW9uQ2hhbmdlKHsgYWN0aW9uLCBpdGVtcyB9OiBhbnkpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBlbWl0U2VsZWN0ZWRJdGVtc0NoYW5nZSgpOiB2b2lkO1xuICAgIHByaXZhdGUgc3Vic2NyaWJlU2VsZWN0aW9uO1xuICAgIHByaXZhdGUgdW5zdWJzY3JpYmVTZWxlY3Rpb247XG4gICAgcHJpdmF0ZSB1cGRhdGVDb2x1bW5JbmRpY2VzO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgbGVhZkNvbHVtbnM7XG59XG4iXX0=