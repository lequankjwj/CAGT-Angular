/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Subject } from "rxjs";
import { SelectionChangeEvent } from './selection-change-event';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare const defaultSelected: (_item: any) => boolean;
/**
 * @hidden
 */
export declare class SelectionService {
    changes: Subject<SelectionChangeEvent>;
    settings: any;
    readonly enableMarquee: boolean;
    readonly enableMultiple: boolean;
    readonly rowSelection: boolean;
    isSelected: any;
    isRowSelected: any;
    isCellSelected: any;
    enabled: boolean;
    private view;
    private columnsContainer;
    private _settings;
    private selectionOrigin;
    private tables;
    private subscriptions;
    init(treelist: any): void;
    ngOnDestroy(): void;
    registerTable(table: any): void;
    unregisterTable(table: any): void;
    click(args: any, toggle?: boolean): void;
    checkboxClick(args: any): void;
    toggleAll(select: boolean): void;
    selectRange(firstPoint: any, secondPoint: any): void;
    rangeItems(firstPoint: any, secondPoint: any): any[];
    updateSelectedState(): void;
    targetArgs(target: any, skipFocusable?: boolean): any;
    protected rowSelected(dataItem: any): boolean;
    protected cellSelected(dataItem: any, column: any, columnIndex: any): boolean;
    protected readonly leafColumns: any[];
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SelectionService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<SelectionService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0aW9uLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsic2VsZWN0aW9uLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gXCJyeGpzXCI7XG5pbXBvcnQgeyBTZWxlY3Rpb25DaGFuZ2VFdmVudCB9IGZyb20gJy4vc2VsZWN0aW9uLWNoYW5nZS1ldmVudCc7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgZGVmYXVsdFNlbGVjdGVkOiAoX2l0ZW06IGFueSkgPT4gYm9vbGVhbjtcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTZWxlY3Rpb25TZXJ2aWNlIHtcbiAgICBjaGFuZ2VzOiBTdWJqZWN0PFNlbGVjdGlvbkNoYW5nZUV2ZW50PjtcbiAgICBzZXR0aW5nczogYW55O1xuICAgIHJlYWRvbmx5IGVuYWJsZU1hcnF1ZWU6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgZW5hYmxlTXVsdGlwbGU6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgcm93U2VsZWN0aW9uOiBib29sZWFuO1xuICAgIGlzU2VsZWN0ZWQ6IGFueTtcbiAgICBpc1Jvd1NlbGVjdGVkOiBhbnk7XG4gICAgaXNDZWxsU2VsZWN0ZWQ6IGFueTtcbiAgICBlbmFibGVkOiBib29sZWFuO1xuICAgIHByaXZhdGUgdmlldztcbiAgICBwcml2YXRlIGNvbHVtbnNDb250YWluZXI7XG4gICAgcHJpdmF0ZSBfc2V0dGluZ3M7XG4gICAgcHJpdmF0ZSBzZWxlY3Rpb25PcmlnaW47XG4gICAgcHJpdmF0ZSB0YWJsZXM7XG4gICAgcHJpdmF0ZSBzdWJzY3JpcHRpb25zO1xuICAgIGluaXQodHJlZWxpc3Q6IGFueSk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICByZWdpc3RlclRhYmxlKHRhYmxlOiBhbnkpOiB2b2lkO1xuICAgIHVucmVnaXN0ZXJUYWJsZSh0YWJsZTogYW55KTogdm9pZDtcbiAgICBjbGljayhhcmdzOiBhbnksIHRvZ2dsZT86IGJvb2xlYW4pOiB2b2lkO1xuICAgIGNoZWNrYm94Q2xpY2soYXJnczogYW55KTogdm9pZDtcbiAgICB0b2dnbGVBbGwoc2VsZWN0OiBib29sZWFuKTogdm9pZDtcbiAgICBzZWxlY3RSYW5nZShmaXJzdFBvaW50OiBhbnksIHNlY29uZFBvaW50OiBhbnkpOiB2b2lkO1xuICAgIHJhbmdlSXRlbXMoZmlyc3RQb2ludDogYW55LCBzZWNvbmRQb2ludDogYW55KTogYW55W107XG4gICAgdXBkYXRlU2VsZWN0ZWRTdGF0ZSgpOiB2b2lkO1xuICAgIHRhcmdldEFyZ3ModGFyZ2V0OiBhbnksIHNraXBGb2N1c2FibGU/OiBib29sZWFuKTogYW55O1xuICAgIHByb3RlY3RlZCByb3dTZWxlY3RlZChkYXRhSXRlbTogYW55KTogYm9vbGVhbjtcbiAgICBwcm90ZWN0ZWQgY2VsbFNlbGVjdGVkKGRhdGFJdGVtOiBhbnksIGNvbHVtbjogYW55LCBjb2x1bW5JbmRleDogYW55KTogYm9vbGVhbjtcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgbGVhZkNvbHVtbnM6IGFueVtdO1xufVxuIl19