/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { AfterViewInit, ElementRef, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { FocusGroup } from './focus-group';
import { FocusableElement } from './focusable-element.interface';
/**
 * A directive that controls the way focusable cell elements receive
 * [focus in a navigable TreeList]({% slug keyboard_navigation_treelist %}).
 *
 * The directive takes as input the `cellContext` from the cell template.
 *
 * ```ts-no-run
 * <kendo-treelist-column>
 *   <ng-template kendoTreeListCellTemplate let-cellContext="cellContext">
 *     <input type="button" class="k-button" [kendoTreeListFocusable]="cellContext" value="Focus me!" />
 *   </ng-template>
 * </kendo-treelist-column>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class FocusableDirective implements AfterViewInit, FocusableElement, OnInit, OnDestroy {
    private hostElement;
    private renderer;
    private group;
    /**
     * The cell context provided by the template.
     */
    cellContext: any;
    /**
     * @hidden
     */
    addCellContext: any;
    /**
     * @hidden
     */
    editCellContext: any;
    /**
     * @hidden
     */
    removeCellContext: any;
    /**
     * @hidden
     */
    saveCellContext: any;
    /**
     * @hidden
     */
    cancelCellContext: any;
    private active;
    private element;
    constructor(hostElement: ElementRef, renderer: Renderer2, group: FocusGroup);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    /**
     * @hidden
     */
    toggle(active: boolean): void;
    /**
     * @hidden
     */
    canFocus(): boolean;
    /**
     * @hidden
     */
    isNavigable(): boolean;
    /**
     * @hidden
     */
    focus(): void;
    /**
     * @hidden
     */
    hasFocus(): boolean;
    /**
     * @hidden
     */
    registerElement(element: FocusableElement): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FocusableDirective, [null, null, { optional: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<FocusableDirective, "[kendoTreeListFocusable],        [kendoTreeListAddCommand],        [kendoTreeListEditCommand],        [kendoTreeListRemoveCommand],        [kendoTreeListSaveCommand],        [kendoTreeListCancelCommand]    ", never, { "addCellContext": "kendoTreeListAddCommand"; "cellContext": "kendoTreeListFocusable"; "editCellContext": "kendoTreeListEditCommand"; "removeCellContext": "kendoTreeListRemoveCommand"; "saveCellContext": "kendoTreeListSaveCommand"; "cancelCellContext": "kendoTreeListCancelCommand"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9jdXNhYmxlLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJmb2N1c2FibGUuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IEFmdGVyVmlld0luaXQsIEVsZW1lbnRSZWYsIE9uRGVzdHJveSwgT25Jbml0LCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvY3VzR3JvdXAgfSBmcm9tICcuL2ZvY3VzLWdyb3VwJztcbmltcG9ydCB7IEZvY3VzYWJsZUVsZW1lbnQgfSBmcm9tICcuL2ZvY3VzYWJsZS1lbGVtZW50LmludGVyZmFjZSc7XG4vKipcbiAqIEEgZGlyZWN0aXZlIHRoYXQgY29udHJvbHMgdGhlIHdheSBmb2N1c2FibGUgY2VsbCBlbGVtZW50cyByZWNlaXZlXG4gKiBbZm9jdXMgaW4gYSBuYXZpZ2FibGUgVHJlZUxpc3RdKHslIHNsdWcga2V5Ym9hcmRfbmF2aWdhdGlvbl90cmVlbGlzdCAlfSkuXG4gKlxuICogVGhlIGRpcmVjdGl2ZSB0YWtlcyBhcyBpbnB1dCB0aGUgYGNlbGxDb250ZXh0YCBmcm9tIHRoZSBjZWxsIHRlbXBsYXRlLlxuICpcbiAqIGBgYHRzLW5vLXJ1blxuICogPGtlbmRvLXRyZWVsaXN0LWNvbHVtbj5cbiAqICAgPG5nLXRlbXBsYXRlIGtlbmRvVHJlZUxpc3RDZWxsVGVtcGxhdGUgbGV0LWNlbGxDb250ZXh0PVwiY2VsbENvbnRleHRcIj5cbiAqICAgICA8aW5wdXQgdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwiay1idXR0b25cIiBba2VuZG9UcmVlTGlzdEZvY3VzYWJsZV09XCJjZWxsQ29udGV4dFwiIHZhbHVlPVwiRm9jdXMgbWUhXCIgLz5cbiAqICAgPC9uZy10ZW1wbGF0ZT5cbiAqIDwva2VuZG8tdHJlZWxpc3QtY29sdW1uPlxuICogYGBgXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEZvY3VzYWJsZURpcmVjdGl2ZSBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIEZvY3VzYWJsZUVsZW1lbnQsIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIGhvc3RFbGVtZW50O1xuICAgIHByaXZhdGUgcmVuZGVyZXI7XG4gICAgcHJpdmF0ZSBncm91cDtcbiAgICAvKipcbiAgICAgKiBUaGUgY2VsbCBjb250ZXh0IHByb3ZpZGVkIGJ5IHRoZSB0ZW1wbGF0ZS5cbiAgICAgKi9cbiAgICBjZWxsQ29udGV4dDogYW55O1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBhZGRDZWxsQ29udGV4dDogYW55O1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBlZGl0Q2VsbENvbnRleHQ6IGFueTtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgcmVtb3ZlQ2VsbENvbnRleHQ6IGFueTtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgc2F2ZUNlbGxDb250ZXh0OiBhbnk7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGNhbmNlbENlbGxDb250ZXh0OiBhbnk7XG4gICAgcHJpdmF0ZSBhY3RpdmU7XG4gICAgcHJpdmF0ZSBlbGVtZW50O1xuICAgIGNvbnN0cnVjdG9yKGhvc3RFbGVtZW50OiBFbGVtZW50UmVmLCByZW5kZXJlcjogUmVuZGVyZXIyLCBncm91cDogRm9jdXNHcm91cCk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICB0b2dnbGUoYWN0aXZlOiBib29sZWFuKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgY2FuRm9jdXMoKTogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgaXNOYXZpZ2FibGUoKTogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZm9jdXMoKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgaGFzRm9jdXMoKTogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgcmVnaXN0ZXJFbGVtZW50KGVsZW1lbnQ6IEZvY3VzYWJsZUVsZW1lbnQpOiB2b2lkO1xufVxuIl19