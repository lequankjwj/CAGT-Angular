/**-----------------------------------------------------------------------------------------
* Copyright Â© 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { AfterViewInit, ElementRef, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { FocusGroup } from './focus-group';
import { FocusableElement } from './focusable-element.interface';
/**
 * A directive that controls the way focusable cell elements receive
 * [focus in a navigable TreeList]({% slug keyboard_navigation_treelist %}).
 *
 * The directive takes as input the `cellContext` from the cell template.
 *
 * ```ts-no-run
 * <kendo-treelist-column>
 *   <ng-template kendoTreeListCellTemplate let-cellContext="cellContext">
 *     <input type="button" class="k-button" [kendoTreeListFocusable]="cellContext" value="Focus me!" />
 *   </ng-template>
 * </kendo-treelist-column>
 * ```
 */
export declare class FocusableDirective implements AfterViewInit, FocusableElement, OnInit, OnDestroy {
    private hostElement;
    private renderer;
    private group;
    /**
     * The cell context provided by the template.
     */
    cellContext: any;
    /**
     * @hidden
     */
    addCellContext: any;
    /**
     * @hidden
     */
    editCellContext: any;
    /**
     * @hidden
     */
    removeCellContext: any;
    /**
     * @hidden
     */
    saveCellContext: any;
    /**
     * @hidden
     */
    cancelCellContext: any;
    private active;
    private element;
    constructor(hostElement: ElementRef, renderer: Renderer2, group: FocusGroup);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    /**
     * @hidden
     */
    toggle(active: boolean): void;
    /**
     * @hidden
     */
    canFocus(): boolean;
    /**
     * @hidden
     */
    isNavigable(): boolean;
    /**
     * @hidden
     */
    focus(): void;
    /**
     * @hidden
     */
    hasFocus(): boolean;
    /**
     * @hidden
     */
    registerElement(element: FocusableElement): void;
}
