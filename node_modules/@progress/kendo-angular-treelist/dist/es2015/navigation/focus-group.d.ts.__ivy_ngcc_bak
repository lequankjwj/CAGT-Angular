/**-----------------------------------------------------------------------------------------
* Copyright Â© 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { FocusableElement } from "./focusable-element.interface";
import { FocusRoot } from './focus-root';
/**
 * Represents group of components that can be activated or focused.
 *
 * A focus group may contain focusable elements, such as rows, cells and input elements.
 *
 * Elements are added to the focus group by tagging them with the `kendoTreeListFocusable` directive.
 * See [Controlling the Focus]({% slug keyboard_navigation_treelist %}#toc-controlling-the-focus).
 *
 * @hidden
 */
export declare class FocusGroup {
    private root;
    private active;
    private children;
    private readonly focusableChildren;
    readonly isActive: boolean;
    /**
     * @hidden
     */
    constructor(root: FocusRoot);
    ngOnDestroy(): void;
    /**
     * @hidden
     */
    registerElement(element: FocusableElement): void;
    /**
     * @hidden
     */
    unregisterElement(element: FocusableElement): void;
    /**
     * Returns a boolean value which indicates if the group will receive focus when the cell is focused.
     * Evaluates to `true` when the focus group has a single focusable element such as a button or a checkbox.
     *
     * @returns A boolean value which indicates if the group will receive focus when the cell is focused.
     */
    isNavigable(): boolean;
    /**
     * Returns a boolean value which indicates if the focus group contains focusable component.
     *
     * @returns A boolean value which indicates if the focus group contains focusable component.
     */
    canFocus(): boolean;
    /**
     * Focuses the first focusable component, if any.
     */
    focus(): void;
    /**
     * @hidden
     */
    activate(): void;
    /**
     * @hidden
     */
    deactivate(): void;
    private hasFocus;
    private toggleState;
}
