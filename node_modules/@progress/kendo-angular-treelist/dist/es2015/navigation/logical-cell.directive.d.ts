/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { DoCheck, ElementRef, NgZone, Renderer2, SimpleChanges } from '@angular/core';
import { OnChanges, OnDestroy, OnInit } from '@angular/core';
import { FocusGroup } from './focus-group';
import { LogicalCell } from './logical-cell.interface';
import { NavigationService } from './navigation.service';
import { ColumnInfoService } from '../common/column-info.service';
import { IdService } from '../common/id.service';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class LogicalCellDirective implements LogicalCell, OnInit, OnChanges, OnDestroy, DoCheck {
    focusGroup: FocusGroup;
    private element;
    private columnInfoService;
    private idService;
    private navigationService;
    private renderer;
    private zone;
    logicalColIndex: number;
    logicalRowIndex: number;
    logicalSlaveCell: boolean;
    column: any;
    colIndex: number;
    colSpan: number;
    rowSpan: number;
    dataRowIndex: number;
    dataItem: any;
    expandable: boolean;
    readonly uid: number;
    readonly id: string;
    readonly ariaColIndex: number;
    private navigationChange;
    constructor(focusGroup: FocusGroup, element: ElementRef, columnInfoService: ColumnInfoService, idService: IdService, navigationService: NavigationService, renderer: Renderer2, zone: NgZone);
    ngOnInit(): void;
    ngDoCheck(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    private onNavigationChange;
    private updateElement;
    private microtask;
    private registerChanges;
    private registerNoChanges;
    private isFocusable;
    private isFocused;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LogicalCellDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<LogicalCellDirective, "[kendoTreeListLogicalCell]", never, { "logicalSlaveCell": "logicalSlaveCell"; "colSpan": "colSpan"; "rowSpan": "rowSpan"; "dataRowIndex": "dataRowIndex"; "expandable": "expandable"; "logicalColIndex": "logicalColIndex"; "logicalRowIndex": "logicalRowIndex"; "column": "column"; "colIndex": "colIndex"; "dataItem": "dataItem"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naWNhbC1jZWxsLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJsb2dpY2FsLWNlbGwuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBEb0NoZWNrLCBFbGVtZW50UmVmLCBOZ1pvbmUsIFJlbmRlcmVyMiwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9jdXNHcm91cCB9IGZyb20gJy4vZm9jdXMtZ3JvdXAnO1xuaW1wb3J0IHsgTG9naWNhbENlbGwgfSBmcm9tICcuL2xvZ2ljYWwtY2VsbC5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgTmF2aWdhdGlvblNlcnZpY2UgfSBmcm9tICcuL25hdmlnYXRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBDb2x1bW5JbmZvU2VydmljZSB9IGZyb20gJy4uL2NvbW1vbi9jb2x1bW4taW5mby5zZXJ2aWNlJztcbmltcG9ydCB7IElkU2VydmljZSB9IGZyb20gJy4uL2NvbW1vbi9pZC5zZXJ2aWNlJztcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBMb2dpY2FsQ2VsbERpcmVjdGl2ZSBpbXBsZW1lbnRzIExvZ2ljYWxDZWxsLCBPbkluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95LCBEb0NoZWNrIHtcbiAgICBmb2N1c0dyb3VwOiBGb2N1c0dyb3VwO1xuICAgIHByaXZhdGUgZWxlbWVudDtcbiAgICBwcml2YXRlIGNvbHVtbkluZm9TZXJ2aWNlO1xuICAgIHByaXZhdGUgaWRTZXJ2aWNlO1xuICAgIHByaXZhdGUgbmF2aWdhdGlvblNlcnZpY2U7XG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcbiAgICBwcml2YXRlIHpvbmU7XG4gICAgbG9naWNhbENvbEluZGV4OiBudW1iZXI7XG4gICAgbG9naWNhbFJvd0luZGV4OiBudW1iZXI7XG4gICAgbG9naWNhbFNsYXZlQ2VsbDogYm9vbGVhbjtcbiAgICBjb2x1bW46IGFueTtcbiAgICBjb2xJbmRleDogbnVtYmVyO1xuICAgIGNvbFNwYW46IG51bWJlcjtcbiAgICByb3dTcGFuOiBudW1iZXI7XG4gICAgZGF0YVJvd0luZGV4OiBudW1iZXI7XG4gICAgZGF0YUl0ZW06IGFueTtcbiAgICBleHBhbmRhYmxlOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IHVpZDogbnVtYmVyO1xuICAgIHJlYWRvbmx5IGlkOiBzdHJpbmc7XG4gICAgcmVhZG9ubHkgYXJpYUNvbEluZGV4OiBudW1iZXI7XG4gICAgcHJpdmF0ZSBuYXZpZ2F0aW9uQ2hhbmdlO1xuICAgIGNvbnN0cnVjdG9yKGZvY3VzR3JvdXA6IEZvY3VzR3JvdXAsIGVsZW1lbnQ6IEVsZW1lbnRSZWYsIGNvbHVtbkluZm9TZXJ2aWNlOiBDb2x1bW5JbmZvU2VydmljZSwgaWRTZXJ2aWNlOiBJZFNlcnZpY2UsIG5hdmlnYXRpb25TZXJ2aWNlOiBOYXZpZ2F0aW9uU2VydmljZSwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgem9uZTogTmdab25lKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nRG9DaGVjaygpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBvbk5hdmlnYXRpb25DaGFuZ2U7XG4gICAgcHJpdmF0ZSB1cGRhdGVFbGVtZW50O1xuICAgIHByaXZhdGUgbWljcm90YXNrO1xuICAgIHByaXZhdGUgcmVnaXN0ZXJDaGFuZ2VzO1xuICAgIHByaXZhdGUgcmVnaXN0ZXJOb0NoYW5nZXM7XG4gICAgcHJpdmF0ZSBpc0ZvY3VzYWJsZTtcbiAgICBwcml2YXRlIGlzRm9jdXNlZDtcbn1cbiJdfQ==