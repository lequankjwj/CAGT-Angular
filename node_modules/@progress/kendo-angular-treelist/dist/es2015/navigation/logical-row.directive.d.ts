/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { OnDestroy, OnChanges } from '@angular/core';
import { IdService } from '../common/id.service';
import { NavigationService } from './navigation.service';
import { LogicalRow } from './logical-row.interface';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class LogicalRowDirective implements LogicalRow, OnDestroy, OnChanges {
    private idService;
    private navigation;
    logicalRowIndex: number;
    logicalSlaveRow: boolean;
    logicalCellsCount: number;
    logicalSlaveCellsCount: number;
    dataRowIndex: number;
    dataItem: any;
    isNew: boolean;
    uid: number;
    readonly hostRole: string;
    readonly ariaRowIndex: number;
    readonly ariaOwns: string;
    constructor(idService: IdService, navigation: NavigationService);
    ngOnChanges(changes: any): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LogicalRowDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<LogicalRowDirective, "[kendoTreeListLogicalRow]", never, { "logicalSlaveRow": "logicalSlaveRow"; "logicalSlaveCellsCount": "logicalSlaveCellsCount"; "dataRowIndex": "dataRowIndex"; "isNew": "isNew"; "logicalRowIndex": "logicalRowIndex"; "logicalCellsCount": "logicalCellsCount"; "dataItem": "dataItem"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naWNhbC1yb3cuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbImxvZ2ljYWwtcm93LmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBPbkRlc3Ryb3ksIE9uQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWRTZXJ2aWNlIH0gZnJvbSAnLi4vY29tbW9uL2lkLnNlcnZpY2UnO1xuaW1wb3J0IHsgTmF2aWdhdGlvblNlcnZpY2UgfSBmcm9tICcuL25hdmlnYXRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBMb2dpY2FsUm93IH0gZnJvbSAnLi9sb2dpY2FsLXJvdy5pbnRlcmZhY2UnO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIExvZ2ljYWxSb3dEaXJlY3RpdmUgaW1wbGVtZW50cyBMb2dpY2FsUm93LCBPbkRlc3Ryb3ksIE9uQ2hhbmdlcyB7XG4gICAgcHJpdmF0ZSBpZFNlcnZpY2U7XG4gICAgcHJpdmF0ZSBuYXZpZ2F0aW9uO1xuICAgIGxvZ2ljYWxSb3dJbmRleDogbnVtYmVyO1xuICAgIGxvZ2ljYWxTbGF2ZVJvdzogYm9vbGVhbjtcbiAgICBsb2dpY2FsQ2VsbHNDb3VudDogbnVtYmVyO1xuICAgIGxvZ2ljYWxTbGF2ZUNlbGxzQ291bnQ6IG51bWJlcjtcbiAgICBkYXRhUm93SW5kZXg6IG51bWJlcjtcbiAgICBkYXRhSXRlbTogYW55O1xuICAgIGlzTmV3OiBib29sZWFuO1xuICAgIHVpZDogbnVtYmVyO1xuICAgIHJlYWRvbmx5IGhvc3RSb2xlOiBzdHJpbmc7XG4gICAgcmVhZG9ubHkgYXJpYVJvd0luZGV4OiBudW1iZXI7XG4gICAgcmVhZG9ubHkgYXJpYU93bnM6IHN0cmluZztcbiAgICBjb25zdHJ1Y3RvcihpZFNlcnZpY2U6IElkU2VydmljZSwgbmF2aWdhdGlvbjogTmF2aWdhdGlvblNlcnZpY2UpO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IGFueSk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbiJdfQ==