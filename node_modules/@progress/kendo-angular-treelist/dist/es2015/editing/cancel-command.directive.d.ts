/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, Renderer2, NgZone } from '@angular/core';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { EditService } from './edit.service';
import { BaseCommandDirective } from './base-command.directive';
/**
 * Represents the `cancel` command of the TreeList. You can apply this directive to any `button`
 * element inside a [`CommandColumnComponent`]({% slug api_treelist_commandcolumncomponent %}).
 * When an associated button with the directive is clicked, the
 * [`cancel`]({% slug api_treelist_treelistcomponent %}#toc-cancel) event
 * is triggered ([see example]({% slug editing_treelist %})).
 *
 * > * When the row is not in the edit mode, the button with the `kendoTreeListCancelCommand` is automatically hidden.
 * > * The directive takes as input the `cellContext` from the cell template.
 *
 * @example
 * ```html-no-run
 * <kendo-treelist>
 *   <kendo-treelist-command-column title="command">
 *     <ng-template kendoTreeListCellTemplate let-cellContext="cellContext">
 *       <button [kendoTreeListCancelCommand]="cellContext">Cancel changes</button>
 *     </ng-template>
 *   </kendo-treelist-command-column>
 * </kendo-treelist>
 * ```
 *
 * You can control the content of the button based on the state of the row.
 *
 * @example
 * ```html-no-run
 * <kendo-treelist>
 *   <kendo-treelist-command-column title="command">
 *     <ng-template kendoTreeListCellTemplate let-cellContext="cellContext" let-isNew="isNew">
 *       <button [kendoTreeListCancelCommand]="cellContext">{{isNew ? 'Discard' : 'Cancel changes'}}</button>
 *     </ng-template>
 *   </kendo-treelist-command-column>
 * </kendo-treelist>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class CancelCommandDirective extends BaseCommandDirective {
    /**
     * The `cellContext` provided to the template.
     */
    cellContext: any;
    commandClass: boolean;
    protected readVisible: boolean;
    constructor(editService: EditService, element: ElementRef, renderer: Renderer2, localization: LocalizationService, ngZone: NgZone);
    protected onClick(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CancelCommandDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<CancelCommandDirective, "[kendoTreeListCancelCommand]", never, { "cellContext": "kendoTreeListCancelCommand"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FuY2VsLWNvbW1hbmQuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbImNhbmNlbC1jb21tYW5kLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgRWxlbWVudFJlZiwgUmVuZGVyZXIyLCBOZ1pvbmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IExvY2FsaXphdGlvblNlcnZpY2UgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1sMTBuJztcbmltcG9ydCB7IEVkaXRTZXJ2aWNlIH0gZnJvbSAnLi9lZGl0LnNlcnZpY2UnO1xuaW1wb3J0IHsgQmFzZUNvbW1hbmREaXJlY3RpdmUgfSBmcm9tICcuL2Jhc2UtY29tbWFuZC5kaXJlY3RpdmUnO1xuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBgY2FuY2VsYCBjb21tYW5kIG9mIHRoZSBUcmVlTGlzdC4gWW91IGNhbiBhcHBseSB0aGlzIGRpcmVjdGl2ZSB0byBhbnkgYGJ1dHRvbmBcbiAqIGVsZW1lbnQgaW5zaWRlIGEgW2BDb21tYW5kQ29sdW1uQ29tcG9uZW50YF0oeyUgc2x1ZyBhcGlfdHJlZWxpc3RfY29tbWFuZGNvbHVtbmNvbXBvbmVudCAlfSkuXG4gKiBXaGVuIGFuIGFzc29jaWF0ZWQgYnV0dG9uIHdpdGggdGhlIGRpcmVjdGl2ZSBpcyBjbGlja2VkLCB0aGVcbiAqIFtgY2FuY2VsYF0oeyUgc2x1ZyBhcGlfdHJlZWxpc3RfdHJlZWxpc3Rjb21wb25lbnQgJX0jdG9jLWNhbmNlbCkgZXZlbnRcbiAqIGlzIHRyaWdnZXJlZCAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIGVkaXRpbmdfdHJlZWxpc3QgJX0pKS5cbiAqXG4gKiA+ICogV2hlbiB0aGUgcm93IGlzIG5vdCBpbiB0aGUgZWRpdCBtb2RlLCB0aGUgYnV0dG9uIHdpdGggdGhlIGBrZW5kb1RyZWVMaXN0Q2FuY2VsQ29tbWFuZGAgaXMgYXV0b21hdGljYWxseSBoaWRkZW4uXG4gKiA+ICogVGhlIGRpcmVjdGl2ZSB0YWtlcyBhcyBpbnB1dCB0aGUgYGNlbGxDb250ZXh0YCBmcm9tIHRoZSBjZWxsIHRlbXBsYXRlLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBodG1sLW5vLXJ1blxuICogPGtlbmRvLXRyZWVsaXN0PlxuICogICA8a2VuZG8tdHJlZWxpc3QtY29tbWFuZC1jb2x1bW4gdGl0bGU9XCJjb21tYW5kXCI+XG4gKiAgICAgPG5nLXRlbXBsYXRlIGtlbmRvVHJlZUxpc3RDZWxsVGVtcGxhdGUgbGV0LWNlbGxDb250ZXh0PVwiY2VsbENvbnRleHRcIj5cbiAqICAgICAgIDxidXR0b24gW2tlbmRvVHJlZUxpc3RDYW5jZWxDb21tYW5kXT1cImNlbGxDb250ZXh0XCI+Q2FuY2VsIGNoYW5nZXM8L2J1dHRvbj5cbiAqICAgICA8L25nLXRlbXBsYXRlPlxuICogICA8L2tlbmRvLXRyZWVsaXN0LWNvbW1hbmQtY29sdW1uPlxuICogPC9rZW5kby10cmVlbGlzdD5cbiAqIGBgYFxuICpcbiAqIFlvdSBjYW4gY29udHJvbCB0aGUgY29udGVudCBvZiB0aGUgYnV0dG9uIGJhc2VkIG9uIHRoZSBzdGF0ZSBvZiB0aGUgcm93LlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBodG1sLW5vLXJ1blxuICogPGtlbmRvLXRyZWVsaXN0PlxuICogICA8a2VuZG8tdHJlZWxpc3QtY29tbWFuZC1jb2x1bW4gdGl0bGU9XCJjb21tYW5kXCI+XG4gKiAgICAgPG5nLXRlbXBsYXRlIGtlbmRvVHJlZUxpc3RDZWxsVGVtcGxhdGUgbGV0LWNlbGxDb250ZXh0PVwiY2VsbENvbnRleHRcIiBsZXQtaXNOZXc9XCJpc05ld1wiPlxuICogICAgICAgPGJ1dHRvbiBba2VuZG9UcmVlTGlzdENhbmNlbENvbW1hbmRdPVwiY2VsbENvbnRleHRcIj57e2lzTmV3ID8gJ0Rpc2NhcmQnIDogJ0NhbmNlbCBjaGFuZ2VzJ319PC9idXR0b24+XG4gKiAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgPC9rZW5kby10cmVlbGlzdC1jb21tYW5kLWNvbHVtbj5cbiAqIDwva2VuZG8tdHJlZWxpc3Q+XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2FuY2VsQ29tbWFuZERpcmVjdGl2ZSBleHRlbmRzIEJhc2VDb21tYW5kRGlyZWN0aXZlIHtcbiAgICAvKipcbiAgICAgKiBUaGUgYGNlbGxDb250ZXh0YCBwcm92aWRlZCB0byB0aGUgdGVtcGxhdGUuXG4gICAgICovXG4gICAgY2VsbENvbnRleHQ6IGFueTtcbiAgICBjb21tYW5kQ2xhc3M6IGJvb2xlYW47XG4gICAgcHJvdGVjdGVkIHJlYWRWaXNpYmxlOiBib29sZWFuO1xuICAgIGNvbnN0cnVjdG9yKGVkaXRTZXJ2aWNlOiBFZGl0U2VydmljZSwgZWxlbWVudDogRWxlbWVudFJlZiwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgbG9jYWxpemF0aW9uOiBMb2NhbGl6YXRpb25TZXJ2aWNlLCBuZ1pvbmU6IE5nWm9uZSk7XG4gICAgcHJvdGVjdGVkIG9uQ2xpY2soKTogdm9pZDtcbn1cbiJdfQ==