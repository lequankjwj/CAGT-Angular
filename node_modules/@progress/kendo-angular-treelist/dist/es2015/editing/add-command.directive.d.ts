/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, Renderer2, NgZone } from '@angular/core';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { EditService } from './edit.service';
import { BaseCommandDirective } from './base-command.directive';
/**
 * Represents the command for adding a new item to the TreeList. You can apply this directive to any
 * `button` element inside a [`ToolbarTemplate`]({% slug api_treelist_commandcolumncomponent %}) or
 * inside a [`CommandColumnComponent`]({% slug api_treelist_commandcolumncomponent %}).
 *
 * When an associated button with the directive is clicked, the
 * [`add`]({% slug api_treelist_treelistcomponent %}#toc-add) event is triggered
 * ([see example]({% slug editing_treelist %})).
 *
 * > When the row is in the edit mode, the button with `kendoTreeListAddCommand` is automatically hidden.
 *
 * @example
 * ```html-no-run
 * <kendo-treelist>
 *    <ng-template kendoTreeListToolbarTemplate>
 *       <button kendoTreeListAddCommand>Add new</button>
 *    </ng-template>
 * </kendo-treelist>
 * ```
 *
 * When added to the command column, the directive takes as input the `cellContext` from the cell template.
 *
 * @example
 * ```html-no-run
 * <kendo-treelist>
 *   <kendo-treelist-command-column title="command">
 *     <ng-template kendoTreeListCellTemplate let-cellContext="cellContext">
 *       <button [kendoTreeListAddCommand]="cellContext" class="k-primary">Edit</button>
 *     </ng-template>
 *   </kendo-treelist-command-column>
 * </kendo-treelist>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class AddCommandDirective extends BaseCommandDirective {
    /**
     * The `cellContext` provided to the template.
     */
    cellContext: any;
    commandClass: boolean;
    protected readVisible: boolean;
    constructor(editService: EditService, element: ElementRef, renderer: Renderer2, localization: LocalizationService, ngZone: NgZone);
    protected onClick(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AddCommandDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<AddCommandDirective, "[kendoTreeListAddCommand]", never, { "cellContext": "kendoTreeListAddCommand"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLWNvbW1hbmQuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbImFkZC1jb21tYW5kLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IEVsZW1lbnRSZWYsIFJlbmRlcmVyMiwgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMb2NhbGl6YXRpb25TZXJ2aWNlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItbDEwbic7XG5pbXBvcnQgeyBFZGl0U2VydmljZSB9IGZyb20gJy4vZWRpdC5zZXJ2aWNlJztcbmltcG9ydCB7IEJhc2VDb21tYW5kRGlyZWN0aXZlIH0gZnJvbSAnLi9iYXNlLWNvbW1hbmQuZGlyZWN0aXZlJztcbi8qKlxuICogUmVwcmVzZW50cyB0aGUgY29tbWFuZCBmb3IgYWRkaW5nIGEgbmV3IGl0ZW0gdG8gdGhlIFRyZWVMaXN0LiBZb3UgY2FuIGFwcGx5IHRoaXMgZGlyZWN0aXZlIHRvIGFueVxuICogYGJ1dHRvbmAgZWxlbWVudCBpbnNpZGUgYSBbYFRvb2xiYXJUZW1wbGF0ZWBdKHslIHNsdWcgYXBpX3RyZWVsaXN0X2NvbW1hbmRjb2x1bW5jb21wb25lbnQgJX0pIG9yXG4gKiBpbnNpZGUgYSBbYENvbW1hbmRDb2x1bW5Db21wb25lbnRgXSh7JSBzbHVnIGFwaV90cmVlbGlzdF9jb21tYW5kY29sdW1uY29tcG9uZW50ICV9KS5cbiAqXG4gKiBXaGVuIGFuIGFzc29jaWF0ZWQgYnV0dG9uIHdpdGggdGhlIGRpcmVjdGl2ZSBpcyBjbGlja2VkLCB0aGVcbiAqIFtgYWRkYF0oeyUgc2x1ZyBhcGlfdHJlZWxpc3RfdHJlZWxpc3Rjb21wb25lbnQgJX0jdG9jLWFkZCkgZXZlbnQgaXMgdHJpZ2dlcmVkXG4gKiAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIGVkaXRpbmdfdHJlZWxpc3QgJX0pKS5cbiAqXG4gKiA+IFdoZW4gdGhlIHJvdyBpcyBpbiB0aGUgZWRpdCBtb2RlLCB0aGUgYnV0dG9uIHdpdGggYGtlbmRvVHJlZUxpc3RBZGRDb21tYW5kYCBpcyBhdXRvbWF0aWNhbGx5IGhpZGRlbi5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgaHRtbC1uby1ydW5cbiAqIDxrZW5kby10cmVlbGlzdD5cbiAqICAgIDxuZy10ZW1wbGF0ZSBrZW5kb1RyZWVMaXN0VG9vbGJhclRlbXBsYXRlPlxuICogICAgICAgPGJ1dHRvbiBrZW5kb1RyZWVMaXN0QWRkQ29tbWFuZD5BZGQgbmV3PC9idXR0b24+XG4gKiAgICA8L25nLXRlbXBsYXRlPlxuICogPC9rZW5kby10cmVlbGlzdD5cbiAqIGBgYFxuICpcbiAqIFdoZW4gYWRkZWQgdG8gdGhlIGNvbW1hbmQgY29sdW1uLCB0aGUgZGlyZWN0aXZlIHRha2VzIGFzIGlucHV0IHRoZSBgY2VsbENvbnRleHRgIGZyb20gdGhlIGNlbGwgdGVtcGxhdGUuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGh0bWwtbm8tcnVuXG4gKiA8a2VuZG8tdHJlZWxpc3Q+XG4gKiAgIDxrZW5kby10cmVlbGlzdC1jb21tYW5kLWNvbHVtbiB0aXRsZT1cImNvbW1hbmRcIj5cbiAqICAgICA8bmctdGVtcGxhdGUga2VuZG9UcmVlTGlzdENlbGxUZW1wbGF0ZSBsZXQtY2VsbENvbnRleHQ9XCJjZWxsQ29udGV4dFwiPlxuICogICAgICAgPGJ1dHRvbiBba2VuZG9UcmVlTGlzdEFkZENvbW1hbmRdPVwiY2VsbENvbnRleHRcIiBjbGFzcz1cImstcHJpbWFyeVwiPkVkaXQ8L2J1dHRvbj5cbiAqICAgICA8L25nLXRlbXBsYXRlPlxuICogICA8L2tlbmRvLXRyZWVsaXN0LWNvbW1hbmQtY29sdW1uPlxuICogPC9rZW5kby10cmVlbGlzdD5cbiAqIGBgYFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBBZGRDb21tYW5kRGlyZWN0aXZlIGV4dGVuZHMgQmFzZUNvbW1hbmREaXJlY3RpdmUge1xuICAgIC8qKlxuICAgICAqIFRoZSBgY2VsbENvbnRleHRgIHByb3ZpZGVkIHRvIHRoZSB0ZW1wbGF0ZS5cbiAgICAgKi9cbiAgICBjZWxsQ29udGV4dDogYW55O1xuICAgIGNvbW1hbmRDbGFzczogYm9vbGVhbjtcbiAgICBwcm90ZWN0ZWQgcmVhZFZpc2libGU6IGJvb2xlYW47XG4gICAgY29uc3RydWN0b3IoZWRpdFNlcnZpY2U6IEVkaXRTZXJ2aWNlLCBlbGVtZW50OiBFbGVtZW50UmVmLCByZW5kZXJlcjogUmVuZGVyZXIyLCBsb2NhbGl6YXRpb246IExvY2FsaXphdGlvblNlcnZpY2UsIG5nWm9uZTogTmdab25lKTtcbiAgICBwcm90ZWN0ZWQgb25DbGljaygpOiB2b2lkO1xufVxuIl19