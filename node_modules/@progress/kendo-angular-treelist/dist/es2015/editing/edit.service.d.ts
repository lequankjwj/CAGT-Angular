/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { EventEmitter, NgZone } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { Observable } from 'rxjs';
import { EditState } from '../data/data.collection';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare type Entity = {
    index: number;
    group: any;
};
/**
 * @hidden
 */
export declare type CommandAction = 'edit' | 'remove' | 'cancel' | 'save' | 'add';
/**
 * @hidden
 */
export declare type CommandEvent = {
    action: CommandAction;
    formGroup?: FormGroup;
    isNew?: boolean;
    dataItem?: number;
    parent?: any;
};
interface EditedItem {
    group: FormGroup;
    item: any;
}
/**
 * @hidden
 */
export declare class EditService implements EditState {
    ngZone: NgZone;
    changes: EventEmitter<CommandEvent>;
    changed: Observable<any>;
    readonly newItemGroup: FormGroup;
    newItem: any;
    idGetter: any;
    private edited;
    private keepEditCell;
    private keepCellTimeout;
    private column;
    private closingCell;
    private changedSource;
    constructor(ngZone: NgZone);
    editRow(dataItem: any, group?: any): void;
    addRow(parent: any, group?: any): void;
    editCell(item: any, column: any, group?: any): void;
    isEditing(): boolean;
    isEdited(dataItem: any): boolean;
    isEditingCell(): boolean;
    isEditingColumn(column: any): boolean;
    isEditedColumn(column: any): boolean;
    hasNew(parent?: any): boolean;
    readonly newDataItem: any;
    close(item: any, isNew?: boolean): void;
    closeCell(originalEvent?: any): boolean;
    cancelCell(): void;
    shouldCloseCell(): boolean;
    preventCellClose(): void;
    context(dataItem: any): EditedItem;
    beginEdit(item: any): void;
    beginAdd(parent?: any): void;
    endEdit(dataItem: any, isNew: boolean): void;
    save(item: any, isNew: boolean): void;
    remove(dataItem: any, parent?: any): void;
    private onChanged;
    private readonly first;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<EditService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<EditService>;
}
export {};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRpdC5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbImVkaXQuc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IEV2ZW50RW1pdHRlciwgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBFZGl0U3RhdGUgfSBmcm9tICcuLi9kYXRhL2RhdGEuY29sbGVjdGlvbic7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgdHlwZSBFbnRpdHkgPSB7XG4gICAgaW5kZXg6IG51bWJlcjtcbiAgICBncm91cDogYW55O1xufTtcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSB0eXBlIENvbW1hbmRBY3Rpb24gPSAnZWRpdCcgfCAncmVtb3ZlJyB8ICdjYW5jZWwnIHwgJ3NhdmUnIHwgJ2FkZCc7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgdHlwZSBDb21tYW5kRXZlbnQgPSB7XG4gICAgYWN0aW9uOiBDb21tYW5kQWN0aW9uO1xuICAgIGZvcm1Hcm91cD86IEZvcm1Hcm91cDtcbiAgICBpc05ldz86IGJvb2xlYW47XG4gICAgZGF0YUl0ZW0/OiBudW1iZXI7XG4gICAgcGFyZW50PzogYW55O1xufTtcbmludGVyZmFjZSBFZGl0ZWRJdGVtIHtcbiAgICBncm91cDogRm9ybUdyb3VwO1xuICAgIGl0ZW06IGFueTtcbn1cbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBFZGl0U2VydmljZSBpbXBsZW1lbnRzIEVkaXRTdGF0ZSB7XG4gICAgbmdab25lOiBOZ1pvbmU7XG4gICAgY2hhbmdlczogRXZlbnRFbWl0dGVyPENvbW1hbmRFdmVudD47XG4gICAgY2hhbmdlZDogT2JzZXJ2YWJsZTxhbnk+O1xuICAgIHJlYWRvbmx5IG5ld0l0ZW1Hcm91cDogRm9ybUdyb3VwO1xuICAgIG5ld0l0ZW06IGFueTtcbiAgICBpZEdldHRlcjogYW55O1xuICAgIHByaXZhdGUgZWRpdGVkO1xuICAgIHByaXZhdGUga2VlcEVkaXRDZWxsO1xuICAgIHByaXZhdGUga2VlcENlbGxUaW1lb3V0O1xuICAgIHByaXZhdGUgY29sdW1uO1xuICAgIHByaXZhdGUgY2xvc2luZ0NlbGw7XG4gICAgcHJpdmF0ZSBjaGFuZ2VkU291cmNlO1xuICAgIGNvbnN0cnVjdG9yKG5nWm9uZTogTmdab25lKTtcbiAgICBlZGl0Um93KGRhdGFJdGVtOiBhbnksIGdyb3VwPzogYW55KTogdm9pZDtcbiAgICBhZGRSb3cocGFyZW50OiBhbnksIGdyb3VwPzogYW55KTogdm9pZDtcbiAgICBlZGl0Q2VsbChpdGVtOiBhbnksIGNvbHVtbjogYW55LCBncm91cD86IGFueSk6IHZvaWQ7XG4gICAgaXNFZGl0aW5nKCk6IGJvb2xlYW47XG4gICAgaXNFZGl0ZWQoZGF0YUl0ZW06IGFueSk6IGJvb2xlYW47XG4gICAgaXNFZGl0aW5nQ2VsbCgpOiBib29sZWFuO1xuICAgIGlzRWRpdGluZ0NvbHVtbihjb2x1bW46IGFueSk6IGJvb2xlYW47XG4gICAgaXNFZGl0ZWRDb2x1bW4oY29sdW1uOiBhbnkpOiBib29sZWFuO1xuICAgIGhhc05ldyhwYXJlbnQ/OiBhbnkpOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IG5ld0RhdGFJdGVtOiBhbnk7XG4gICAgY2xvc2UoaXRlbTogYW55LCBpc05ldz86IGJvb2xlYW4pOiB2b2lkO1xuICAgIGNsb3NlQ2VsbChvcmlnaW5hbEV2ZW50PzogYW55KTogYm9vbGVhbjtcbiAgICBjYW5jZWxDZWxsKCk6IHZvaWQ7XG4gICAgc2hvdWxkQ2xvc2VDZWxsKCk6IGJvb2xlYW47XG4gICAgcHJldmVudENlbGxDbG9zZSgpOiB2b2lkO1xuICAgIGNvbnRleHQoZGF0YUl0ZW06IGFueSk6IEVkaXRlZEl0ZW07XG4gICAgYmVnaW5FZGl0KGl0ZW06IGFueSk6IHZvaWQ7XG4gICAgYmVnaW5BZGQocGFyZW50PzogYW55KTogdm9pZDtcbiAgICBlbmRFZGl0KGRhdGFJdGVtOiBhbnksIGlzTmV3OiBib29sZWFuKTogdm9pZDtcbiAgICBzYXZlKGl0ZW06IGFueSwgaXNOZXc6IGJvb2xlYW4pOiB2b2lkO1xuICAgIHJlbW92ZShkYXRhSXRlbTogYW55LCBwYXJlbnQ/OiBhbnkpOiB2b2lkO1xuICAgIHByaXZhdGUgb25DaGFuZ2VkO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgZmlyc3Q7XG59XG5leHBvcnQge307XG4iXX0=