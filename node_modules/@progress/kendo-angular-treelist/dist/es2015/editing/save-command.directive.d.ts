/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, Renderer2, NgZone } from '@angular/core';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { EditService } from './edit.service';
import { BaseCommandDirective } from './base-command.directive';
/**
 * Represents the `save` command of the TreeList. You can apply this directive to any `button`
 * element inside a [`CommandColumnComponent`]({% slug api_treelist_commandcolumncomponent %}).
 * When an associated button with the directive is clicked, the
 * [`save`]({% slug api_treelist_treelistcomponent %}#toc-save) event
 * is triggered ([see example]({% slug editing_treelist %})).
 *
 * > * When the row is not in the edit mode, the button with `kendoTreeListSaveCommand` is automatically hidden.
 * > * The directive takes as input the `cellContext` from the cell template.
 *
 * @example
 * ```html-no-run
 * <kendo-treelist>
 *   <kendo-treelist-command-column title="command">
 *     <ng-template kendoTreeListCellTemplate let-cellContext="cellContext">
 *       <button [kendoTreeListSaveCommand]="cellContext">Save changes</button>
 *     </ng-template>
 *   </kendo-treelist-command-column>
 * </kendo-treelist>
 * ```
 *
 * You can control the content of the button based on the state of the row.
 *
 * @example
 * ```html-no-run
 * <kendo-treelist>
 *   <kendo-treelist-command-column title="command">
 *     <ng-template kendoTreeListCellTemplate let-cellContext="cellContext" let-isNew="isNew">
 *       <button [kendoTreeListSaveCommand]="cellContext">{{isNew ? 'Add' : 'Update'}}</button>
 *     </ng-template>
 *   </kendo-treelist-command-column>
 * </kendo-treelist>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class SaveCommandDirective extends BaseCommandDirective {
    /**
     * The `cellContext` provided to the template.
     */
    cellContext: any;
    commandClass: boolean;
    protected readVisible: boolean;
    constructor(editService: EditService, element: ElementRef, renderer: Renderer2, localization: LocalizationService, ngZone: NgZone);
    protected onClick(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SaveCommandDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<SaveCommandDirective, "[kendoTreeListSaveCommand]", never, { "cellContext": "kendoTreeListSaveCommand"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2F2ZS1jb21tYW5kLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJzYXZlLWNvbW1hbmQuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBFbGVtZW50UmVmLCBSZW5kZXJlcjIsIE5nWm9uZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTG9jYWxpemF0aW9uU2VydmljZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWwxMG4nO1xuaW1wb3J0IHsgRWRpdFNlcnZpY2UgfSBmcm9tICcuL2VkaXQuc2VydmljZSc7XG5pbXBvcnQgeyBCYXNlQ29tbWFuZERpcmVjdGl2ZSB9IGZyb20gJy4vYmFzZS1jb21tYW5kLmRpcmVjdGl2ZSc7XG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIGBzYXZlYCBjb21tYW5kIG9mIHRoZSBUcmVlTGlzdC4gWW91IGNhbiBhcHBseSB0aGlzIGRpcmVjdGl2ZSB0byBhbnkgYGJ1dHRvbmBcbiAqIGVsZW1lbnQgaW5zaWRlIGEgW2BDb21tYW5kQ29sdW1uQ29tcG9uZW50YF0oeyUgc2x1ZyBhcGlfdHJlZWxpc3RfY29tbWFuZGNvbHVtbmNvbXBvbmVudCAlfSkuXG4gKiBXaGVuIGFuIGFzc29jaWF0ZWQgYnV0dG9uIHdpdGggdGhlIGRpcmVjdGl2ZSBpcyBjbGlja2VkLCB0aGVcbiAqIFtgc2F2ZWBdKHslIHNsdWcgYXBpX3RyZWVsaXN0X3RyZWVsaXN0Y29tcG9uZW50ICV9I3RvYy1zYXZlKSBldmVudFxuICogaXMgdHJpZ2dlcmVkIChbc2VlIGV4YW1wbGVdKHslIHNsdWcgZWRpdGluZ190cmVlbGlzdCAlfSkpLlxuICpcbiAqID4gKiBXaGVuIHRoZSByb3cgaXMgbm90IGluIHRoZSBlZGl0IG1vZGUsIHRoZSBidXR0b24gd2l0aCBga2VuZG9UcmVlTGlzdFNhdmVDb21tYW5kYCBpcyBhdXRvbWF0aWNhbGx5IGhpZGRlbi5cbiAqID4gKiBUaGUgZGlyZWN0aXZlIHRha2VzIGFzIGlucHV0IHRoZSBgY2VsbENvbnRleHRgIGZyb20gdGhlIGNlbGwgdGVtcGxhdGUuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGh0bWwtbm8tcnVuXG4gKiA8a2VuZG8tdHJlZWxpc3Q+XG4gKiAgIDxrZW5kby10cmVlbGlzdC1jb21tYW5kLWNvbHVtbiB0aXRsZT1cImNvbW1hbmRcIj5cbiAqICAgICA8bmctdGVtcGxhdGUga2VuZG9UcmVlTGlzdENlbGxUZW1wbGF0ZSBsZXQtY2VsbENvbnRleHQ9XCJjZWxsQ29udGV4dFwiPlxuICogICAgICAgPGJ1dHRvbiBba2VuZG9UcmVlTGlzdFNhdmVDb21tYW5kXT1cImNlbGxDb250ZXh0XCI+U2F2ZSBjaGFuZ2VzPC9idXR0b24+XG4gKiAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgPC9rZW5kby10cmVlbGlzdC1jb21tYW5kLWNvbHVtbj5cbiAqIDwva2VuZG8tdHJlZWxpc3Q+XG4gKiBgYGBcbiAqXG4gKiBZb3UgY2FuIGNvbnRyb2wgdGhlIGNvbnRlbnQgb2YgdGhlIGJ1dHRvbiBiYXNlZCBvbiB0aGUgc3RhdGUgb2YgdGhlIHJvdy5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgaHRtbC1uby1ydW5cbiAqIDxrZW5kby10cmVlbGlzdD5cbiAqICAgPGtlbmRvLXRyZWVsaXN0LWNvbW1hbmQtY29sdW1uIHRpdGxlPVwiY29tbWFuZFwiPlxuICogICAgIDxuZy10ZW1wbGF0ZSBrZW5kb1RyZWVMaXN0Q2VsbFRlbXBsYXRlIGxldC1jZWxsQ29udGV4dD1cImNlbGxDb250ZXh0XCIgbGV0LWlzTmV3PVwiaXNOZXdcIj5cbiAqICAgICAgIDxidXR0b24gW2tlbmRvVHJlZUxpc3RTYXZlQ29tbWFuZF09XCJjZWxsQ29udGV4dFwiPnt7aXNOZXcgPyAnQWRkJyA6ICdVcGRhdGUnfX08L2J1dHRvbj5cbiAqICAgICA8L25nLXRlbXBsYXRlPlxuICogICA8L2tlbmRvLXRyZWVsaXN0LWNvbW1hbmQtY29sdW1uPlxuICogPC9rZW5kby10cmVlbGlzdD5cbiAqIGBgYFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTYXZlQ29tbWFuZERpcmVjdGl2ZSBleHRlbmRzIEJhc2VDb21tYW5kRGlyZWN0aXZlIHtcbiAgICAvKipcbiAgICAgKiBUaGUgYGNlbGxDb250ZXh0YCBwcm92aWRlZCB0byB0aGUgdGVtcGxhdGUuXG4gICAgICovXG4gICAgY2VsbENvbnRleHQ6IGFueTtcbiAgICBjb21tYW5kQ2xhc3M6IGJvb2xlYW47XG4gICAgcHJvdGVjdGVkIHJlYWRWaXNpYmxlOiBib29sZWFuO1xuICAgIGNvbnN0cnVjdG9yKGVkaXRTZXJ2aWNlOiBFZGl0U2VydmljZSwgZWxlbWVudDogRWxlbWVudFJlZiwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgbG9jYWxpemF0aW9uOiBMb2NhbGl6YXRpb25TZXJ2aWNlLCBuZ1pvbmU6IE5nWm9uZSk7XG4gICAgcHJvdGVjdGVkIG9uQ2xpY2soKTogdm9pZDtcbn1cbiJdfQ==