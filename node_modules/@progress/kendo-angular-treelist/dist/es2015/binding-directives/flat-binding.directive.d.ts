/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { BaseBindingDirective } from './base-binding.directive';
import { LocalDataChangesService } from '../editing/local-data-changes.service';
import { TreeListComponent } from '../treelist.component';
/**
 * A directive which binds the TreeList to an array of objects by using
 * an ID and parentID field to define the hierarchy.
 *
 * The directive encapsulates the in-memory handling of data operations such as
 * [sorting]({% slug sorting_treelist %}), [aggregation]({% slug treelist_with_aggregates %})
 * and [filtering]({% slug filtering_treelist %}) ([more information and examples]({% slug databinding_treelist %})).
 */
import * as ɵngcc0 from '@angular/core';
export declare class FlatBindingDirective extends BaseBindingDirective {
    protected treelist: TreeListComponent;
    /**
     * The name of the field which contains the identifier of the parent node.
     */
    parentIdField: string;
    /**
     * The name of the field which contains the unique identifier of the node.
     */
    idField: string;
    /**
     * The array of data which will be used to populate the TreeList.
     */
    data: any[];
    idGetter: any;
    idSetter: any;
    parentIdGetter: any;
    parentIdSetter: any;
    constructor(treelist: TreeListComponent, localDataChanges: LocalDataChangesService);
    protected getChildren(item?: any): any;
    protected itemKey(item: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FlatBindingDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<FlatBindingDirective, "[kendoTreeListFlatBinding]", ["kendoTreeListFlatBinding"], { "parentIdField": "parentIdField"; "idField": "idField"; "data": "kendoTreeListFlatBinding"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxhdC1iaW5kaW5nLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJmbGF0LWJpbmRpbmcuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBCYXNlQmluZGluZ0RpcmVjdGl2ZSB9IGZyb20gJy4vYmFzZS1iaW5kaW5nLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBMb2NhbERhdGFDaGFuZ2VzU2VydmljZSB9IGZyb20gJy4uL2VkaXRpbmcvbG9jYWwtZGF0YS1jaGFuZ2VzLnNlcnZpY2UnO1xuaW1wb3J0IHsgVHJlZUxpc3RDb21wb25lbnQgfSBmcm9tICcuLi90cmVlbGlzdC5jb21wb25lbnQnO1xuLyoqXG4gKiBBIGRpcmVjdGl2ZSB3aGljaCBiaW5kcyB0aGUgVHJlZUxpc3QgdG8gYW4gYXJyYXkgb2Ygb2JqZWN0cyBieSB1c2luZ1xuICogYW4gSUQgYW5kIHBhcmVudElEIGZpZWxkIHRvIGRlZmluZSB0aGUgaGllcmFyY2h5LlxuICpcbiAqIFRoZSBkaXJlY3RpdmUgZW5jYXBzdWxhdGVzIHRoZSBpbi1tZW1vcnkgaGFuZGxpbmcgb2YgZGF0YSBvcGVyYXRpb25zIHN1Y2ggYXNcbiAqIFtzb3J0aW5nXSh7JSBzbHVnIHNvcnRpbmdfdHJlZWxpc3QgJX0pLCBbYWdncmVnYXRpb25dKHslIHNsdWcgdHJlZWxpc3Rfd2l0aF9hZ2dyZWdhdGVzICV9KVxuICogYW5kIFtmaWx0ZXJpbmddKHslIHNsdWcgZmlsdGVyaW5nX3RyZWVsaXN0ICV9KSAoW21vcmUgaW5mb3JtYXRpb24gYW5kIGV4YW1wbGVzXSh7JSBzbHVnIGRhdGFiaW5kaW5nX3RyZWVsaXN0ICV9KSkuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEZsYXRCaW5kaW5nRGlyZWN0aXZlIGV4dGVuZHMgQmFzZUJpbmRpbmdEaXJlY3RpdmUge1xuICAgIHByb3RlY3RlZCB0cmVlbGlzdDogVHJlZUxpc3RDb21wb25lbnQ7XG4gICAgLyoqXG4gICAgICogVGhlIG5hbWUgb2YgdGhlIGZpZWxkIHdoaWNoIGNvbnRhaW5zIHRoZSBpZGVudGlmaWVyIG9mIHRoZSBwYXJlbnQgbm9kZS5cbiAgICAgKi9cbiAgICBwYXJlbnRJZEZpZWxkOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIG5hbWUgb2YgdGhlIGZpZWxkIHdoaWNoIGNvbnRhaW5zIHRoZSB1bmlxdWUgaWRlbnRpZmllciBvZiB0aGUgbm9kZS5cbiAgICAgKi9cbiAgICBpZEZpZWxkOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIGFycmF5IG9mIGRhdGEgd2hpY2ggd2lsbCBiZSB1c2VkIHRvIHBvcHVsYXRlIHRoZSBUcmVlTGlzdC5cbiAgICAgKi9cbiAgICBkYXRhOiBhbnlbXTtcbiAgICBpZEdldHRlcjogYW55O1xuICAgIGlkU2V0dGVyOiBhbnk7XG4gICAgcGFyZW50SWRHZXR0ZXI6IGFueTtcbiAgICBwYXJlbnRJZFNldHRlcjogYW55O1xuICAgIGNvbnN0cnVjdG9yKHRyZWVsaXN0OiBUcmVlTGlzdENvbXBvbmVudCwgbG9jYWxEYXRhQ2hhbmdlczogTG9jYWxEYXRhQ2hhbmdlc1NlcnZpY2UpO1xuICAgIHByb3RlY3RlZCBnZXRDaGlsZHJlbihpdGVtPzogYW55KTogYW55O1xuICAgIHByb3RlY3RlZCBpdGVtS2V5KGl0ZW06IGFueSk6IHZvaWQ7XG59XG4iXX0=