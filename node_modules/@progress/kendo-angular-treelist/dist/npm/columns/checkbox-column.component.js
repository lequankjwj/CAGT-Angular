/**-----------------------------------------------------------------------------------------
* Copyright Â© 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var core_1 = require("@angular/core");
var column_base_1 = require("./column-base");
var cell_template_directive_1 = require("../rendering/cell-template.directive");
/**
 * Represents the checkbox for selecting rows in the TreeList.
 */
var CheckboxColumnComponent = /** @class */ (function (_super) {
    tslib_1.__extends(CheckboxColumnComponent, _super);
    function CheckboxColumnComponent(parent) {
        var _this = _super.call(this, parent) || this;
        _this.parent = parent;
        /*
         * @hidden
         */
        _this.isCheckboxColumn = true;
        return _this;
    }
    Object.defineProperty(CheckboxColumnComponent.prototype, "templateRef", {
        get: function () {
            return this.template ? this.template.templateRef : undefined;
        },
        enumerable: true,
        configurable: true
    });
    CheckboxColumnComponent.decorators = [
        { type: core_1.Component, args: [{
                    providers: [
                        {
                            provide: column_base_1.ColumnBase,
                            useExisting: core_1.forwardRef(function () { return CheckboxColumnComponent; })
                        }
                    ],
                    selector: 'kendo-treelist-checkbox-column',
                    template: ""
                },] },
    ];
    /** @nocollapse */
    CheckboxColumnComponent.ctorParameters = function () { return [
        { type: column_base_1.ColumnBase, decorators: [{ type: core_1.SkipSelf }, { type: core_1.Host }, { type: core_1.Optional }] }
    ]; };
    CheckboxColumnComponent.propDecorators = {
        showSelectAll: [{ type: core_1.Input }],
        checkChildren: [{ type: core_1.Input }],
        expandable: [{ type: core_1.Input }],
        template: [{ type: core_1.ContentChild, args: [cell_template_directive_1.CellTemplateDirective,] }]
    };
    return CheckboxColumnComponent;
}(column_base_1.ColumnBase));
exports.CheckboxColumnComponent = CheckboxColumnComponent;
