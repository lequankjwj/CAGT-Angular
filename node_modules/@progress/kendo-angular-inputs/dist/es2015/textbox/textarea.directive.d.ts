/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, EventEmitter, OnDestroy, Renderer2, OnChanges, OnInit, NgZone, ChangeDetectorRef, Injector } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
/**
 * Represents the [Kendo UI TextArea directive for the Inputs components for Angular]({% slug overview_textarea %}).
 * Provides floating labels to `textarea` elements.
 *
 * @example
 * ```ts-no-run
 * <textarea kendoTextArea></textarea>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class TextAreaDirective implements OnInit, OnDestroy, OnChanges, ControlValueAccessor {
    private renderer;
    private element;
    private zone;
    private changeDetector;
    private injector;
    elementClass: boolean;
    autofillClass: boolean;
    direction: string;
    /**
     * Fires each time the textarea value is changed.
     */
    valueChange: EventEmitter<any>;
    /**
     * Specifies if the `textarea` element will resize its height automatically
     * ([see example]({% slug overview_textarea %}#toc-auto-resizing)).
     *
     * @default false
     */
    autoSize: boolean;
    /**
     * Specifies the textarea value.
     */
    value: string;
    /**
     * @hidden
     */
    onFocus: EventEmitter<any>;
    /**
     * @hidden
     */
    onBlur: EventEmitter<any>;
    /**
     * @hidden
     */
    onValueChange: EventEmitter<any>;
    /**
     * @hidden
     */
    autoFillStart: EventEmitter<any>;
    /**
     * @hidden
     */
    autoFillEnd: EventEmitter<any>;
    id: string;
    private listeners;
    private inputSubscription;
    private initialHeight;
    private control;
    private resizeSubscription;
    constructor(renderer: Renderer2, element: ElementRef, zone: NgZone, changeDetector: ChangeDetectorRef, injector: Injector, rtl: boolean);
    /**
     * @hidden
     */
    writeValue(value: any): void;
    /**
     * @hidden
     */
    registerOnChange(fn: () => any): void;
    /**
     * @hidden
     */
    registerOnTouched(fn: () => any): void;
    /**
     * @hidden
     */
    setDisabledState(isDisabled: boolean): void;
    ngOnInit(): void;
    ngOnChanges(changes: any): void;
    ngOnDestroy(): void;
    private ngChange;
    private ngTouched;
    private elementValue;
    private setElementProperty;
    private resize;
    private handleInput;
    private handleFocus;
    private handleBlur;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TextAreaDirective, [null, null, null, null, null, { optional: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<TextAreaDirective, "textarea[kendoTextArea]", never, { "autoSize": "autoSize"; "value": "value"; }, { "valueChange": "valueChange"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dGFyZWEuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbInRleHRhcmVhLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBPbkRlc3Ryb3ksIFJlbmRlcmVyMiwgT25DaGFuZ2VzLCBPbkluaXQsIE5nWm9uZSwgQ2hhbmdlRGV0ZWN0b3JSZWYsIEluamVjdG9yIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb250cm9sVmFsdWVBY2Nlc3NvciB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbi8qKlxuICogUmVwcmVzZW50cyB0aGUgW0tlbmRvIFVJIFRleHRBcmVhIGRpcmVjdGl2ZSBmb3IgdGhlIElucHV0cyBjb21wb25lbnRzIGZvciBBbmd1bGFyXSh7JSBzbHVnIG92ZXJ2aWV3X3RleHRhcmVhICV9KS5cbiAqIFByb3ZpZGVzIGZsb2F0aW5nIGxhYmVscyB0byBgdGV4dGFyZWFgIGVsZW1lbnRzLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0cy1uby1ydW5cbiAqIDx0ZXh0YXJlYSBrZW5kb1RleHRBcmVhPjwvdGV4dGFyZWE+XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgVGV4dEFyZWFEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSwgT25DaGFuZ2VzLCBDb250cm9sVmFsdWVBY2Nlc3NvciB7XG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcbiAgICBwcml2YXRlIGVsZW1lbnQ7XG4gICAgcHJpdmF0ZSB6b25lO1xuICAgIHByaXZhdGUgY2hhbmdlRGV0ZWN0b3I7XG4gICAgcHJpdmF0ZSBpbmplY3RvcjtcbiAgICBlbGVtZW50Q2xhc3M6IGJvb2xlYW47XG4gICAgYXV0b2ZpbGxDbGFzczogYm9vbGVhbjtcbiAgICBkaXJlY3Rpb246IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBGaXJlcyBlYWNoIHRpbWUgdGhlIHRleHRhcmVhIHZhbHVlIGlzIGNoYW5nZWQuXG4gICAgICovXG4gICAgdmFsdWVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIC8qKlxuICAgICAqIFNwZWNpZmllcyBpZiB0aGUgYHRleHRhcmVhYCBlbGVtZW50IHdpbGwgcmVzaXplIGl0cyBoZWlnaHQgYXV0b21hdGljYWxseVxuICAgICAqIChbc2VlIGV4YW1wbGVdKHslIHNsdWcgb3ZlcnZpZXdfdGV4dGFyZWEgJX0jdG9jLWF1dG8tcmVzaXppbmcpKS5cbiAgICAgKlxuICAgICAqIEBkZWZhdWx0IGZhbHNlXG4gICAgICovXG4gICAgYXV0b1NpemU6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogU3BlY2lmaWVzIHRoZSB0ZXh0YXJlYSB2YWx1ZS5cbiAgICAgKi9cbiAgICB2YWx1ZTogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBvbkZvY3VzOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgb25CbHVyOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgb25WYWx1ZUNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGF1dG9GaWxsU3RhcnQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBhdXRvRmlsbEVuZDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgaWQ6IHN0cmluZztcbiAgICBwcml2YXRlIGxpc3RlbmVycztcbiAgICBwcml2YXRlIGlucHV0U3Vic2NyaXB0aW9uO1xuICAgIHByaXZhdGUgaW5pdGlhbEhlaWdodDtcbiAgICBwcml2YXRlIGNvbnRyb2w7XG4gICAgcHJpdmF0ZSByZXNpemVTdWJzY3JpcHRpb247XG4gICAgY29uc3RydWN0b3IocmVuZGVyZXI6IFJlbmRlcmVyMiwgZWxlbWVudDogRWxlbWVudFJlZiwgem9uZTogTmdab25lLCBjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWYsIGluamVjdG9yOiBJbmplY3RvciwgcnRsOiBib29sZWFuKTtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgd3JpdGVWYWx1ZSh2YWx1ZTogYW55KTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgcmVnaXN0ZXJPbkNoYW5nZShmbjogKCkgPT4gYW55KTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgcmVnaXN0ZXJPblRvdWNoZWQoZm46ICgpID0+IGFueSk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHNldERpc2FibGVkU3RhdGUoaXNEaXNhYmxlZDogYm9vbGVhbik6IHZvaWQ7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBhbnkpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBuZ0NoYW5nZTtcbiAgICBwcml2YXRlIG5nVG91Y2hlZDtcbiAgICBwcml2YXRlIGVsZW1lbnRWYWx1ZTtcbiAgICBwcml2YXRlIHNldEVsZW1lbnRQcm9wZXJ0eTtcbiAgICBwcml2YXRlIHJlc2l6ZTtcbiAgICBwcml2YXRlIGhhbmRsZUlucHV0O1xuICAgIHByaXZhdGUgaGFuZGxlRm9jdXM7XG4gICAgcHJpdmF0ZSBoYW5kbGVCbHVyO1xufVxuIl19