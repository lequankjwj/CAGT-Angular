/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class MaskingService {
    rules: {
        [key: string]: RegExp;
    };
    prompt: string;
    mask: string;
    promptPlaceholder: string;
    includeLiterals: boolean;
    maskTokens: any[];
    unmaskTokens: any[];
    rawTokens: any[];
    validationTokens: any[];
    update({ mask, prompt, promptPlaceholder, rules, includeLiterals }: any): void;
    validationValue(maskedValue?: string): string;
    rawValue(maskedValue?: string): string;
    /**
     * @hidden
     */
    maskRaw(rawValue?: string): string;
    maskInput(input: string, control: string, splitPoint: number): any;
    maskInRange(pasted: string, oldValue: string, start: number, end: number): any;
    private maskRemoved;
    private adjustPosition;
    private maskInserted;
    protected readonly maskTokenCreator: {
        [key: string]: Function;
    };
    protected readonly unmaskTokenCreator: {
        [key: string]: Function;
    };
    protected readonly rawTokenCreator: {
        [key: string]: Function;
    };
    protected readonly validationTokenCreator: {
        [key: string]: Function;
    };
    private tokenize;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MaskingService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<MaskingService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFza2luZy5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbIm1hc2tpbmcuc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBNYXNraW5nU2VydmljZSB7XG4gICAgcnVsZXM6IHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogUmVnRXhwO1xuICAgIH07XG4gICAgcHJvbXB0OiBzdHJpbmc7XG4gICAgbWFzazogc3RyaW5nO1xuICAgIHByb21wdFBsYWNlaG9sZGVyOiBzdHJpbmc7XG4gICAgaW5jbHVkZUxpdGVyYWxzOiBib29sZWFuO1xuICAgIG1hc2tUb2tlbnM6IGFueVtdO1xuICAgIHVubWFza1Rva2VuczogYW55W107XG4gICAgcmF3VG9rZW5zOiBhbnlbXTtcbiAgICB2YWxpZGF0aW9uVG9rZW5zOiBhbnlbXTtcbiAgICB1cGRhdGUoeyBtYXNrLCBwcm9tcHQsIHByb21wdFBsYWNlaG9sZGVyLCBydWxlcywgaW5jbHVkZUxpdGVyYWxzIH06IGFueSk6IHZvaWQ7XG4gICAgdmFsaWRhdGlvblZhbHVlKG1hc2tlZFZhbHVlPzogc3RyaW5nKTogc3RyaW5nO1xuICAgIHJhd1ZhbHVlKG1hc2tlZFZhbHVlPzogc3RyaW5nKTogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBtYXNrUmF3KHJhd1ZhbHVlPzogc3RyaW5nKTogc3RyaW5nO1xuICAgIG1hc2tJbnB1dChpbnB1dDogc3RyaW5nLCBjb250cm9sOiBzdHJpbmcsIHNwbGl0UG9pbnQ6IG51bWJlcik6IGFueTtcbiAgICBtYXNrSW5SYW5nZShwYXN0ZWQ6IHN0cmluZywgb2xkVmFsdWU6IHN0cmluZywgc3RhcnQ6IG51bWJlciwgZW5kOiBudW1iZXIpOiBhbnk7XG4gICAgcHJpdmF0ZSBtYXNrUmVtb3ZlZDtcbiAgICBwcml2YXRlIGFkanVzdFBvc2l0aW9uO1xuICAgIHByaXZhdGUgbWFza0luc2VydGVkO1xuICAgIHByb3RlY3RlZCByZWFkb25seSBtYXNrVG9rZW5DcmVhdG9yOiB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IEZ1bmN0aW9uO1xuICAgIH07XG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IHVubWFza1Rva2VuQ3JlYXRvcjoge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBGdW5jdGlvbjtcbiAgICB9O1xuICAgIHByb3RlY3RlZCByZWFkb25seSByYXdUb2tlbkNyZWF0b3I6IHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogRnVuY3Rpb247XG4gICAgfTtcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgdmFsaWRhdGlvblRva2VuQ3JlYXRvcjoge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBGdW5jdGlvbjtcbiAgICB9O1xuICAgIHByaXZhdGUgdG9rZW5pemU7XG59XG4iXX0=