/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { EventEmitter, ElementRef, OnDestroy, NgZone, ChangeDetectorRef } from '@angular/core';
import { Subscription } from 'rxjs';
import { PopupSettings } from './popup-settings';
import { FocusService } from './../focusable/focus.service';
import { KeyEvents } from './../navigation/key-events';
import { NavigationService } from './../navigation/navigation.service';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { Direction } from '../direction';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class ListButton implements OnDestroy {
    protected focusService: FocusService;
    protected navigationService: NavigationService;
    protected wrapperRef: ElementRef;
    private _zone;
    protected cdr: ChangeDetectorRef;
    protected _data: any;
    protected _open: boolean;
    protected _disabled: boolean;
    protected _active: boolean;
    protected _popupSettings: PopupSettings;
    protected listId: string;
    protected _isFocused: boolean;
    protected _itemClick: EventEmitter<any>;
    protected _blur: EventEmitter<any>;
    protected wrapper: HTMLElement;
    protected button: ElementRef;
    protected focusSubscription: Subscription;
    protected navigationSubscription: Subscription;
    protected enterPressSubscription: Subscription;
    protected enterUpSubscription: Subscription;
    protected openSubscription: Subscription;
    protected closeSubscription: Subscription;
    protected componentBlurredSubscription: Subscription;
    protected tabSubscription: Subscription;
    protected direction: Direction;
    protected focusFirstTimeout: any;
    protected blurTimeout: any;
    private localizationChangeSubscription;
    constructor(focusService: FocusService, navigationService: NavigationService, wrapperRef: ElementRef, _zone: NgZone, localization: LocalizationService, cdr: ChangeDetectorRef);
    readonly popupClasses: string;
    openState: boolean;
    /**
     * @hidden
     */
    togglePopupVisibility(): void;
    /**
     * @hidden
     */
    onItemClick(index: number): void;
    ngOnDestroy(): void;
    protected subscribeEvents(): void;
    protected subscribeListItemFocusEvent(): void;
    protected subscribeComponentBlurredEvent(): void;
    protected subscribeNavigationEvents(): void;
    protected enterHandler(): void;
    protected unsubscribeEvents(): void;
    protected unsubscribe(subscription: Subscription): void;
    /**
     * @hidden
     */
    keyDownHandler(event: any): void;
    /**
     * @hidden
     */
    keyPressHandler(event: any): void;
    /**
     * @hidden
     */
    keyUpHandler(event: any): void;
    /**
     * @hidden
     */
    keyHandler(event: any, keyEvent?: KeyEvents): void;
    protected emitItemClickHandler(index: number): void;
    protected focusFirstItem(): void;
    protected focusWrapper(): void;
    protected wrapperContains(element: any): boolean;
    protected blurWrapper(emit?: boolean): void;
    protected focusButton(): void;
    protected handleTab(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ListButton, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ListButton, never, never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1idXR0b24uZC50cyIsInNvdXJjZXMiOlsibGlzdC1idXR0b24uZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBFdmVudEVtaXR0ZXIsIEVsZW1lbnRSZWYsIE9uRGVzdHJveSwgTmdab25lLCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBQb3B1cFNldHRpbmdzIH0gZnJvbSAnLi9wb3B1cC1zZXR0aW5ncyc7XG5pbXBvcnQgeyBGb2N1c1NlcnZpY2UgfSBmcm9tICcuLy4uL2ZvY3VzYWJsZS9mb2N1cy5zZXJ2aWNlJztcbmltcG9ydCB7IEtleUV2ZW50cyB9IGZyb20gJy4vLi4vbmF2aWdhdGlvbi9rZXktZXZlbnRzJztcbmltcG9ydCB7IE5hdmlnYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi8uLi9uYXZpZ2F0aW9uL25hdmlnYXRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBMb2NhbGl6YXRpb25TZXJ2aWNlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItbDEwbic7XG5pbXBvcnQgeyBEaXJlY3Rpb24gfSBmcm9tICcuLi9kaXJlY3Rpb24nO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIExpc3RCdXR0b24gaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICAgIHByb3RlY3RlZCBmb2N1c1NlcnZpY2U6IEZvY3VzU2VydmljZTtcbiAgICBwcm90ZWN0ZWQgbmF2aWdhdGlvblNlcnZpY2U6IE5hdmlnYXRpb25TZXJ2aWNlO1xuICAgIHByb3RlY3RlZCB3cmFwcGVyUmVmOiBFbGVtZW50UmVmO1xuICAgIHByaXZhdGUgX3pvbmU7XG4gICAgcHJvdGVjdGVkIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWY7XG4gICAgcHJvdGVjdGVkIF9kYXRhOiBhbnk7XG4gICAgcHJvdGVjdGVkIF9vcGVuOiBib29sZWFuO1xuICAgIHByb3RlY3RlZCBfZGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgcHJvdGVjdGVkIF9hY3RpdmU6IGJvb2xlYW47XG4gICAgcHJvdGVjdGVkIF9wb3B1cFNldHRpbmdzOiBQb3B1cFNldHRpbmdzO1xuICAgIHByb3RlY3RlZCBsaXN0SWQ6IHN0cmluZztcbiAgICBwcm90ZWN0ZWQgX2lzRm9jdXNlZDogYm9vbGVhbjtcbiAgICBwcm90ZWN0ZWQgX2l0ZW1DbGljazogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgcHJvdGVjdGVkIF9ibHVyOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBwcm90ZWN0ZWQgd3JhcHBlcjogSFRNTEVsZW1lbnQ7XG4gICAgcHJvdGVjdGVkIGJ1dHRvbjogRWxlbWVudFJlZjtcbiAgICBwcm90ZWN0ZWQgZm9jdXNTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcbiAgICBwcm90ZWN0ZWQgbmF2aWdhdGlvblN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuICAgIHByb3RlY3RlZCBlbnRlclByZXNzU3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG4gICAgcHJvdGVjdGVkIGVudGVyVXBTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcbiAgICBwcm90ZWN0ZWQgb3BlblN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuICAgIHByb3RlY3RlZCBjbG9zZVN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuICAgIHByb3RlY3RlZCBjb21wb25lbnRCbHVycmVkU3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG4gICAgcHJvdGVjdGVkIHRhYlN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuICAgIHByb3RlY3RlZCBkaXJlY3Rpb246IERpcmVjdGlvbjtcbiAgICBwcm90ZWN0ZWQgZm9jdXNGaXJzdFRpbWVvdXQ6IGFueTtcbiAgICBwcm90ZWN0ZWQgYmx1clRpbWVvdXQ6IGFueTtcbiAgICBwcml2YXRlIGxvY2FsaXphdGlvbkNoYW5nZVN1YnNjcmlwdGlvbjtcbiAgICBjb25zdHJ1Y3Rvcihmb2N1c1NlcnZpY2U6IEZvY3VzU2VydmljZSwgbmF2aWdhdGlvblNlcnZpY2U6IE5hdmlnYXRpb25TZXJ2aWNlLCB3cmFwcGVyUmVmOiBFbGVtZW50UmVmLCBfem9uZTogTmdab25lLCBsb2NhbGl6YXRpb246IExvY2FsaXphdGlvblNlcnZpY2UsIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIHJlYWRvbmx5IHBvcHVwQ2xhc3Nlczogc3RyaW5nO1xuICAgIG9wZW5TdGF0ZTogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgdG9nZ2xlUG9wdXBWaXNpYmlsaXR5KCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG9uSXRlbUNsaWNrKGluZGV4OiBudW1iZXIpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIHN1YnNjcmliZUV2ZW50cygpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBzdWJzY3JpYmVMaXN0SXRlbUZvY3VzRXZlbnQoKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgc3Vic2NyaWJlQ29tcG9uZW50Qmx1cnJlZEV2ZW50KCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIHN1YnNjcmliZU5hdmlnYXRpb25FdmVudHMoKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgZW50ZXJIYW5kbGVyKCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIHVuc3Vic2NyaWJlRXZlbnRzKCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIHVuc3Vic2NyaWJlKHN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAga2V5RG93bkhhbmRsZXIoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGtleVByZXNzSGFuZGxlcihldmVudDogYW55KTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAga2V5VXBIYW5kbGVyKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBrZXlIYW5kbGVyKGV2ZW50OiBhbnksIGtleUV2ZW50PzogS2V5RXZlbnRzKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgZW1pdEl0ZW1DbGlja0hhbmRsZXIoaW5kZXg6IG51bWJlcik6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIGZvY3VzRmlyc3RJdGVtKCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIGZvY3VzV3JhcHBlcigpOiB2b2lkO1xuICAgIHByb3RlY3RlZCB3cmFwcGVyQ29udGFpbnMoZWxlbWVudDogYW55KTogYm9vbGVhbjtcbiAgICBwcm90ZWN0ZWQgYmx1cldyYXBwZXIoZW1pdD86IGJvb2xlYW4pOiB2b2lkO1xuICAgIHByb3RlY3RlZCBmb2N1c0J1dHRvbigpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBoYW5kbGVUYWIoKTogdm9pZDtcbn1cbiJdfQ==