/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { QueryList, EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { ChipComponent } from './chip.component';
import { ChipListSelection } from './models/selection';
import { ChipListRemoveEvent } from './chip-list-remove-event-args.interface';
import * as ɵngcc0 from '@angular/core';
export declare class ChipListComponent implements OnInit, OnDestroy {
    private localizationService;
    hostClass: boolean;
    /**
     * @hidden
     */
    direction: string;
    /**
     * Sets the selection mode of the ChipList.
     *
     * The available values are:
     * * `none` (default)
     * * `single`
     * * `multiple`
     */
    selection: ChipListSelection;
    /**
     * Fires each time when the ChipList selection is changed.
     */
    selectedChange: EventEmitter<any[]>;
    /**
     * Fires each time the user clicks on the remove icon of the Chip.
     */
    remove: EventEmitter<ChipListRemoveEvent>;
    chips: QueryList<ChipComponent>;
    readonly single: boolean;
    readonly multiple: boolean;
    private dynamicRTLSubscription;
    /**
     * @hidden
     */
    onClick($event: MouseEvent): void;
    constructor(localizationService: LocalizationService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    private selectedChips;
    /**
     * Updates the selection on click of a Chip. Emits events.
     */
    private setSelection;
    private clearSelection;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ChipListComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ChipListComponent, "kendo-chip-list", never, { "selection": "selection"; }, { "selectedChange": "selectedChange"; "remove": "remove"; }, ["chips"], ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hpcC1saXN0LmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJjaGlwLWxpc3QuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgUXVlcnlMaXN0LCBFdmVudEVtaXR0ZXIsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMb2NhbGl6YXRpb25TZXJ2aWNlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItbDEwbic7XG5pbXBvcnQgeyBDaGlwQ29tcG9uZW50IH0gZnJvbSAnLi9jaGlwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDaGlwTGlzdFNlbGVjdGlvbiB9IGZyb20gJy4vbW9kZWxzL3NlbGVjdGlvbic7XG5pbXBvcnQgeyBDaGlwTGlzdFJlbW92ZUV2ZW50IH0gZnJvbSAnLi9jaGlwLWxpc3QtcmVtb3ZlLWV2ZW50LWFyZ3MuaW50ZXJmYWNlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENoaXBMaXN0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgbG9jYWxpemF0aW9uU2VydmljZTtcbiAgICBob3N0Q2xhc3M6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGRpcmVjdGlvbjogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIHNlbGVjdGlvbiBtb2RlIG9mIHRoZSBDaGlwTGlzdC5cbiAgICAgKlxuICAgICAqIFRoZSBhdmFpbGFibGUgdmFsdWVzIGFyZTpcbiAgICAgKiAqIGBub25lYCAoZGVmYXVsdClcbiAgICAgKiAqIGBzaW5nbGVgXG4gICAgICogKiBgbXVsdGlwbGVgXG4gICAgICovXG4gICAgc2VsZWN0aW9uOiBDaGlwTGlzdFNlbGVjdGlvbjtcbiAgICAvKipcbiAgICAgKiBGaXJlcyBlYWNoIHRpbWUgd2hlbiB0aGUgQ2hpcExpc3Qgc2VsZWN0aW9uIGlzIGNoYW5nZWQuXG4gICAgICovXG4gICAgc2VsZWN0ZWRDaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnlbXT47XG4gICAgLyoqXG4gICAgICogRmlyZXMgZWFjaCB0aW1lIHRoZSB1c2VyIGNsaWNrcyBvbiB0aGUgcmVtb3ZlIGljb24gb2YgdGhlIENoaXAuXG4gICAgICovXG4gICAgcmVtb3ZlOiBFdmVudEVtaXR0ZXI8Q2hpcExpc3RSZW1vdmVFdmVudD47XG4gICAgY2hpcHM6IFF1ZXJ5TGlzdDxDaGlwQ29tcG9uZW50PjtcbiAgICByZWFkb25seSBzaW5nbGU6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgbXVsdGlwbGU6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBkeW5hbWljUlRMU3Vic2NyaXB0aW9uO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBvbkNsaWNrKCRldmVudDogTW91c2VFdmVudCk6IHZvaWQ7XG4gICAgY29uc3RydWN0b3IobG9jYWxpemF0aW9uU2VydmljZTogTG9jYWxpemF0aW9uU2VydmljZSk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIHByaXZhdGUgc2VsZWN0ZWRDaGlwcztcbiAgICAvKipcbiAgICAgKiBVcGRhdGVzIHRoZSBzZWxlY3Rpb24gb24gY2xpY2sgb2YgYSBDaGlwLiBFbWl0cyBldmVudHMuXG4gICAgICovXG4gICAgcHJpdmF0ZSBzZXRTZWxlY3Rpb247XG4gICAgcHJpdmF0ZSBjbGVhclNlbGVjdGlvbjtcbn1cbiJdfQ==