/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, OnChanges, OnInit, OnDestroy, Renderer2 } from '@angular/core';
import { NavigationService } from './navigation/navigation.service';
import { SelectionService } from './selection/selection.service';
/**
 * @hidden
 *
 * A directive which manages the expanded state of the TreeView.
 */
import * as ɵngcc0 from '@angular/core';
export declare class TreeViewItemContentDirective implements OnChanges, OnInit, OnDestroy {
    private element;
    private navigationService;
    private selectionService;
    private renderer;
    dataItem: any;
    index: string;
    initialSelection: boolean;
    isSelected: (item: object, index: string) => boolean;
    private subscriptions;
    constructor(element: ElementRef, navigationService: NavigationService, selectionService: SelectionService, renderer: Renderer2);
    ngOnChanges(changes: any): void;
    ngOnInit(): void;
    ngOnDestroy(): void;
    private updateItem;
    private updateSelection;
    private render;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TreeViewItemContentDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<TreeViewItemContentDirective, "[kendoTreeViewItemContent]", never, { "initialSelection": "initialSelection"; "isSelected": "isSelected"; "dataItem": "dataItem"; "index": "index"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZXZpZXctaXRlbS1jb250ZW50LmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJ0cmVldmlldy1pdGVtLWNvbnRlbnQuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgRWxlbWVudFJlZiwgT25DaGFuZ2VzLCBPbkluaXQsIE9uRGVzdHJveSwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOYXZpZ2F0aW9uU2VydmljZSB9IGZyb20gJy4vbmF2aWdhdGlvbi9uYXZpZ2F0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgU2VsZWN0aW9uU2VydmljZSB9IGZyb20gJy4vc2VsZWN0aW9uL3NlbGVjdGlvbi5zZXJ2aWNlJztcbi8qKlxuICogQGhpZGRlblxuICpcbiAqIEEgZGlyZWN0aXZlIHdoaWNoIG1hbmFnZXMgdGhlIGV4cGFuZGVkIHN0YXRlIG9mIHRoZSBUcmVlVmlldy5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgVHJlZVZpZXdJdGVtQ29udGVudERpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uQ2hhbmdlcywgT25Jbml0LCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgZWxlbWVudDtcbiAgICBwcml2YXRlIG5hdmlnYXRpb25TZXJ2aWNlO1xuICAgIHByaXZhdGUgc2VsZWN0aW9uU2VydmljZTtcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xuICAgIGRhdGFJdGVtOiBhbnk7XG4gICAgaW5kZXg6IHN0cmluZztcbiAgICBpbml0aWFsU2VsZWN0aW9uOiBib29sZWFuO1xuICAgIGlzU2VsZWN0ZWQ6IChpdGVtOiBvYmplY3QsIGluZGV4OiBzdHJpbmcpID0+IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBzdWJzY3JpcHRpb25zO1xuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnQ6IEVsZW1lbnRSZWYsIG5hdmlnYXRpb25TZXJ2aWNlOiBOYXZpZ2F0aW9uU2VydmljZSwgc2VsZWN0aW9uU2VydmljZTogU2VsZWN0aW9uU2VydmljZSwgcmVuZGVyZXI6IFJlbmRlcmVyMik7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogYW55KTogdm9pZDtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSB1cGRhdGVJdGVtO1xuICAgIHByaXZhdGUgdXBkYXRlU2VsZWN0aW9uO1xuICAgIHByaXZhdGUgcmVuZGVyO1xufVxuIl19