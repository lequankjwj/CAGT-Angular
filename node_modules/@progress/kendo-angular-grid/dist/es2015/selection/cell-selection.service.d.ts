/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { EventEmitter, OnDestroy } from '@angular/core';
import { DomEventsService } from '../common/dom-events.service';
import { LocalDataChangesService } from '../editing/local-data-changes.service';
import { CellSelectedFn, SelectionEvent, SelectableSettings, CellSelectionItem } from './types';
import { ColumnBase } from '../columns/column-base';
import { NavigationService } from '../navigation/navigation.service';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
declare type CellSelectionServiceSettings = {
    cellSelected: CellSelectedFn;
    selectable: boolean | SelectableSettings;
    view: {
        accessor: Function;
        at: Function;
        length: Number;
    };
    columns: ColumnBase[];
};
/**
 * @hidden
 */
export declare class CellSelectionService implements OnDestroy {
    private domEvents;
    private localDataChangesService?;
    private navigationService?;
    changes: EventEmitter<SelectionEvent>;
    mouseUpEvent: EventEmitter<any>;
    currentSelection: CellSelectionItem[];
    settings: CellSelectionServiceSettings;
    active: boolean;
    readonly enableMarquee: boolean;
    mouseDownEventArgs: any;
    mouseUpEventArgs: any;
    dragging: boolean;
    dragSelectDeselect: boolean;
    lastSelectionItem: CellSelectionItem;
    lastSelectionItemRowIndex: number;
    lastSelectionItemColIndex: number;
    private cellClickSubscription;
    private dataChangedSubscription;
    private mousedownSubscription;
    constructor(domEvents: DomEventsService, localDataChangesService?: LocalDataChangesService, navigationService?: NavigationService);
    init(settings: any): void;
    isCellSelected(item: any, col: any): boolean;
    handleClick(item: any, event: any): void;
    toggle(item: any): any;
    select(item: any): any;
    deselect(removedItem: any): void;
    selectRange(startRowIndex: number, startColIndex: number, endRowIndex: number, endColIndex: number): any;
    readonly options: SelectableSettings;
    ngOnDestroy(): void;
    addSubscriptions(): void;
    private getIterator;
    private removeSubscriptions;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CellSelectionService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<CellSelectionService>;
}
export {};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2VsbC1zZWxlY3Rpb24uc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJjZWxsLXNlbGVjdGlvbi5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBFdmVudEVtaXR0ZXIsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRG9tRXZlbnRzU2VydmljZSB9IGZyb20gJy4uL2NvbW1vbi9kb20tZXZlbnRzLnNlcnZpY2UnO1xuaW1wb3J0IHsgTG9jYWxEYXRhQ2hhbmdlc1NlcnZpY2UgfSBmcm9tICcuLi9lZGl0aW5nL2xvY2FsLWRhdGEtY2hhbmdlcy5zZXJ2aWNlJztcbmltcG9ydCB7IENlbGxTZWxlY3RlZEZuLCBTZWxlY3Rpb25FdmVudCwgU2VsZWN0YWJsZVNldHRpbmdzLCBDZWxsU2VsZWN0aW9uSXRlbSB9IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0IHsgQ29sdW1uQmFzZSB9IGZyb20gJy4uL2NvbHVtbnMvY29sdW1uLWJhc2UnO1xuaW1wb3J0IHsgTmF2aWdhdGlvblNlcnZpY2UgfSBmcm9tICcuLi9uYXZpZ2F0aW9uL25hdmlnYXRpb24uc2VydmljZSc7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZGVjbGFyZSB0eXBlIENlbGxTZWxlY3Rpb25TZXJ2aWNlU2V0dGluZ3MgPSB7XG4gICAgY2VsbFNlbGVjdGVkOiBDZWxsU2VsZWN0ZWRGbjtcbiAgICBzZWxlY3RhYmxlOiBib29sZWFuIHwgU2VsZWN0YWJsZVNldHRpbmdzO1xuICAgIHZpZXc6IHtcbiAgICAgICAgYWNjZXNzb3I6IEZ1bmN0aW9uO1xuICAgICAgICBhdDogRnVuY3Rpb247XG4gICAgICAgIGxlbmd0aDogTnVtYmVyO1xuICAgIH07XG4gICAgY29sdW1uczogQ29sdW1uQmFzZVtdO1xufTtcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDZWxsU2VsZWN0aW9uU2VydmljZSBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBkb21FdmVudHM7XG4gICAgcHJpdmF0ZSBsb2NhbERhdGFDaGFuZ2VzU2VydmljZT87XG4gICAgcHJpdmF0ZSBuYXZpZ2F0aW9uU2VydmljZT87XG4gICAgY2hhbmdlczogRXZlbnRFbWl0dGVyPFNlbGVjdGlvbkV2ZW50PjtcbiAgICBtb3VzZVVwRXZlbnQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGN1cnJlbnRTZWxlY3Rpb246IENlbGxTZWxlY3Rpb25JdGVtW107XG4gICAgc2V0dGluZ3M6IENlbGxTZWxlY3Rpb25TZXJ2aWNlU2V0dGluZ3M7XG4gICAgYWN0aXZlOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IGVuYWJsZU1hcnF1ZWU6IGJvb2xlYW47XG4gICAgbW91c2VEb3duRXZlbnRBcmdzOiBhbnk7XG4gICAgbW91c2VVcEV2ZW50QXJnczogYW55O1xuICAgIGRyYWdnaW5nOiBib29sZWFuO1xuICAgIGRyYWdTZWxlY3REZXNlbGVjdDogYm9vbGVhbjtcbiAgICBsYXN0U2VsZWN0aW9uSXRlbTogQ2VsbFNlbGVjdGlvbkl0ZW07XG4gICAgbGFzdFNlbGVjdGlvbkl0ZW1Sb3dJbmRleDogbnVtYmVyO1xuICAgIGxhc3RTZWxlY3Rpb25JdGVtQ29sSW5kZXg6IG51bWJlcjtcbiAgICBwcml2YXRlIGNlbGxDbGlja1N1YnNjcmlwdGlvbjtcbiAgICBwcml2YXRlIGRhdGFDaGFuZ2VkU3Vic2NyaXB0aW9uO1xuICAgIHByaXZhdGUgbW91c2Vkb3duU3Vic2NyaXB0aW9uO1xuICAgIGNvbnN0cnVjdG9yKGRvbUV2ZW50czogRG9tRXZlbnRzU2VydmljZSwgbG9jYWxEYXRhQ2hhbmdlc1NlcnZpY2U/OiBMb2NhbERhdGFDaGFuZ2VzU2VydmljZSwgbmF2aWdhdGlvblNlcnZpY2U/OiBOYXZpZ2F0aW9uU2VydmljZSk7XG4gICAgaW5pdChzZXR0aW5nczogYW55KTogdm9pZDtcbiAgICBpc0NlbGxTZWxlY3RlZChpdGVtOiBhbnksIGNvbDogYW55KTogYm9vbGVhbjtcbiAgICBoYW5kbGVDbGljayhpdGVtOiBhbnksIGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHRvZ2dsZShpdGVtOiBhbnkpOiBhbnk7XG4gICAgc2VsZWN0KGl0ZW06IGFueSk6IGFueTtcbiAgICBkZXNlbGVjdChyZW1vdmVkSXRlbTogYW55KTogdm9pZDtcbiAgICBzZWxlY3RSYW5nZShzdGFydFJvd0luZGV4OiBudW1iZXIsIHN0YXJ0Q29sSW5kZXg6IG51bWJlciwgZW5kUm93SW5kZXg6IG51bWJlciwgZW5kQ29sSW5kZXg6IG51bWJlcik6IGFueTtcbiAgICByZWFkb25seSBvcHRpb25zOiBTZWxlY3RhYmxlU2V0dGluZ3M7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBhZGRTdWJzY3JpcHRpb25zKCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBnZXRJdGVyYXRvcjtcbiAgICBwcml2YXRlIHJlbW92ZVN1YnNjcmlwdGlvbnM7XG59XG5leHBvcnQge307XG4iXX0=