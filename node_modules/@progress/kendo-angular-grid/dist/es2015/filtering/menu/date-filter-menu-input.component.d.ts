/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { OnDestroy } from '@angular/core';
import { FilterDescriptor, CompositeFilterDescriptor } from '@progress/kendo-data-query';
import { ColumnComponent } from "../../columns/column.component";
import { FilterService } from '../filter.service';
import { SinglePopupService } from '../../common/single-popup.service';
import { DatePickerComponent } from '@progress/kendo-angular-dateinputs';
import { CalendarView, DateInputFormatPlaceholder } from '@progress/kendo-angular-dateinputs';
import { LocalizationService } from '@progress/kendo-angular-l10n';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class DateFilterMenuInputComponent implements OnDestroy {
    private popupService;
    private localizationService;
    operators: Array<{
        text: string;
        value: string;
    }>;
    column: ColumnComponent;
    filter: CompositeFilterDescriptor;
    operator: string;
    currentFilter: FilterDescriptor;
    filterService: FilterService;
    format: string;
    formatPlaceholder: DateInputFormatPlaceholder;
    placeholder: string;
    min: Date;
    max: Date;
    activeView: CalendarView;
    bottomView: CalendarView;
    topView: CalendarView;
    weekNumber: boolean;
    private subscription;
    constructor(popupService: SinglePopupService, localizationService: LocalizationService);
    ngOnDestroy(): void;
    open(picker: DatePickerComponent): void;
    messageFor(key: string): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DateFilterMenuInputComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DateFilterMenuInputComponent, "kendo-grid-date-filter-menu-input", never, { "operators": "operators"; "column": "column"; "filter": "filter"; "operator": "operator"; "currentFilter": "currentFilter"; "filterService": "filterService"; "format": "format"; "formatPlaceholder": "formatPlaceholder"; "placeholder": "placeholder"; "min": "min"; "max": "max"; "activeView": "activeView"; "bottomView": "bottomView"; "topView": "topView"; "weekNumber": "weekNumber"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1maWx0ZXItbWVudS1pbnB1dC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiZGF0ZS1maWx0ZXItbWVudS1pbnB1dC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZpbHRlckRlc2NyaXB0b3IsIENvbXBvc2l0ZUZpbHRlckRlc2NyaXB0b3IgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tZGF0YS1xdWVyeSc7XG5pbXBvcnQgeyBDb2x1bW5Db21wb25lbnQgfSBmcm9tIFwiLi4vLi4vY29sdW1ucy9jb2x1bW4uY29tcG9uZW50XCI7XG5pbXBvcnQgeyBGaWx0ZXJTZXJ2aWNlIH0gZnJvbSAnLi4vZmlsdGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgU2luZ2xlUG9wdXBTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vY29tbW9uL3NpbmdsZS1wb3B1cC5zZXJ2aWNlJztcbmltcG9ydCB7IERhdGVQaWNrZXJDb21wb25lbnQgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1kYXRlaW5wdXRzJztcbmltcG9ydCB7IENhbGVuZGFyVmlldywgRGF0ZUlucHV0Rm9ybWF0UGxhY2Vob2xkZXIgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1kYXRlaW5wdXRzJztcbmltcG9ydCB7IExvY2FsaXphdGlvblNlcnZpY2UgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1sMTBuJztcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEYXRlRmlsdGVyTWVudUlucHV0Q29tcG9uZW50IGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIHBvcHVwU2VydmljZTtcbiAgICBwcml2YXRlIGxvY2FsaXphdGlvblNlcnZpY2U7XG4gICAgb3BlcmF0b3JzOiBBcnJheTx7XG4gICAgICAgIHRleHQ6IHN0cmluZztcbiAgICAgICAgdmFsdWU6IHN0cmluZztcbiAgICB9PjtcbiAgICBjb2x1bW46IENvbHVtbkNvbXBvbmVudDtcbiAgICBmaWx0ZXI6IENvbXBvc2l0ZUZpbHRlckRlc2NyaXB0b3I7XG4gICAgb3BlcmF0b3I6IHN0cmluZztcbiAgICBjdXJyZW50RmlsdGVyOiBGaWx0ZXJEZXNjcmlwdG9yO1xuICAgIGZpbHRlclNlcnZpY2U6IEZpbHRlclNlcnZpY2U7XG4gICAgZm9ybWF0OiBzdHJpbmc7XG4gICAgZm9ybWF0UGxhY2Vob2xkZXI6IERhdGVJbnB1dEZvcm1hdFBsYWNlaG9sZGVyO1xuICAgIHBsYWNlaG9sZGVyOiBzdHJpbmc7XG4gICAgbWluOiBEYXRlO1xuICAgIG1heDogRGF0ZTtcbiAgICBhY3RpdmVWaWV3OiBDYWxlbmRhclZpZXc7XG4gICAgYm90dG9tVmlldzogQ2FsZW5kYXJWaWV3O1xuICAgIHRvcFZpZXc6IENhbGVuZGFyVmlldztcbiAgICB3ZWVrTnVtYmVyOiBib29sZWFuO1xuICAgIHByaXZhdGUgc3Vic2NyaXB0aW9uO1xuICAgIGNvbnN0cnVjdG9yKHBvcHVwU2VydmljZTogU2luZ2xlUG9wdXBTZXJ2aWNlLCBsb2NhbGl6YXRpb25TZXJ2aWNlOiBMb2NhbGl6YXRpb25TZXJ2aWNlKTtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIG9wZW4ocGlja2VyOiBEYXRlUGlja2VyQ29tcG9uZW50KTogdm9pZDtcbiAgICBtZXNzYWdlRm9yKGtleTogc3RyaW5nKTogc3RyaW5nO1xufVxuIl19