/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Type, ViewContainerRef, OnInit, OnDestroy, OnChanges, ComponentRef, ComponentFactoryResolver, SimpleChange } from '@angular/core';
import { ColumnComponent } from '../columns/column.component';
import { CompositeFilterDescriptor } from '@progress/kendo-data-query';
import { FilterComponent } from './filter-component.interface';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare type Context = {
    filter: CompositeFilterDescriptor;
    column: ColumnComponent;
};
/**
 * @hidden
 */
export declare abstract class FilterHostDirective implements OnInit, OnDestroy, OnChanges {
    private host;
    private resolver;
    column: ColumnComponent;
    filter: CompositeFilterDescriptor;
    protected component: ComponentRef<FilterComponent>;
    constructor(host: ViewContainerRef, resolver: ComponentFactoryResolver);
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: {
        [propertyName: string]: SimpleChange;
    }): void;
    protected abstract componentType(): Type<FilterComponent>;
    protected initComponent({ column, filter }: Context): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FilterHostDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<FilterHostDirective, never, never, { "column": "column"; "filter": "filter"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLWhvc3QuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbImZpbHRlci1ob3N0LmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IFR5cGUsIFZpZXdDb250YWluZXJSZWYsIE9uSW5pdCwgT25EZXN0cm95LCBPbkNoYW5nZXMsIENvbXBvbmVudFJlZiwgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBTaW1wbGVDaGFuZ2UgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbHVtbkNvbXBvbmVudCB9IGZyb20gJy4uL2NvbHVtbnMvY29sdW1uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb21wb3NpdGVGaWx0ZXJEZXNjcmlwdG9yIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWRhdGEtcXVlcnknO1xuaW1wb3J0IHsgRmlsdGVyQ29tcG9uZW50IH0gZnJvbSAnLi9maWx0ZXItY29tcG9uZW50LmludGVyZmFjZSc7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgdHlwZSBDb250ZXh0ID0ge1xuICAgIGZpbHRlcjogQ29tcG9zaXRlRmlsdGVyRGVzY3JpcHRvcjtcbiAgICBjb2x1bW46IENvbHVtbkNvbXBvbmVudDtcbn07XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgYWJzdHJhY3QgY2xhc3MgRmlsdGVySG9zdERpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95LCBPbkNoYW5nZXMge1xuICAgIHByaXZhdGUgaG9zdDtcbiAgICBwcml2YXRlIHJlc29sdmVyO1xuICAgIGNvbHVtbjogQ29sdW1uQ29tcG9uZW50O1xuICAgIGZpbHRlcjogQ29tcG9zaXRlRmlsdGVyRGVzY3JpcHRvcjtcbiAgICBwcm90ZWN0ZWQgY29tcG9uZW50OiBDb21wb25lbnRSZWY8RmlsdGVyQ29tcG9uZW50PjtcbiAgICBjb25zdHJ1Y3Rvcihob3N0OiBWaWV3Q29udGFpbmVyUmVmLCByZXNvbHZlcjogQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczoge1xuICAgICAgICBbcHJvcGVydHlOYW1lOiBzdHJpbmddOiBTaW1wbGVDaGFuZ2U7XG4gICAgfSk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIGFic3RyYWN0IGNvbXBvbmVudFR5cGUoKTogVHlwZTxGaWx0ZXJDb21wb25lbnQ+O1xuICAgIHByb3RlY3RlZCBpbml0Q29tcG9uZW50KHsgY29sdW1uLCBmaWx0ZXIgfTogQ29udGV4dCk6IHZvaWQ7XG59XG4iXX0=