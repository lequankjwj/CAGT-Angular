/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { EventEmitter, NgZone } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { Observable } from 'rxjs';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare type Entity = {
    index: number;
    group: any;
};
/**
 * @hidden
 */
export declare type CommandAction = 'edit' | 'remove' | 'cancel' | 'save' | 'add';
/**
 * @hidden
 */
export declare type CommandEvent = {
    action: CommandAction;
    formGroup?: FormGroup;
    isNew?: boolean;
    rowIndex?: number;
};
/**
 * @hidden
 */
export declare class EditService {
    ngZone: NgZone;
    changes: EventEmitter<CommandEvent>;
    changed: Observable<any>;
    private editedIndices;
    private newItemGroup;
    private keepEditCell;
    private keepCellTimeout;
    private column;
    private closingCell;
    private changedSource;
    constructor(ngZone: NgZone);
    editRow(index: number, group?: any): void;
    addRow(group: any): void;
    editCell(rowIndex: number, column: any, group?: any): void;
    isEditing(): boolean;
    isEditingCell(): boolean;
    readonly hasNewItem: boolean;
    readonly newDataItem: any;
    close(index?: number): void;
    closeCell(originalEvent?: any): boolean;
    cancelCell(): void;
    shouldCloseCell(): boolean;
    preventCellClose(): void;
    context(index?: number): Entity;
    columnContext(index: number, column: any): Entity;
    isEdited(index: number): boolean;
    hasEdited(index: number): boolean;
    isEditedColumn(index: number, column: any): boolean;
    beginEdit(rowIndex: number): void;
    beginAdd(): void;
    endEdit(rowIndex?: number): void;
    save(rowIndex?: number): void;
    remove(rowIndex: number): void;
    private findByIndex;
    private onChanged;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<EditService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<EditService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRpdC5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbImVkaXQuc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBOZ1pvbmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSB0eXBlIEVudGl0eSA9IHtcbiAgICBpbmRleDogbnVtYmVyO1xuICAgIGdyb3VwOiBhbnk7XG59O1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIHR5cGUgQ29tbWFuZEFjdGlvbiA9ICdlZGl0JyB8ICdyZW1vdmUnIHwgJ2NhbmNlbCcgfCAnc2F2ZScgfCAnYWRkJztcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSB0eXBlIENvbW1hbmRFdmVudCA9IHtcbiAgICBhY3Rpb246IENvbW1hbmRBY3Rpb247XG4gICAgZm9ybUdyb3VwPzogRm9ybUdyb3VwO1xuICAgIGlzTmV3PzogYm9vbGVhbjtcbiAgICByb3dJbmRleD86IG51bWJlcjtcbn07XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRWRpdFNlcnZpY2Uge1xuICAgIG5nWm9uZTogTmdab25lO1xuICAgIGNoYW5nZXM6IEV2ZW50RW1pdHRlcjxDb21tYW5kRXZlbnQ+O1xuICAgIGNoYW5nZWQ6IE9ic2VydmFibGU8YW55PjtcbiAgICBwcml2YXRlIGVkaXRlZEluZGljZXM7XG4gICAgcHJpdmF0ZSBuZXdJdGVtR3JvdXA7XG4gICAgcHJpdmF0ZSBrZWVwRWRpdENlbGw7XG4gICAgcHJpdmF0ZSBrZWVwQ2VsbFRpbWVvdXQ7XG4gICAgcHJpdmF0ZSBjb2x1bW47XG4gICAgcHJpdmF0ZSBjbG9zaW5nQ2VsbDtcbiAgICBwcml2YXRlIGNoYW5nZWRTb3VyY2U7XG4gICAgY29uc3RydWN0b3Iobmdab25lOiBOZ1pvbmUpO1xuICAgIGVkaXRSb3coaW5kZXg6IG51bWJlciwgZ3JvdXA/OiBhbnkpOiB2b2lkO1xuICAgIGFkZFJvdyhncm91cDogYW55KTogdm9pZDtcbiAgICBlZGl0Q2VsbChyb3dJbmRleDogbnVtYmVyLCBjb2x1bW46IGFueSwgZ3JvdXA/OiBhbnkpOiB2b2lkO1xuICAgIGlzRWRpdGluZygpOiBib29sZWFuO1xuICAgIGlzRWRpdGluZ0NlbGwoKTogYm9vbGVhbjtcbiAgICByZWFkb25seSBoYXNOZXdJdGVtOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IG5ld0RhdGFJdGVtOiBhbnk7XG4gICAgY2xvc2UoaW5kZXg/OiBudW1iZXIpOiB2b2lkO1xuICAgIGNsb3NlQ2VsbChvcmlnaW5hbEV2ZW50PzogYW55KTogYm9vbGVhbjtcbiAgICBjYW5jZWxDZWxsKCk6IHZvaWQ7XG4gICAgc2hvdWxkQ2xvc2VDZWxsKCk6IGJvb2xlYW47XG4gICAgcHJldmVudENlbGxDbG9zZSgpOiB2b2lkO1xuICAgIGNvbnRleHQoaW5kZXg/OiBudW1iZXIpOiBFbnRpdHk7XG4gICAgY29sdW1uQ29udGV4dChpbmRleDogbnVtYmVyLCBjb2x1bW46IGFueSk6IEVudGl0eTtcbiAgICBpc0VkaXRlZChpbmRleDogbnVtYmVyKTogYm9vbGVhbjtcbiAgICBoYXNFZGl0ZWQoaW5kZXg6IG51bWJlcik6IGJvb2xlYW47XG4gICAgaXNFZGl0ZWRDb2x1bW4oaW5kZXg6IG51bWJlciwgY29sdW1uOiBhbnkpOiBib29sZWFuO1xuICAgIGJlZ2luRWRpdChyb3dJbmRleDogbnVtYmVyKTogdm9pZDtcbiAgICBiZWdpbkFkZCgpOiB2b2lkO1xuICAgIGVuZEVkaXQocm93SW5kZXg/OiBudW1iZXIpOiB2b2lkO1xuICAgIHNhdmUocm93SW5kZXg/OiBudW1iZXIpOiB2b2lkO1xuICAgIHJlbW92ZShyb3dJbmRleDogbnVtYmVyKTogdm9pZDtcbiAgICBwcml2YXRlIGZpbmRCeUluZGV4O1xuICAgIHByaXZhdGUgb25DaGFuZ2VkO1xufVxuIl19