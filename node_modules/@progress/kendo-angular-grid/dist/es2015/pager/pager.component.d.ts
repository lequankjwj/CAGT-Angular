/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { EventEmitter, OnChanges, SimpleChanges, OnInit, OnDestroy } from '@angular/core';
import { PagerSettings } from './pager-settings';
import { PageChangeEvent } from '../data/change-event-args.interface';
import { PagerTemplateDirective } from './pager-template.directive';
import { PagerContextService } from './pager-context.service';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class PagerComponent implements OnChanges, OnInit, OnDestroy {
    private pagerContext;
    total: number;
    skip: number;
    pageSize: number;
    options: PagerSettings | boolean;
    template: PagerTemplateDirective;
    pageChange: EventEmitter<PageChangeEvent>;
    readonly pagerWrapClass: boolean;
    readonly gridPagerClass: boolean;
    readonly widgetClass: boolean;
    settings: PagerSettings;
    readonly totalPages: number;
    readonly currentPage: number;
    readonly templateContext: any;
    private pageChangeSubscription;
    private _templateContext;
    constructor(pagerContext: PagerContextService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    changePage(event: PageChangeEvent): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PagerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PagerComponent, "kendo-pager", never, { "total": "total"; "skip": "skip"; "options": "options"; "pageSize": "pageSize"; "template": "template"; }, { "pageChange": "pageChange"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZXIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBhZ2VyLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBFdmVudEVtaXR0ZXIsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcywgT25Jbml0LCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBhZ2VyU2V0dGluZ3MgfSBmcm9tICcuL3BhZ2VyLXNldHRpbmdzJztcbmltcG9ydCB7IFBhZ2VDaGFuZ2VFdmVudCB9IGZyb20gJy4uL2RhdGEvY2hhbmdlLWV2ZW50LWFyZ3MuaW50ZXJmYWNlJztcbmltcG9ydCB7IFBhZ2VyVGVtcGxhdGVEaXJlY3RpdmUgfSBmcm9tICcuL3BhZ2VyLXRlbXBsYXRlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBQYWdlckNvbnRleHRTZXJ2aWNlIH0gZnJvbSAnLi9wYWdlci1jb250ZXh0LnNlcnZpY2UnO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBhZ2VyQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzLCBPbkluaXQsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBwYWdlckNvbnRleHQ7XG4gICAgdG90YWw6IG51bWJlcjtcbiAgICBza2lwOiBudW1iZXI7XG4gICAgcGFnZVNpemU6IG51bWJlcjtcbiAgICBvcHRpb25zOiBQYWdlclNldHRpbmdzIHwgYm9vbGVhbjtcbiAgICB0ZW1wbGF0ZTogUGFnZXJUZW1wbGF0ZURpcmVjdGl2ZTtcbiAgICBwYWdlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8UGFnZUNoYW5nZUV2ZW50PjtcbiAgICByZWFkb25seSBwYWdlcldyYXBDbGFzczogYm9vbGVhbjtcbiAgICByZWFkb25seSBncmlkUGFnZXJDbGFzczogYm9vbGVhbjtcbiAgICByZWFkb25seSB3aWRnZXRDbGFzczogYm9vbGVhbjtcbiAgICBzZXR0aW5nczogUGFnZXJTZXR0aW5ncztcbiAgICByZWFkb25seSB0b3RhbFBhZ2VzOiBudW1iZXI7XG4gICAgcmVhZG9ubHkgY3VycmVudFBhZ2U6IG51bWJlcjtcbiAgICByZWFkb25seSB0ZW1wbGF0ZUNvbnRleHQ6IGFueTtcbiAgICBwcml2YXRlIHBhZ2VDaGFuZ2VTdWJzY3JpcHRpb247XG4gICAgcHJpdmF0ZSBfdGVtcGxhdGVDb250ZXh0O1xuICAgIGNvbnN0cnVjdG9yKHBhZ2VyQ29udGV4dDogUGFnZXJDb250ZXh0U2VydmljZSk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIGNoYW5nZVBhZ2UoZXZlbnQ6IFBhZ2VDaGFuZ2VFdmVudCk6IHZvaWQ7XG59XG4iXX0=