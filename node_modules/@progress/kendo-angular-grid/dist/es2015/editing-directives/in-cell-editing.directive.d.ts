/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { FormGroup } from '@angular/forms';
import { EditingDirectiveBase } from './editing-directive-base';
import { GridComponent } from '../grid.component';
import { LocalDataChangesService } from '../editing/local-data-changes.service';
import { CreateFormGroupArgs } from './create-form-group-args.interface';
/**
 * A directive which encapsulates the editing operations of the Grid when using the in-cell
 * editing with Reactive Forms ([see example]({% slug editing_directives_grid %}#toc-the-incell-directive)).
 */
import * as ɵngcc0 from '@angular/core';
export declare class InCellEditingDirective extends EditingDirectiveBase {
    protected grid: GridComponent;
    protected localDataChangesService: LocalDataChangesService;
    /**
     * The function that creates the `FormGroup` for the edited model.
     */
    createFormGroup: (args: CreateFormGroupArgs) => FormGroup;
    constructor(grid: GridComponent, localDataChangesService: LocalDataChangesService);
    protected createModel(args: any): any;
    protected saveModel({ dataItem, formGroup, isNew }: any): any;
    /**
     * @hidden
     */
    ngOnInit(): void;
    protected removeHandler(args: any): void;
    protected cellClickHandler(args: any): void;
    protected cellCloseHandler(args: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<InCellEditingDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<InCellEditingDirective, "[kendoGridInCellEditing]", never, { "createFormGroup": "kendoGridInCellEditing"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW4tY2VsbC1lZGl0aW5nLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJpbi1jZWxsLWVkaXRpbmcuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBFZGl0aW5nRGlyZWN0aXZlQmFzZSB9IGZyb20gJy4vZWRpdGluZy1kaXJlY3RpdmUtYmFzZSc7XG5pbXBvcnQgeyBHcmlkQ29tcG9uZW50IH0gZnJvbSAnLi4vZ3JpZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTG9jYWxEYXRhQ2hhbmdlc1NlcnZpY2UgfSBmcm9tICcuLi9lZGl0aW5nL2xvY2FsLWRhdGEtY2hhbmdlcy5zZXJ2aWNlJztcbmltcG9ydCB7IENyZWF0ZUZvcm1Hcm91cEFyZ3MgfSBmcm9tICcuL2NyZWF0ZS1mb3JtLWdyb3VwLWFyZ3MuaW50ZXJmYWNlJztcbi8qKlxuICogQSBkaXJlY3RpdmUgd2hpY2ggZW5jYXBzdWxhdGVzIHRoZSBlZGl0aW5nIG9wZXJhdGlvbnMgb2YgdGhlIEdyaWQgd2hlbiB1c2luZyB0aGUgaW4tY2VsbFxuICogZWRpdGluZyB3aXRoIFJlYWN0aXZlIEZvcm1zIChbc2VlIGV4YW1wbGVdKHslIHNsdWcgZWRpdGluZ19kaXJlY3RpdmVzX2dyaWQgJX0jdG9jLXRoZS1pbmNlbGwtZGlyZWN0aXZlKSkuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEluQ2VsbEVkaXRpbmdEaXJlY3RpdmUgZXh0ZW5kcyBFZGl0aW5nRGlyZWN0aXZlQmFzZSB7XG4gICAgcHJvdGVjdGVkIGdyaWQ6IEdyaWRDb21wb25lbnQ7XG4gICAgcHJvdGVjdGVkIGxvY2FsRGF0YUNoYW5nZXNTZXJ2aWNlOiBMb2NhbERhdGFDaGFuZ2VzU2VydmljZTtcbiAgICAvKipcbiAgICAgKiBUaGUgZnVuY3Rpb24gdGhhdCBjcmVhdGVzIHRoZSBgRm9ybUdyb3VwYCBmb3IgdGhlIGVkaXRlZCBtb2RlbC5cbiAgICAgKi9cbiAgICBjcmVhdGVGb3JtR3JvdXA6IChhcmdzOiBDcmVhdGVGb3JtR3JvdXBBcmdzKSA9PiBGb3JtR3JvdXA7XG4gICAgY29uc3RydWN0b3IoZ3JpZDogR3JpZENvbXBvbmVudCwgbG9jYWxEYXRhQ2hhbmdlc1NlcnZpY2U6IExvY2FsRGF0YUNoYW5nZXNTZXJ2aWNlKTtcbiAgICBwcm90ZWN0ZWQgY3JlYXRlTW9kZWwoYXJnczogYW55KTogYW55O1xuICAgIHByb3RlY3RlZCBzYXZlTW9kZWwoeyBkYXRhSXRlbSwgZm9ybUdyb3VwLCBpc05ldyB9OiBhbnkpOiBhbnk7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIHJlbW92ZUhhbmRsZXIoYXJnczogYW55KTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgY2VsbENsaWNrSGFuZGxlcihhcmdzOiBhbnkpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBjZWxsQ2xvc2VIYW5kbGVyKGFyZ3M6IGFueSk6IHZvaWQ7XG59XG4iXX0=