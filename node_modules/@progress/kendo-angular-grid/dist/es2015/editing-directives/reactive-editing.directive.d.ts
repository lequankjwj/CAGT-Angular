/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { FormGroup } from '@angular/forms';
import { RowEditingDirectiveBase } from './row-editing-directive-base';
import { GridComponent } from '../grid.component';
import { LocalDataChangesService } from '../editing/local-data-changes.service';
import { CreateFormGroupArgs } from './create-form-group-args.interface';
/**
 * A directive which encapsulates the editing operations of the Grid when using the
 * Reactive Forms ([see example]({% slug editing_directives_grid %}#toc-the-reactive-directive)).
 */
import * as ɵngcc0 from '@angular/core';
export declare class ReactiveEditingDirective extends RowEditingDirectiveBase {
    protected grid: GridComponent;
    protected localDataChangesService: LocalDataChangesService;
    /**
     * The function that creates the `FormGroup` for the edited model.
     */
    createFormGroup: (args: CreateFormGroupArgs) => FormGroup;
    constructor(grid: GridComponent, localDataChangesService: LocalDataChangesService);
    protected createModel(args: any): any;
    protected saveModel({ dataItem, formGroup, isNew }: any): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ReactiveEditingDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ReactiveEditingDirective, "[kendoGridReactiveEditing]", never, { "createFormGroup": "kendoGridReactiveEditing"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVhY3RpdmUtZWRpdGluZy5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsicmVhY3RpdmUtZWRpdGluZy5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBSb3dFZGl0aW5nRGlyZWN0aXZlQmFzZSB9IGZyb20gJy4vcm93LWVkaXRpbmctZGlyZWN0aXZlLWJhc2UnO1xuaW1wb3J0IHsgR3JpZENvbXBvbmVudCB9IGZyb20gJy4uL2dyaWQuY29tcG9uZW50JztcbmltcG9ydCB7IExvY2FsRGF0YUNoYW5nZXNTZXJ2aWNlIH0gZnJvbSAnLi4vZWRpdGluZy9sb2NhbC1kYXRhLWNoYW5nZXMuc2VydmljZSc7XG5pbXBvcnQgeyBDcmVhdGVGb3JtR3JvdXBBcmdzIH0gZnJvbSAnLi9jcmVhdGUtZm9ybS1ncm91cC1hcmdzLmludGVyZmFjZSc7XG4vKipcbiAqIEEgZGlyZWN0aXZlIHdoaWNoIGVuY2Fwc3VsYXRlcyB0aGUgZWRpdGluZyBvcGVyYXRpb25zIG9mIHRoZSBHcmlkIHdoZW4gdXNpbmcgdGhlXG4gKiBSZWFjdGl2ZSBGb3JtcyAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIGVkaXRpbmdfZGlyZWN0aXZlc19ncmlkICV9I3RvYy10aGUtcmVhY3RpdmUtZGlyZWN0aXZlKSkuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFJlYWN0aXZlRWRpdGluZ0RpcmVjdGl2ZSBleHRlbmRzIFJvd0VkaXRpbmdEaXJlY3RpdmVCYXNlIHtcbiAgICBwcm90ZWN0ZWQgZ3JpZDogR3JpZENvbXBvbmVudDtcbiAgICBwcm90ZWN0ZWQgbG9jYWxEYXRhQ2hhbmdlc1NlcnZpY2U6IExvY2FsRGF0YUNoYW5nZXNTZXJ2aWNlO1xuICAgIC8qKlxuICAgICAqIFRoZSBmdW5jdGlvbiB0aGF0IGNyZWF0ZXMgdGhlIGBGb3JtR3JvdXBgIGZvciB0aGUgZWRpdGVkIG1vZGVsLlxuICAgICAqL1xuICAgIGNyZWF0ZUZvcm1Hcm91cDogKGFyZ3M6IENyZWF0ZUZvcm1Hcm91cEFyZ3MpID0+IEZvcm1Hcm91cDtcbiAgICBjb25zdHJ1Y3RvcihncmlkOiBHcmlkQ29tcG9uZW50LCBsb2NhbERhdGFDaGFuZ2VzU2VydmljZTogTG9jYWxEYXRhQ2hhbmdlc1NlcnZpY2UpO1xuICAgIHByb3RlY3RlZCBjcmVhdGVNb2RlbChhcmdzOiBhbnkpOiBhbnk7XG4gICAgcHJvdGVjdGVkIHNhdmVNb2RlbCh7IGRhdGFJdGVtLCBmb3JtR3JvdXAsIGlzTmV3IH06IGFueSk6IGFueTtcbn1cbiJdfQ==