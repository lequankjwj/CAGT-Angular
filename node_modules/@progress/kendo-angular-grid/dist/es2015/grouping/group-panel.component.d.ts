/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { EventEmitter, OnDestroy, QueryList, OnInit, DoCheck, ChangeDetectorRef } from '@angular/core';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { GroupDescriptor } from '@progress/kendo-data-query';
import { GroupInfoService } from './group-info.service';
import { DropTargetDirective } from '../dragdrop/drop-target.directive';
import { DragHintService } from '../dragdrop/drag-hint.service';
import { DropCueService } from '../dragdrop/drop-cue.service';
import { DragAndDropContext } from '../dragdrop/context-types';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class GroupPanelComponent implements OnDestroy, OnInit, DoCheck {
    private hint;
    private cue;
    groupInfoService: GroupInfoService;
    private localization;
    private cd;
    change: EventEmitter<GroupDescriptor[]>;
    readonly groupHeaderClass: boolean;
    text: string;
    groups: GroupDescriptor[];
    dropTargets: QueryList<DropTargetDirective>;
    groupTitles: string[];
    private emptyText;
    private subscription;
    private targetSubscription;
    constructor(hint: DragHintService, cue: DropCueService, groupInfoService: GroupInfoService, localization: LocalizationService, cd: ChangeDetectorRef);
    ngAfterViewInit(): void;
    ngOnInit(): void;
    ngDoCheck(): void;
    ngOnDestroy(): void;
    directionChange(group: GroupDescriptor): void;
    insert(field: string, index: number): void;
    remove(group: GroupDescriptor): void;
    canDrop(draggable: DragAndDropContext, target: DragAndDropContext): boolean;
    private attachTargets;
    private enter;
    private leave;
    private drop;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<GroupPanelComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<GroupPanelComponent, "kendo-grid-group-panel", never, { "groups": "groups"; "text": "text"; }, { "change": "change"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JvdXAtcGFuZWwuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImdyb3VwLXBhbmVsLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBFdmVudEVtaXR0ZXIsIE9uRGVzdHJveSwgUXVlcnlMaXN0LCBPbkluaXQsIERvQ2hlY2ssIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMb2NhbGl6YXRpb25TZXJ2aWNlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItbDEwbic7XG5pbXBvcnQgeyBHcm91cERlc2NyaXB0b3IgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tZGF0YS1xdWVyeSc7XG5pbXBvcnQgeyBHcm91cEluZm9TZXJ2aWNlIH0gZnJvbSAnLi9ncm91cC1pbmZvLnNlcnZpY2UnO1xuaW1wb3J0IHsgRHJvcFRhcmdldERpcmVjdGl2ZSB9IGZyb20gJy4uL2RyYWdkcm9wL2Ryb3AtdGFyZ2V0LmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBEcmFnSGludFNlcnZpY2UgfSBmcm9tICcuLi9kcmFnZHJvcC9kcmFnLWhpbnQuc2VydmljZSc7XG5pbXBvcnQgeyBEcm9wQ3VlU2VydmljZSB9IGZyb20gJy4uL2RyYWdkcm9wL2Ryb3AtY3VlLnNlcnZpY2UnO1xuaW1wb3J0IHsgRHJhZ0FuZERyb3BDb250ZXh0IH0gZnJvbSAnLi4vZHJhZ2Ryb3AvY29udGV4dC10eXBlcyc7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgR3JvdXBQYW5lbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSwgT25Jbml0LCBEb0NoZWNrIHtcbiAgICBwcml2YXRlIGhpbnQ7XG4gICAgcHJpdmF0ZSBjdWU7XG4gICAgZ3JvdXBJbmZvU2VydmljZTogR3JvdXBJbmZvU2VydmljZTtcbiAgICBwcml2YXRlIGxvY2FsaXphdGlvbjtcbiAgICBwcml2YXRlIGNkO1xuICAgIGNoYW5nZTogRXZlbnRFbWl0dGVyPEdyb3VwRGVzY3JpcHRvcltdPjtcbiAgICByZWFkb25seSBncm91cEhlYWRlckNsYXNzOiBib29sZWFuO1xuICAgIHRleHQ6IHN0cmluZztcbiAgICBncm91cHM6IEdyb3VwRGVzY3JpcHRvcltdO1xuICAgIGRyb3BUYXJnZXRzOiBRdWVyeUxpc3Q8RHJvcFRhcmdldERpcmVjdGl2ZT47XG4gICAgZ3JvdXBUaXRsZXM6IHN0cmluZ1tdO1xuICAgIHByaXZhdGUgZW1wdHlUZXh0O1xuICAgIHByaXZhdGUgc3Vic2NyaXB0aW9uO1xuICAgIHByaXZhdGUgdGFyZ2V0U3Vic2NyaXB0aW9uO1xuICAgIGNvbnN0cnVjdG9yKGhpbnQ6IERyYWdIaW50U2VydmljZSwgY3VlOiBEcm9wQ3VlU2VydmljZSwgZ3JvdXBJbmZvU2VydmljZTogR3JvdXBJbmZvU2VydmljZSwgbG9jYWxpemF0aW9uOiBMb2NhbGl6YXRpb25TZXJ2aWNlLCBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdEb0NoZWNrKCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBkaXJlY3Rpb25DaGFuZ2UoZ3JvdXA6IEdyb3VwRGVzY3JpcHRvcik6IHZvaWQ7XG4gICAgaW5zZXJ0KGZpZWxkOiBzdHJpbmcsIGluZGV4OiBudW1iZXIpOiB2b2lkO1xuICAgIHJlbW92ZShncm91cDogR3JvdXBEZXNjcmlwdG9yKTogdm9pZDtcbiAgICBjYW5Ecm9wKGRyYWdnYWJsZTogRHJhZ0FuZERyb3BDb250ZXh0LCB0YXJnZXQ6IERyYWdBbmREcm9wQ29udGV4dCk6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBhdHRhY2hUYXJnZXRzO1xuICAgIHByaXZhdGUgZW50ZXI7XG4gICAgcHJpdmF0ZSBsZWF2ZTtcbiAgICBwcml2YXRlIGRyb3A7XG59XG4iXX0=