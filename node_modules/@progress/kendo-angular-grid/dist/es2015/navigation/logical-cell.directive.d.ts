/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { DoCheck, ElementRef, NgZone, Renderer2, SimpleChanges } from '@angular/core';
import { OnChanges, OnDestroy, OnInit } from '@angular/core';
import { FocusGroup } from './focus-group';
import { LogicalCell } from './logical-cell.interface';
import { NavigationService } from './navigation.service';
import { ColumnInfoService } from '../common/column-info.service';
import { IdService } from '../common/id.service';
import { CellContext } from '../rendering/common/cell-context';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class LogicalCellDirective implements LogicalCell, OnInit, OnChanges, OnDestroy, DoCheck {
    focusGroup: FocusGroup;
    private element;
    private columnInfoService;
    private idService;
    private navigationService;
    private renderer;
    private zone;
    private cellContext;
    logicalColIndex: number;
    logicalRowIndex: number;
    logicalSlaveCell: boolean;
    colIndex: number;
    colSpan: number;
    rowSpan: number;
    groupItem: any;
    dataRowIndex: number;
    dataItem: any;
    detailExpandCell: boolean;
    readonly uid: number;
    readonly id: string;
    readonly ariaColIndex: number;
    private navigationChange;
    constructor(focusGroup: FocusGroup, element: ElementRef, columnInfoService: ColumnInfoService, idService: IdService, navigationService: NavigationService, renderer: Renderer2, zone: NgZone, cellContext: CellContext);
    ngOnInit(): void;
    ngDoCheck(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    private onNavigationChange;
    private updateElement;
    private microtask;
    private registerChanges;
    private registerNoChanges;
    private isFocusable;
    private isFocused;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LogicalCellDirective, [null, null, null, null, null, null, null, { optional: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<LogicalCellDirective, "[kendoGridLogicalCell]", never, { "logicalSlaveCell": "logicalSlaveCell"; "colSpan": "colSpan"; "rowSpan": "rowSpan"; "dataRowIndex": "dataRowIndex"; "detailExpandCell": "detailExpandCell"; "logicalColIndex": "logicalColIndex"; "logicalRowIndex": "logicalRowIndex"; "colIndex": "colIndex"; "groupItem": "groupItem"; "dataItem": "dataItem"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naWNhbC1jZWxsLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJsb2dpY2FsLWNlbGwuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgRG9DaGVjaywgRWxlbWVudFJlZiwgTmdab25lLCBSZW5kZXJlcjIsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE9uQ2hhbmdlcywgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvY3VzR3JvdXAgfSBmcm9tICcuL2ZvY3VzLWdyb3VwJztcbmltcG9ydCB7IExvZ2ljYWxDZWxsIH0gZnJvbSAnLi9sb2dpY2FsLWNlbGwuaW50ZXJmYWNlJztcbmltcG9ydCB7IE5hdmlnYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi9uYXZpZ2F0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29sdW1uSW5mb1NlcnZpY2UgfSBmcm9tICcuLi9jb21tb24vY29sdW1uLWluZm8uc2VydmljZSc7XG5pbXBvcnQgeyBJZFNlcnZpY2UgfSBmcm9tICcuLi9jb21tb24vaWQuc2VydmljZSc7XG5pbXBvcnQgeyBDZWxsQ29udGV4dCB9IGZyb20gJy4uL3JlbmRlcmluZy9jb21tb24vY2VsbC1jb250ZXh0Jztcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBMb2dpY2FsQ2VsbERpcmVjdGl2ZSBpbXBsZW1lbnRzIExvZ2ljYWxDZWxsLCBPbkluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95LCBEb0NoZWNrIHtcbiAgICBmb2N1c0dyb3VwOiBGb2N1c0dyb3VwO1xuICAgIHByaXZhdGUgZWxlbWVudDtcbiAgICBwcml2YXRlIGNvbHVtbkluZm9TZXJ2aWNlO1xuICAgIHByaXZhdGUgaWRTZXJ2aWNlO1xuICAgIHByaXZhdGUgbmF2aWdhdGlvblNlcnZpY2U7XG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcbiAgICBwcml2YXRlIHpvbmU7XG4gICAgcHJpdmF0ZSBjZWxsQ29udGV4dDtcbiAgICBsb2dpY2FsQ29sSW5kZXg6IG51bWJlcjtcbiAgICBsb2dpY2FsUm93SW5kZXg6IG51bWJlcjtcbiAgICBsb2dpY2FsU2xhdmVDZWxsOiBib29sZWFuO1xuICAgIGNvbEluZGV4OiBudW1iZXI7XG4gICAgY29sU3BhbjogbnVtYmVyO1xuICAgIHJvd1NwYW46IG51bWJlcjtcbiAgICBncm91cEl0ZW06IGFueTtcbiAgICBkYXRhUm93SW5kZXg6IG51bWJlcjtcbiAgICBkYXRhSXRlbTogYW55O1xuICAgIGRldGFpbEV4cGFuZENlbGw6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgdWlkOiBudW1iZXI7XG4gICAgcmVhZG9ubHkgaWQ6IHN0cmluZztcbiAgICByZWFkb25seSBhcmlhQ29sSW5kZXg6IG51bWJlcjtcbiAgICBwcml2YXRlIG5hdmlnYXRpb25DaGFuZ2U7XG4gICAgY29uc3RydWN0b3IoZm9jdXNHcm91cDogRm9jdXNHcm91cCwgZWxlbWVudDogRWxlbWVudFJlZiwgY29sdW1uSW5mb1NlcnZpY2U6IENvbHVtbkluZm9TZXJ2aWNlLCBpZFNlcnZpY2U6IElkU2VydmljZSwgbmF2aWdhdGlvblNlcnZpY2U6IE5hdmlnYXRpb25TZXJ2aWNlLCByZW5kZXJlcjogUmVuZGVyZXIyLCB6b25lOiBOZ1pvbmUsIGNlbGxDb250ZXh0OiBDZWxsQ29udGV4dCk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ0RvQ2hlY2soKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIHByaXZhdGUgb25OYXZpZ2F0aW9uQ2hhbmdlO1xuICAgIHByaXZhdGUgdXBkYXRlRWxlbWVudDtcbiAgICBwcml2YXRlIG1pY3JvdGFzaztcbiAgICBwcml2YXRlIHJlZ2lzdGVyQ2hhbmdlcztcbiAgICBwcml2YXRlIHJlZ2lzdGVyTm9DaGFuZ2VzO1xuICAgIHByaXZhdGUgaXNGb2N1c2FibGU7XG4gICAgcHJpdmF0ZSBpc0ZvY3VzZWQ7XG59XG4iXX0=