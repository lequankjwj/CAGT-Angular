/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { FocusableElement } from "./focusable-element.interface";
import { FocusRoot } from './focus-root';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class FocusGroup {
    private root;
    private active;
    private children;
    private readonly focusableChildren;
    readonly isActive: boolean;
    constructor(root: FocusRoot);
    ngOnDestroy(): void;
    registerElement(element: FocusableElement): void;
    unregisterElement(element: FocusableElement): void;
    /**
     * Returns a Boolean value which indicates if the group will receive focus when the cell is focused.
     * Requires a single "simple" focusable element such as a button or a checkbox.
     */
    isNavigable(): boolean;
    canFocus(): boolean;
    focus(): void;
    activate(): void;
    deactivate(): void;
    private hasFocus;
    private toggleState;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FocusGroup, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<FocusGroup>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9jdXMtZ3JvdXAuZC50cyIsInNvdXJjZXMiOlsiZm9jdXMtZ3JvdXAuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IEZvY3VzYWJsZUVsZW1lbnQgfSBmcm9tIFwiLi9mb2N1c2FibGUtZWxlbWVudC5pbnRlcmZhY2VcIjtcbmltcG9ydCB7IEZvY3VzUm9vdCB9IGZyb20gJy4vZm9jdXMtcm9vdCc7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRm9jdXNHcm91cCB7XG4gICAgcHJpdmF0ZSByb290O1xuICAgIHByaXZhdGUgYWN0aXZlO1xuICAgIHByaXZhdGUgY2hpbGRyZW47XG4gICAgcHJpdmF0ZSByZWFkb25seSBmb2N1c2FibGVDaGlsZHJlbjtcbiAgICByZWFkb25seSBpc0FjdGl2ZTogYm9vbGVhbjtcbiAgICBjb25zdHJ1Y3Rvcihyb290OiBGb2N1c1Jvb3QpO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgcmVnaXN0ZXJFbGVtZW50KGVsZW1lbnQ6IEZvY3VzYWJsZUVsZW1lbnQpOiB2b2lkO1xuICAgIHVucmVnaXN0ZXJFbGVtZW50KGVsZW1lbnQ6IEZvY3VzYWJsZUVsZW1lbnQpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBCb29sZWFuIHZhbHVlIHdoaWNoIGluZGljYXRlcyBpZiB0aGUgZ3JvdXAgd2lsbCByZWNlaXZlIGZvY3VzIHdoZW4gdGhlIGNlbGwgaXMgZm9jdXNlZC5cbiAgICAgKiBSZXF1aXJlcyBhIHNpbmdsZSBcInNpbXBsZVwiIGZvY3VzYWJsZSBlbGVtZW50IHN1Y2ggYXMgYSBidXR0b24gb3IgYSBjaGVja2JveC5cbiAgICAgKi9cbiAgICBpc05hdmlnYWJsZSgpOiBib29sZWFuO1xuICAgIGNhbkZvY3VzKCk6IGJvb2xlYW47XG4gICAgZm9jdXMoKTogdm9pZDtcbiAgICBhY3RpdmF0ZSgpOiB2b2lkO1xuICAgIGRlYWN0aXZhdGUoKTogdm9pZDtcbiAgICBwcml2YXRlIGhhc0ZvY3VzO1xuICAgIHByaXZhdGUgdG9nZ2xlU3RhdGU7XG59XG4iXX0=