/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { TemplateRef, OnChanges, OnDestroy } from '@angular/core';
import { LocalizationService } from "@progress/kendo-angular-l10n";
import { SinglePopupService } from '../common/single-popup.service';
import { ColumnMenuService } from './column-menu.service';
import { ColumnMenuSettings } from './column-menu-settings.interface';
/**
 * Represents the [column menu]({% slug columnmenu_grid %}) component.
 */
import * as ɵngcc0 from '@angular/core';
export declare class ColumnMenuComponent implements OnChanges, OnDestroy {
    protected popupService: SinglePopupService;
    localization: LocalizationService;
    service: ColumnMenuService;
    /**
     * @hidden
     */
    standalone: boolean;
    /**
     * The Grid column instance to control with the menu.
     */
    column: any;
    /**
     * The settings for the Column Menu.
     */
    settings: ColumnMenuSettings;
    /**
     * The descriptors by which the data will be sorted.
     * Typically bound to the same value as [GridComponent.sort]({% slug api_grid_gridcomponent %}#toc-sort).
     */
    sort: any;
    /**
     * The descriptor by which the data will be filtered.
     * Typically bound to the same value as [GridComponent.filter]({% slug api_grid_gridcomponent %}#toc-filter).
     */
    filter: any;
    /**
     * @hidden
     */
    sortable: any;
    /**
     * @hidden
     */
    columnMenuTemplate: TemplateRef<any>;
    /**
     * @hidden
     */
    expandedFilter: boolean;
    /**
     * @hidden
     */
    expandedColumns: boolean;
    private popupRef;
    private closeSubscription;
    constructor(popupService: SinglePopupService, localization: LocalizationService, service: ColumnMenuService);
    /**
     * @hidden
     */
    readonly isActive: boolean;
    /**
     * @hidden
     */
    readonly hasFilter: boolean;
    /**
     * @hidden
     */
    readonly hasSort: boolean;
    /**
     * @hidden
     */
    readonly hasColumnChooser: boolean;
    /**
     * @hidden
     */
    readonly hasLock: boolean;
    ngOnChanges(): void;
    ngOnDestroy(): void;
    /**
     * @hidden
     */
    toggle(e: any, anchor: any, template: any): void;
    /**
     * @hidden
     */
    close(): void;
    /**
     * @hidden
     */
    onColumnsExpand(): void;
    /**
     * @hidden
     */
    onFilterExpand(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ColumnMenuComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ColumnMenuComponent, "kendo-grid-column-menu", never, { "standalone": "standalone"; "settings": "settings"; "sortable": "sortable"; "column": "column"; "sort": "sort"; "filter": "filter"; "columnMenuTemplate": "columnMenuTemplate"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLW1lbnUuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImNvbHVtbi1tZW51LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IFRlbXBsYXRlUmVmLCBPbkNoYW5nZXMsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTG9jYWxpemF0aW9uU2VydmljZSB9IGZyb20gXCJAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1sMTBuXCI7XG5pbXBvcnQgeyBTaW5nbGVQb3B1cFNlcnZpY2UgfSBmcm9tICcuLi9jb21tb24vc2luZ2xlLXBvcHVwLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29sdW1uTWVudVNlcnZpY2UgfSBmcm9tICcuL2NvbHVtbi1tZW51LnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29sdW1uTWVudVNldHRpbmdzIH0gZnJvbSAnLi9jb2x1bW4tbWVudS1zZXR0aW5ncy5pbnRlcmZhY2UnO1xuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBbY29sdW1uIG1lbnVdKHslIHNsdWcgY29sdW1ubWVudV9ncmlkICV9KSBjb21wb25lbnQuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENvbHVtbk1lbnVDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMsIE9uRGVzdHJveSB7XG4gICAgcHJvdGVjdGVkIHBvcHVwU2VydmljZTogU2luZ2xlUG9wdXBTZXJ2aWNlO1xuICAgIGxvY2FsaXphdGlvbjogTG9jYWxpemF0aW9uU2VydmljZTtcbiAgICBzZXJ2aWNlOiBDb2x1bW5NZW51U2VydmljZTtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgc3RhbmRhbG9uZTogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBUaGUgR3JpZCBjb2x1bW4gaW5zdGFuY2UgdG8gY29udHJvbCB3aXRoIHRoZSBtZW51LlxuICAgICAqL1xuICAgIGNvbHVtbjogYW55O1xuICAgIC8qKlxuICAgICAqIFRoZSBzZXR0aW5ncyBmb3IgdGhlIENvbHVtbiBNZW51LlxuICAgICAqL1xuICAgIHNldHRpbmdzOiBDb2x1bW5NZW51U2V0dGluZ3M7XG4gICAgLyoqXG4gICAgICogVGhlIGRlc2NyaXB0b3JzIGJ5IHdoaWNoIHRoZSBkYXRhIHdpbGwgYmUgc29ydGVkLlxuICAgICAqIFR5cGljYWxseSBib3VuZCB0byB0aGUgc2FtZSB2YWx1ZSBhcyBbR3JpZENvbXBvbmVudC5zb3J0XSh7JSBzbHVnIGFwaV9ncmlkX2dyaWRjb21wb25lbnQgJX0jdG9jLXNvcnQpLlxuICAgICAqL1xuICAgIHNvcnQ6IGFueTtcbiAgICAvKipcbiAgICAgKiBUaGUgZGVzY3JpcHRvciBieSB3aGljaCB0aGUgZGF0YSB3aWxsIGJlIGZpbHRlcmVkLlxuICAgICAqIFR5cGljYWxseSBib3VuZCB0byB0aGUgc2FtZSB2YWx1ZSBhcyBbR3JpZENvbXBvbmVudC5maWx0ZXJdKHslIHNsdWcgYXBpX2dyaWRfZ3JpZGNvbXBvbmVudCAlfSN0b2MtZmlsdGVyKS5cbiAgICAgKi9cbiAgICBmaWx0ZXI6IGFueTtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgc29ydGFibGU6IGFueTtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgY29sdW1uTWVudVRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBleHBhbmRlZEZpbHRlcjogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZXhwYW5kZWRDb2x1bW5zOiBib29sZWFuO1xuICAgIHByaXZhdGUgcG9wdXBSZWY7XG4gICAgcHJpdmF0ZSBjbG9zZVN1YnNjcmlwdGlvbjtcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cFNlcnZpY2U6IFNpbmdsZVBvcHVwU2VydmljZSwgbG9jYWxpemF0aW9uOiBMb2NhbGl6YXRpb25TZXJ2aWNlLCBzZXJ2aWNlOiBDb2x1bW5NZW51U2VydmljZSk7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHJlYWRvbmx5IGlzQWN0aXZlOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICByZWFkb25seSBoYXNGaWx0ZXI6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHJlYWRvbmx5IGhhc1NvcnQ6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHJlYWRvbmx5IGhhc0NvbHVtbkNob29zZXI6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHJlYWRvbmx5IGhhc0xvY2s6IGJvb2xlYW47XG4gICAgbmdPbkNoYW5nZXMoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICB0b2dnbGUoZTogYW55LCBhbmNob3I6IGFueSwgdGVtcGxhdGU6IGFueSk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGNsb3NlKCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG9uQ29sdW1uc0V4cGFuZCgpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBvbkZpbHRlckV4cGFuZCgpOiB2b2lkO1xufVxuIl19