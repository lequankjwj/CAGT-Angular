/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, Renderer2 } from '@angular/core';
import { FocusService } from './focus.service';
import { FocusableElement } from './focusable-element.interface';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class FocusableDirective implements FocusableElement {
    element: ElementRef;
    private renderer;
    private focusService;
    /**
     * The order of the element with respect to the other focusable elements.
     * If multiple elements share the same value, their relative to each other order follows their position in the component tree.
     */
    focusIndex: number;
    private readonly visible;
    private readonly enabled;
    private active;
    constructor(element: ElementRef, renderer: Renderer2, focusService: FocusService);
    ngOnDestroy(): void;
    toggle(active: boolean): void;
    canFocus(): boolean;
    focus(): void;
    toggleFocus(value: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FocusableDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<FocusableDirective, "[kendoSchedulerFocusIndex]", never, { "focusIndex": "kendoSchedulerFocusIndex"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9jdXNhYmxlLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJmb2N1c2FibGUuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IEVsZW1lbnRSZWYsIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9jdXNTZXJ2aWNlIH0gZnJvbSAnLi9mb2N1cy5zZXJ2aWNlJztcbmltcG9ydCB7IEZvY3VzYWJsZUVsZW1lbnQgfSBmcm9tICcuL2ZvY3VzYWJsZS1lbGVtZW50LmludGVyZmFjZSc7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRm9jdXNhYmxlRGlyZWN0aXZlIGltcGxlbWVudHMgRm9jdXNhYmxlRWxlbWVudCB7XG4gICAgZWxlbWVudDogRWxlbWVudFJlZjtcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xuICAgIHByaXZhdGUgZm9jdXNTZXJ2aWNlO1xuICAgIC8qKlxuICAgICAqIFRoZSBvcmRlciBvZiB0aGUgZWxlbWVudCB3aXRoIHJlc3BlY3QgdG8gdGhlIG90aGVyIGZvY3VzYWJsZSBlbGVtZW50cy5cbiAgICAgKiBJZiBtdWx0aXBsZSBlbGVtZW50cyBzaGFyZSB0aGUgc2FtZSB2YWx1ZSwgdGhlaXIgcmVsYXRpdmUgdG8gZWFjaCBvdGhlciBvcmRlciBmb2xsb3dzIHRoZWlyIHBvc2l0aW9uIGluIHRoZSBjb21wb25lbnQgdHJlZS5cbiAgICAgKi9cbiAgICBmb2N1c0luZGV4OiBudW1iZXI7XG4gICAgcHJpdmF0ZSByZWFkb25seSB2aXNpYmxlO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgZW5hYmxlZDtcbiAgICBwcml2YXRlIGFjdGl2ZTtcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50OiBFbGVtZW50UmVmLCByZW5kZXJlcjogUmVuZGVyZXIyLCBmb2N1c1NlcnZpY2U6IEZvY3VzU2VydmljZSk7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICB0b2dnbGUoYWN0aXZlOiBib29sZWFuKTogdm9pZDtcbiAgICBjYW5Gb2N1cygpOiBib29sZWFuO1xuICAgIGZvY3VzKCk6IHZvaWQ7XG4gICAgdG9nZ2xlRm9jdXModmFsdWU6IGJvb2xlYW4pOiB2b2lkO1xufVxuIl19