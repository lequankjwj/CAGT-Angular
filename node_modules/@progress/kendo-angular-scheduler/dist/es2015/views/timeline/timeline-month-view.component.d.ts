/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ChangeDetectorRef } from '@angular/core';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { TimelineBase } from './timeline-base';
import { ViewContextService } from '../view-context.service';
import { ViewStateService } from '../view-state.service';
/**
 * The component for rendering the **Month** timeline view.
 */
import * as ɵngcc0 from '@angular/core';
export declare class TimelineMonthViewComponent extends TimelineBase {
    /**
     * @hidden
     */
    readonly title: string;
    /**
     * The long-date format for displaying the
     * selected date in the Scheduler toolbar.
     * Defaults to `{0:Y}`
     * ([more information]({% slug parsingandformatting_intl %}#toc-date-formatting)).
     */
    selectedDateFormat: string;
    /**
     * The short-date format for displaying the
     * selected date in the Scheduler toolbar.
     * Defaults to `{0:y}`
     * ([more information]({% slug parsingandformatting_intl %}#toc-date-formatting)).
     */
    selectedShortDateFormat: string;
    /**
     * The invariant name for this view (`timelineMonth`).
     */
    readonly name: string;
    /**
     * @hidden
     */
    getStartDate: (selectedDate: Date) => Date;
    /**
     * @hidden
     */
    getEndDate: (selectedDate: Date) => Date;
    /**
     * @hidden
     */
    getNextDate: (date: Date, count: number) => Date;
    constructor(localization: LocalizationService, changeDetector: ChangeDetectorRef, viewContext: ViewContextService, viewState: ViewStateService);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TimelineMonthViewComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TimelineMonthViewComponent, "kendo-scheduler-timeline-month-view", never, { "selectedDateFormat": "selectedDateFormat"; "selectedShortDateFormat": "selectedShortDateFormat"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZWxpbmUtbW9udGgtdmlldy5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsidGltZWxpbmUtbW9udGgtdmlldy5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMb2NhbGl6YXRpb25TZXJ2aWNlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItbDEwbic7XG5pbXBvcnQgeyBUaW1lbGluZUJhc2UgfSBmcm9tICcuL3RpbWVsaW5lLWJhc2UnO1xuaW1wb3J0IHsgVmlld0NvbnRleHRTZXJ2aWNlIH0gZnJvbSAnLi4vdmlldy1jb250ZXh0LnNlcnZpY2UnO1xuaW1wb3J0IHsgVmlld1N0YXRlU2VydmljZSB9IGZyb20gJy4uL3ZpZXctc3RhdGUuc2VydmljZSc7XG4vKipcbiAqIFRoZSBjb21wb25lbnQgZm9yIHJlbmRlcmluZyB0aGUgKipNb250aCoqIHRpbWVsaW5lIHZpZXcuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFRpbWVsaW5lTW9udGhWaWV3Q29tcG9uZW50IGV4dGVuZHMgVGltZWxpbmVCYXNlIHtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgcmVhZG9ubHkgdGl0bGU6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgbG9uZy1kYXRlIGZvcm1hdCBmb3IgZGlzcGxheWluZyB0aGVcbiAgICAgKiBzZWxlY3RlZCBkYXRlIGluIHRoZSBTY2hlZHVsZXIgdG9vbGJhci5cbiAgICAgKiBEZWZhdWx0cyB0byBgezA6WX1gXG4gICAgICogKFttb3JlIGluZm9ybWF0aW9uXSh7JSBzbHVnIHBhcnNpbmdhbmRmb3JtYXR0aW5nX2ludGwgJX0jdG9jLWRhdGUtZm9ybWF0dGluZykpLlxuICAgICAqL1xuICAgIHNlbGVjdGVkRGF0ZUZvcm1hdDogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSBzaG9ydC1kYXRlIGZvcm1hdCBmb3IgZGlzcGxheWluZyB0aGVcbiAgICAgKiBzZWxlY3RlZCBkYXRlIGluIHRoZSBTY2hlZHVsZXIgdG9vbGJhci5cbiAgICAgKiBEZWZhdWx0cyB0byBgezA6eX1gXG4gICAgICogKFttb3JlIGluZm9ybWF0aW9uXSh7JSBzbHVnIHBhcnNpbmdhbmRmb3JtYXR0aW5nX2ludGwgJX0jdG9jLWRhdGUtZm9ybWF0dGluZykpLlxuICAgICAqL1xuICAgIHNlbGVjdGVkU2hvcnREYXRlRm9ybWF0OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIGludmFyaWFudCBuYW1lIGZvciB0aGlzIHZpZXcgKGB0aW1lbGluZU1vbnRoYCkuXG4gICAgICovXG4gICAgcmVhZG9ubHkgbmFtZTogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXRTdGFydERhdGU6IChzZWxlY3RlZERhdGU6IERhdGUpID0+IERhdGU7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldEVuZERhdGU6IChzZWxlY3RlZERhdGU6IERhdGUpID0+IERhdGU7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIGdldE5leHREYXRlOiAoZGF0ZTogRGF0ZSwgY291bnQ6IG51bWJlcikgPT4gRGF0ZTtcbiAgICBjb25zdHJ1Y3Rvcihsb2NhbGl6YXRpb246IExvY2FsaXphdGlvblNlcnZpY2UsIGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZiwgdmlld0NvbnRleHQ6IFZpZXdDb250ZXh0U2VydmljZSwgdmlld1N0YXRlOiBWaWV3U3RhdGVTZXJ2aWNlKTtcbn1cbiJdfQ==