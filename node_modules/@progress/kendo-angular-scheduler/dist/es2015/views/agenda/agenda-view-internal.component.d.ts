/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { OnDestroy, OnInit, OnChanges, ElementRef, NgZone, Renderer2, TemplateRef } from '@angular/core';
import { IntlService } from '@progress/kendo-angular-intl';
import { Subject } from 'rxjs';
import { ViewContextService } from '../view-context.service';
import { ViewStateService } from '../view-state.service';
import { PDFService } from '../../pdf/pdf.service';
import { LocalizationService } from '@progress/kendo-angular-l10n';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class AgendaViewInternalComponent implements OnInit, OnChanges, OnDestroy {
    private viewContext;
    private viewState;
    private intl;
    private renderer;
    private element;
    private zone;
    private pdfService;
    private localization;
    selectedDate: Date;
    eventTemplate: TemplateRef<any>;
    slotClass: (args: any) => any;
    eventClass: (args: any) => any;
    eventStyles: (args: any) => any;
    agendaTimeTemplate: TemplateRef<any>;
    agendaDateTemplate: TemplateRef<any>;
    selectedDateFormat: string;
    selectedShortDateFormat: string;
    numberOfDays: number;
    headerWrap: ElementRef;
    content: ElementRef;
    tasks: Subject<any[]>;
    groupedResources: any[];
    editable: any;
    readonly eventTemplateRef: any;
    readonly agendaTimeTemplateRef: any;
    readonly agendaDateTemplateRef: any;
    private schedulerEventTemplate;
    private schedulerAgendaTimeTemplate;
    private schedulerAgendaDateTemplate;
    private group;
    private resources;
    private spans;
    private items;
    private range;
    private groups;
    private min;
    private max;
    private subs;
    constructor(viewContext: ViewContextService, viewState: ViewStateService, intl: IntlService, renderer: Renderer2, element: ElementRef, zone: NgZone, pdfService: PDFService, localization: LocalizationService);
    ngOnInit(): void;
    ngOnChanges(changes: any): void;
    ngAfterViewInit(): void;
    protected onClick(e: any): void;
    protected onKeydown(e: any): void;
    protected targetTask(target: any): any;
    updateContentHeight(): void;
    ngOnDestroy(): void;
    private optionsChange;
    private onSelectDate;
    private onAction;
    private createEventGroups;
    private dateRange;
    private groupResources;
    private resourceSpans;
    private readonly taskResources;
    private isInRange;
    private createPDFElement;
    private elementTask;
    private execute;
    private slotByPosition;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AgendaViewInternalComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AgendaViewInternalComponent, "agenda-view-internal", never, { "eventTemplate": "eventTemplate"; "slotClass": "slotClass"; "eventClass": "eventClass"; "eventStyles": "eventStyles"; "agendaTimeTemplate": "agendaTimeTemplate"; "agendaDateTemplate": "agendaDateTemplate"; "selectedDateFormat": "selectedDateFormat"; "selectedShortDateFormat": "selectedShortDateFormat"; "numberOfDays": "numberOfDays"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWdlbmRhLXZpZXctaW50ZXJuYWwuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImFnZW5kYS12aWV3LWludGVybmFsLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgT25EZXN0cm95LCBPbkluaXQsIE9uQ2hhbmdlcywgRWxlbWVudFJlZiwgTmdab25lLCBSZW5kZXJlcjIsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJbnRsU2VydmljZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWludGwnO1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgVmlld0NvbnRleHRTZXJ2aWNlIH0gZnJvbSAnLi4vdmlldy1jb250ZXh0LnNlcnZpY2UnO1xuaW1wb3J0IHsgVmlld1N0YXRlU2VydmljZSB9IGZyb20gJy4uL3ZpZXctc3RhdGUuc2VydmljZSc7XG5pbXBvcnQgeyBQREZTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vcGRmL3BkZi5zZXJ2aWNlJztcbmltcG9ydCB7IExvY2FsaXphdGlvblNlcnZpY2UgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1sMTBuJztcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBBZ2VuZGFWaWV3SW50ZXJuYWxDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIHZpZXdDb250ZXh0O1xuICAgIHByaXZhdGUgdmlld1N0YXRlO1xuICAgIHByaXZhdGUgaW50bDtcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xuICAgIHByaXZhdGUgZWxlbWVudDtcbiAgICBwcml2YXRlIHpvbmU7XG4gICAgcHJpdmF0ZSBwZGZTZXJ2aWNlO1xuICAgIHByaXZhdGUgbG9jYWxpemF0aW9uO1xuICAgIHNlbGVjdGVkRGF0ZTogRGF0ZTtcbiAgICBldmVudFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIHNsb3RDbGFzczogKGFyZ3M6IGFueSkgPT4gYW55O1xuICAgIGV2ZW50Q2xhc3M6IChhcmdzOiBhbnkpID0+IGFueTtcbiAgICBldmVudFN0eWxlczogKGFyZ3M6IGFueSkgPT4gYW55O1xuICAgIGFnZW5kYVRpbWVUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBhZ2VuZGFEYXRlVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgc2VsZWN0ZWREYXRlRm9ybWF0OiBzdHJpbmc7XG4gICAgc2VsZWN0ZWRTaG9ydERhdGVGb3JtYXQ6IHN0cmluZztcbiAgICBudW1iZXJPZkRheXM6IG51bWJlcjtcbiAgICBoZWFkZXJXcmFwOiBFbGVtZW50UmVmO1xuICAgIGNvbnRlbnQ6IEVsZW1lbnRSZWY7XG4gICAgdGFza3M6IFN1YmplY3Q8YW55W10+O1xuICAgIGdyb3VwZWRSZXNvdXJjZXM6IGFueVtdO1xuICAgIGVkaXRhYmxlOiBhbnk7XG4gICAgcmVhZG9ubHkgZXZlbnRUZW1wbGF0ZVJlZjogYW55O1xuICAgIHJlYWRvbmx5IGFnZW5kYVRpbWVUZW1wbGF0ZVJlZjogYW55O1xuICAgIHJlYWRvbmx5IGFnZW5kYURhdGVUZW1wbGF0ZVJlZjogYW55O1xuICAgIHByaXZhdGUgc2NoZWR1bGVyRXZlbnRUZW1wbGF0ZTtcbiAgICBwcml2YXRlIHNjaGVkdWxlckFnZW5kYVRpbWVUZW1wbGF0ZTtcbiAgICBwcml2YXRlIHNjaGVkdWxlckFnZW5kYURhdGVUZW1wbGF0ZTtcbiAgICBwcml2YXRlIGdyb3VwO1xuICAgIHByaXZhdGUgcmVzb3VyY2VzO1xuICAgIHByaXZhdGUgc3BhbnM7XG4gICAgcHJpdmF0ZSBpdGVtcztcbiAgICBwcml2YXRlIHJhbmdlO1xuICAgIHByaXZhdGUgZ3JvdXBzO1xuICAgIHByaXZhdGUgbWluO1xuICAgIHByaXZhdGUgbWF4O1xuICAgIHByaXZhdGUgc3VicztcbiAgICBjb25zdHJ1Y3Rvcih2aWV3Q29udGV4dDogVmlld0NvbnRleHRTZXJ2aWNlLCB2aWV3U3RhdGU6IFZpZXdTdGF0ZVNlcnZpY2UsIGludGw6IEludGxTZXJ2aWNlLCByZW5kZXJlcjogUmVuZGVyZXIyLCBlbGVtZW50OiBFbGVtZW50UmVmLCB6b25lOiBOZ1pvbmUsIHBkZlNlcnZpY2U6IFBERlNlcnZpY2UsIGxvY2FsaXphdGlvbjogTG9jYWxpemF0aW9uU2VydmljZSk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBhbnkpOiB2b2lkO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBvbkNsaWNrKGU6IGFueSk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIG9uS2V5ZG93bihlOiBhbnkpOiB2b2lkO1xuICAgIHByb3RlY3RlZCB0YXJnZXRUYXNrKHRhcmdldDogYW55KTogYW55O1xuICAgIHVwZGF0ZUNvbnRlbnRIZWlnaHQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIHByaXZhdGUgb3B0aW9uc0NoYW5nZTtcbiAgICBwcml2YXRlIG9uU2VsZWN0RGF0ZTtcbiAgICBwcml2YXRlIG9uQWN0aW9uO1xuICAgIHByaXZhdGUgY3JlYXRlRXZlbnRHcm91cHM7XG4gICAgcHJpdmF0ZSBkYXRlUmFuZ2U7XG4gICAgcHJpdmF0ZSBncm91cFJlc291cmNlcztcbiAgICBwcml2YXRlIHJlc291cmNlU3BhbnM7XG4gICAgcHJpdmF0ZSByZWFkb25seSB0YXNrUmVzb3VyY2VzO1xuICAgIHByaXZhdGUgaXNJblJhbmdlO1xuICAgIHByaXZhdGUgY3JlYXRlUERGRWxlbWVudDtcbiAgICBwcml2YXRlIGVsZW1lbnRUYXNrO1xuICAgIHByaXZhdGUgZXhlY3V0ZTtcbiAgICBwcml2YXRlIHNsb3RCeVBvc2l0aW9uO1xufVxuIl19