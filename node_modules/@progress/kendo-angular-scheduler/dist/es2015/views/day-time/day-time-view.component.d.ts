/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { OnChanges, TemplateRef, QueryList, ElementRef, ChangeDetectorRef, NgZone, Renderer2 } from '@angular/core';
import { ZonedDate } from '@progress/kendo-date-math';
import { DateRange, NavigationAction } from '../../types';
import { DayTimeSlotService } from './day-time-slot.service';
import { ViewContextService } from '../view-context.service';
import { ViewStateService } from '../view-state.service';
import { IntlService } from '@progress/kendo-angular-intl';
import { PDFService } from '../../pdf/pdf.service';
import { BaseView } from '../common/base-view';
import { LocalizationService } from '@progress/kendo-angular-l10n';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare abstract class DayTimeViewComponent extends BaseView implements OnChanges {
    protected changeDetector: ChangeDetectorRef;
    timeSlotTemplate: TemplateRef<any>;
    dateHeaderTemplate: TemplateRef<any>;
    numberOfDays: number;
    scrollTime: string;
    startTime: string;
    endTime: string;
    workDayStart: string;
    workDayEnd: string;
    workWeekStart: number;
    workWeekEnd: number;
    slotDuration: number;
    slotDivisions: number;
    showWorkHours: boolean;
    getStartDate: any;
    getEndDate: any;
    getNextDate: any;
    currentTimeMarker: any;
    currentTimeElements: QueryList<ElementRef>;
    currentTimeArrows: QueryList<ElementRef>;
    name: string;
    workDayStartTime: any;
    workDayEndTime: any;
    daySlots: any[];
    timeSlots: any[];
    resizeHintFormat: string;
    showCurrentTime: boolean;
    readonly classNames: string;
    readonly timeSlotTemplateRef: any;
    readonly dateHeaderTemplateRef: any;
    protected schedulerTimeSlotTemplate: any;
    protected schedulerDateHeaderTemplate: any;
    protected currentTimeTimeout: any;
    protected currentDate: ZonedDate;
    protected verticalTime: boolean;
    protected initialUpdate: boolean;
    constructor(changeDetector: ChangeDetectorRef, viewContext: ViewContextService, viewState: ViewStateService, intl: IntlService, slotService: DayTimeSlotService, zone: NgZone, renderer: Renderer2, element: ElementRef, pdfService: PDFService, localization: LocalizationService);
    ngOnChanges(changes: any): void;
    ngOnDestroy(): void;
    verticalItem(leafIndex: number, resourceIndex: number): any;
    timeSlotClass(slot: any, date: any, resourceIndex: any): string;
    protected scrollToTime(time?: string | Date): void;
    protected optionsChange(options: any): void;
    protected updateView(): void;
    protected enableCurrentTime(): boolean;
    protected currentTime(): Date;
    protected updateCurrentTime(): void;
    protected abstract currentTimeArrowOffset(): number;
    protected positionCurrentTime(): void;
    protected bindEvents(): void;
    protected onHeaderClick(e: any): void;
    protected slotByIndex(slotIndex: string, args: any): any;
    protected onSelectDate(date: Date): void;
    protected onAction(e: NavigationAction): void;
    protected dateRange(date?: Date): DateRange;
    protected createDaySlots(): any[];
    protected createTimeSlots(): any[];
    protected initWorkDay(): void;
    protected slotByPosition(x: number, y: number, container?: any): any;
    protected slotFields(slot: any): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DayTimeViewComponent, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DayTimeViewComponent, never, never, { "numberOfDays": "numberOfDays"; "startTime": "startTime"; "endTime": "endTime"; "workDayStart": "workDayStart"; "workDayEnd": "workDayEnd"; "workWeekStart": "workWeekStart"; "workWeekEnd": "workWeekEnd"; "slotDuration": "slotDuration"; "slotDivisions": "slotDivisions"; "showWorkHours": "showWorkHours"; "getStartDate": "getStartDate"; "getEndDate": "getEndDate"; "getNextDate": "getNextDate"; "timeSlotTemplate": "timeSlotTemplate"; "dateHeaderTemplate": "dateHeaderTemplate"; "scrollTime": "scrollTime"; "currentTimeMarker": "currentTimeMarker"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF5LXRpbWUtdmlldy5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiZGF5LXRpbWUtdmlldy5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IE9uQ2hhbmdlcywgVGVtcGxhdGVSZWYsIFF1ZXJ5TGlzdCwgRWxlbWVudFJlZiwgQ2hhbmdlRGV0ZWN0b3JSZWYsIE5nWm9uZSwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBab25lZERhdGUgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tZGF0ZS1tYXRoJztcbmltcG9ydCB7IERhdGVSYW5nZSwgTmF2aWdhdGlvbkFjdGlvbiB9IGZyb20gJy4uLy4uL3R5cGVzJztcbmltcG9ydCB7IERheVRpbWVTbG90U2VydmljZSB9IGZyb20gJy4vZGF5LXRpbWUtc2xvdC5zZXJ2aWNlJztcbmltcG9ydCB7IFZpZXdDb250ZXh0U2VydmljZSB9IGZyb20gJy4uL3ZpZXctY29udGV4dC5zZXJ2aWNlJztcbmltcG9ydCB7IFZpZXdTdGF0ZVNlcnZpY2UgfSBmcm9tICcuLi92aWV3LXN0YXRlLnNlcnZpY2UnO1xuaW1wb3J0IHsgSW50bFNlcnZpY2UgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1pbnRsJztcbmltcG9ydCB7IFBERlNlcnZpY2UgfSBmcm9tICcuLi8uLi9wZGYvcGRmLnNlcnZpY2UnO1xuaW1wb3J0IHsgQmFzZVZpZXcgfSBmcm9tICcuLi9jb21tb24vYmFzZS12aWV3JztcbmltcG9ydCB7IExvY2FsaXphdGlvblNlcnZpY2UgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1sMTBuJztcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBhYnN0cmFjdCBjbGFzcyBEYXlUaW1lVmlld0NvbXBvbmVudCBleHRlbmRzIEJhc2VWaWV3IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgICBwcm90ZWN0ZWQgY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmO1xuICAgIHRpbWVTbG90VGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgZGF0ZUhlYWRlclRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIG51bWJlck9mRGF5czogbnVtYmVyO1xuICAgIHNjcm9sbFRpbWU6IHN0cmluZztcbiAgICBzdGFydFRpbWU6IHN0cmluZztcbiAgICBlbmRUaW1lOiBzdHJpbmc7XG4gICAgd29ya0RheVN0YXJ0OiBzdHJpbmc7XG4gICAgd29ya0RheUVuZDogc3RyaW5nO1xuICAgIHdvcmtXZWVrU3RhcnQ6IG51bWJlcjtcbiAgICB3b3JrV2Vla0VuZDogbnVtYmVyO1xuICAgIHNsb3REdXJhdGlvbjogbnVtYmVyO1xuICAgIHNsb3REaXZpc2lvbnM6IG51bWJlcjtcbiAgICBzaG93V29ya0hvdXJzOiBib29sZWFuO1xuICAgIGdldFN0YXJ0RGF0ZTogYW55O1xuICAgIGdldEVuZERhdGU6IGFueTtcbiAgICBnZXROZXh0RGF0ZTogYW55O1xuICAgIGN1cnJlbnRUaW1lTWFya2VyOiBhbnk7XG4gICAgY3VycmVudFRpbWVFbGVtZW50czogUXVlcnlMaXN0PEVsZW1lbnRSZWY+O1xuICAgIGN1cnJlbnRUaW1lQXJyb3dzOiBRdWVyeUxpc3Q8RWxlbWVudFJlZj47XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIHdvcmtEYXlTdGFydFRpbWU6IGFueTtcbiAgICB3b3JrRGF5RW5kVGltZTogYW55O1xuICAgIGRheVNsb3RzOiBhbnlbXTtcbiAgICB0aW1lU2xvdHM6IGFueVtdO1xuICAgIHJlc2l6ZUhpbnRGb3JtYXQ6IHN0cmluZztcbiAgICBzaG93Q3VycmVudFRpbWU6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgY2xhc3NOYW1lczogc3RyaW5nO1xuICAgIHJlYWRvbmx5IHRpbWVTbG90VGVtcGxhdGVSZWY6IGFueTtcbiAgICByZWFkb25seSBkYXRlSGVhZGVyVGVtcGxhdGVSZWY6IGFueTtcbiAgICBwcm90ZWN0ZWQgc2NoZWR1bGVyVGltZVNsb3RUZW1wbGF0ZTogYW55O1xuICAgIHByb3RlY3RlZCBzY2hlZHVsZXJEYXRlSGVhZGVyVGVtcGxhdGU6IGFueTtcbiAgICBwcm90ZWN0ZWQgY3VycmVudFRpbWVUaW1lb3V0OiBhbnk7XG4gICAgcHJvdGVjdGVkIGN1cnJlbnREYXRlOiBab25lZERhdGU7XG4gICAgcHJvdGVjdGVkIHZlcnRpY2FsVGltZTogYm9vbGVhbjtcbiAgICBwcm90ZWN0ZWQgaW5pdGlhbFVwZGF0ZTogYm9vbGVhbjtcbiAgICBjb25zdHJ1Y3RvcihjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWYsIHZpZXdDb250ZXh0OiBWaWV3Q29udGV4dFNlcnZpY2UsIHZpZXdTdGF0ZTogVmlld1N0YXRlU2VydmljZSwgaW50bDogSW50bFNlcnZpY2UsIHNsb3RTZXJ2aWNlOiBEYXlUaW1lU2xvdFNlcnZpY2UsIHpvbmU6IE5nWm9uZSwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgZWxlbWVudDogRWxlbWVudFJlZiwgcGRmU2VydmljZTogUERGU2VydmljZSwgbG9jYWxpemF0aW9uOiBMb2NhbGl6YXRpb25TZXJ2aWNlKTtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBhbnkpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgdmVydGljYWxJdGVtKGxlYWZJbmRleDogbnVtYmVyLCByZXNvdXJjZUluZGV4OiBudW1iZXIpOiBhbnk7XG4gICAgdGltZVNsb3RDbGFzcyhzbG90OiBhbnksIGRhdGU6IGFueSwgcmVzb3VyY2VJbmRleDogYW55KTogc3RyaW5nO1xuICAgIHByb3RlY3RlZCBzY3JvbGxUb1RpbWUodGltZT86IHN0cmluZyB8IERhdGUpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBvcHRpb25zQ2hhbmdlKG9wdGlvbnM6IGFueSk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIHVwZGF0ZVZpZXcoKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgZW5hYmxlQ3VycmVudFRpbWUoKTogYm9vbGVhbjtcbiAgICBwcm90ZWN0ZWQgY3VycmVudFRpbWUoKTogRGF0ZTtcbiAgICBwcm90ZWN0ZWQgdXBkYXRlQ3VycmVudFRpbWUoKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgYWJzdHJhY3QgY3VycmVudFRpbWVBcnJvd09mZnNldCgpOiBudW1iZXI7XG4gICAgcHJvdGVjdGVkIHBvc2l0aW9uQ3VycmVudFRpbWUoKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgYmluZEV2ZW50cygpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBvbkhlYWRlckNsaWNrKGU6IGFueSk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIHNsb3RCeUluZGV4KHNsb3RJbmRleDogc3RyaW5nLCBhcmdzOiBhbnkpOiBhbnk7XG4gICAgcHJvdGVjdGVkIG9uU2VsZWN0RGF0ZShkYXRlOiBEYXRlKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgb25BY3Rpb24oZTogTmF2aWdhdGlvbkFjdGlvbik6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIGRhdGVSYW5nZShkYXRlPzogRGF0ZSk6IERhdGVSYW5nZTtcbiAgICBwcm90ZWN0ZWQgY3JlYXRlRGF5U2xvdHMoKTogYW55W107XG4gICAgcHJvdGVjdGVkIGNyZWF0ZVRpbWVTbG90cygpOiBhbnlbXTtcbiAgICBwcm90ZWN0ZWQgaW5pdFdvcmtEYXkoKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgc2xvdEJ5UG9zaXRpb24oeDogbnVtYmVyLCB5OiBudW1iZXIsIGNvbnRhaW5lcj86IGFueSk6IGFueTtcbiAgICBwcm90ZWN0ZWQgc2xvdEZpZWxkcyhzbG90OiBhbnkpOiBhbnk7XG59XG4iXX0=