/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { TemplateRef } from '@angular/core';
/**
 * Represents the template which renders the resource group header in the **Day**, **Week**, and **Timeline** views.
 * To define the template, nest an `<ng-template>` tag with the `kendoSchedulerGroupHeaderTemplate`
 * directive inside the `<kendo-scheduler>`, or in the `<kendo-scheduler-day-view>`, `<kendo-scheduler-week-view>`,
 * `<kendo-scheduler-timeline-view>`, `<kendo-scheduler-timeline-week-view>`, and `<kendo-scheduler-timeline-month-view>` components.
 *
 * The available fields in the template context are:
 * - `resource`&mdash;The resource item.
 *
 * {% meta height:500 %}
 * {% embed_file templates/group-header/app.component.ts preview %}
 * {% embed_file templates/group-header/app.module.ts %}
 * {% embed_file shared/main.ts %}
 * {% embed_file shared/events-utc.ts %}
 * {% endmeta %}
 */
import * as ɵngcc0 from '@angular/core';
export declare class GroupHeaderTemplateDirective {
    templateRef: TemplateRef<any>;
    constructor(templateRef: TemplateRef<any>);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<GroupHeaderTemplateDirective, [{ optional: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<GroupHeaderTemplateDirective, "[kendoSchedulerGroupHeaderTemplate]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JvdXAtaGVhZGVyLXRlbXBsYXRlLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJncm91cC1oZWFkZXItdGVtcGxhdGUuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSB0ZW1wbGF0ZSB3aGljaCByZW5kZXJzIHRoZSByZXNvdXJjZSBncm91cCBoZWFkZXIgaW4gdGhlICoqRGF5KiosICoqV2VlayoqLCBhbmQgKipUaW1lbGluZSoqIHZpZXdzLlxuICogVG8gZGVmaW5lIHRoZSB0ZW1wbGF0ZSwgbmVzdCBhbiBgPG5nLXRlbXBsYXRlPmAgdGFnIHdpdGggdGhlIGBrZW5kb1NjaGVkdWxlckdyb3VwSGVhZGVyVGVtcGxhdGVgXG4gKiBkaXJlY3RpdmUgaW5zaWRlIHRoZSBgPGtlbmRvLXNjaGVkdWxlcj5gLCBvciBpbiB0aGUgYDxrZW5kby1zY2hlZHVsZXItZGF5LXZpZXc+YCwgYDxrZW5kby1zY2hlZHVsZXItd2Vlay12aWV3PmAsXG4gKiBgPGtlbmRvLXNjaGVkdWxlci10aW1lbGluZS12aWV3PmAsIGA8a2VuZG8tc2NoZWR1bGVyLXRpbWVsaW5lLXdlZWstdmlldz5gLCBhbmQgYDxrZW5kby1zY2hlZHVsZXItdGltZWxpbmUtbW9udGgtdmlldz5gIGNvbXBvbmVudHMuXG4gKlxuICogVGhlIGF2YWlsYWJsZSBmaWVsZHMgaW4gdGhlIHRlbXBsYXRlIGNvbnRleHQgYXJlOlxuICogLSBgcmVzb3VyY2VgJm1kYXNoO1RoZSByZXNvdXJjZSBpdGVtLlxuICpcbiAqIHslIG1ldGEgaGVpZ2h0OjUwMCAlfVxuICogeyUgZW1iZWRfZmlsZSB0ZW1wbGF0ZXMvZ3JvdXAtaGVhZGVyL2FwcC5jb21wb25lbnQudHMgcHJldmlldyAlfVxuICogeyUgZW1iZWRfZmlsZSB0ZW1wbGF0ZXMvZ3JvdXAtaGVhZGVyL2FwcC5tb2R1bGUudHMgJX1cbiAqIHslIGVtYmVkX2ZpbGUgc2hhcmVkL21haW4udHMgJX1cbiAqIHslIGVtYmVkX2ZpbGUgc2hhcmVkL2V2ZW50cy11dGMudHMgJX1cbiAqIHslIGVuZG1ldGEgJX1cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgR3JvdXBIZWFkZXJUZW1wbGF0ZURpcmVjdGl2ZSB7XG4gICAgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgY29uc3RydWN0b3IodGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT4pO1xufVxuIl19