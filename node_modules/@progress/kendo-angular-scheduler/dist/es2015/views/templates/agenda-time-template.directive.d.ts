/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { TemplateRef } from '@angular/core';
/**
 * Represents the template which renders the time header in the **Agenda** view.
 * To define the time template, nest an `<ng-template>` tag with the `kendoSchedulerAgendaTimeTemplate`
 * directive inside the `<kendo-scheduler>` or in the `<kendo-scheduler-agenda-view>` component.
 *
 * The available fields in the template context are:
 * - `start`&mdash;The start date of the event.
 * - `end`&mdash;The end date of the event.
 * - `title`&mdash;The title of the event.
 * - `description`&mdash;The description of the event.
 * - `isAllDay`&mdash;A Boolean value which indicates if the event is all-day.
 * - `resources`&mdash;The resources of the event.
 *
 * {% meta height:500 %}
 * {% embed_file templates/agenda-time-header/app.component.ts preview %}
 * {% embed_file templates/agenda-time-header/app.module.ts %}
 * {% embed_file shared/main.ts %}
 * {% embed_file shared/events-utc.ts %}
 * {% endmeta %}
 */
import * as ɵngcc0 from '@angular/core';
export declare class AgendaTimeTemplateDirective {
    templateRef: TemplateRef<any>;
    constructor(templateRef: TemplateRef<any>);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AgendaTimeTemplateDirective, [{ optional: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<AgendaTimeTemplateDirective, "[kendoSchedulerAgendaTimeTemplate]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWdlbmRhLXRpbWUtdGVtcGxhdGUuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbImFnZW5kYS10aW1lLXRlbXBsYXRlLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSB0ZW1wbGF0ZSB3aGljaCByZW5kZXJzIHRoZSB0aW1lIGhlYWRlciBpbiB0aGUgKipBZ2VuZGEqKiB2aWV3LlxuICogVG8gZGVmaW5lIHRoZSB0aW1lIHRlbXBsYXRlLCBuZXN0IGFuIGA8bmctdGVtcGxhdGU+YCB0YWcgd2l0aCB0aGUgYGtlbmRvU2NoZWR1bGVyQWdlbmRhVGltZVRlbXBsYXRlYFxuICogZGlyZWN0aXZlIGluc2lkZSB0aGUgYDxrZW5kby1zY2hlZHVsZXI+YCBvciBpbiB0aGUgYDxrZW5kby1zY2hlZHVsZXItYWdlbmRhLXZpZXc+YCBjb21wb25lbnQuXG4gKlxuICogVGhlIGF2YWlsYWJsZSBmaWVsZHMgaW4gdGhlIHRlbXBsYXRlIGNvbnRleHQgYXJlOlxuICogLSBgc3RhcnRgJm1kYXNoO1RoZSBzdGFydCBkYXRlIG9mIHRoZSBldmVudC5cbiAqIC0gYGVuZGAmbWRhc2g7VGhlIGVuZCBkYXRlIG9mIHRoZSBldmVudC5cbiAqIC0gYHRpdGxlYCZtZGFzaDtUaGUgdGl0bGUgb2YgdGhlIGV2ZW50LlxuICogLSBgZGVzY3JpcHRpb25gJm1kYXNoO1RoZSBkZXNjcmlwdGlvbiBvZiB0aGUgZXZlbnQuXG4gKiAtIGBpc0FsbERheWAmbWRhc2g7QSBCb29sZWFuIHZhbHVlIHdoaWNoIGluZGljYXRlcyBpZiB0aGUgZXZlbnQgaXMgYWxsLWRheS5cbiAqIC0gYHJlc291cmNlc2AmbWRhc2g7VGhlIHJlc291cmNlcyBvZiB0aGUgZXZlbnQuXG4gKlxuICogeyUgbWV0YSBoZWlnaHQ6NTAwICV9XG4gKiB7JSBlbWJlZF9maWxlIHRlbXBsYXRlcy9hZ2VuZGEtdGltZS1oZWFkZXIvYXBwLmNvbXBvbmVudC50cyBwcmV2aWV3ICV9XG4gKiB7JSBlbWJlZF9maWxlIHRlbXBsYXRlcy9hZ2VuZGEtdGltZS1oZWFkZXIvYXBwLm1vZHVsZS50cyAlfVxuICogeyUgZW1iZWRfZmlsZSBzaGFyZWQvbWFpbi50cyAlfVxuICogeyUgZW1iZWRfZmlsZSBzaGFyZWQvZXZlbnRzLXV0Yy50cyAlfVxuICogeyUgZW5kbWV0YSAlfVxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBBZ2VuZGFUaW1lVGVtcGxhdGVEaXJlY3RpdmUge1xuICAgIHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGNvbnN0cnVjdG9yKHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+KTtcbn1cbiJdfQ==