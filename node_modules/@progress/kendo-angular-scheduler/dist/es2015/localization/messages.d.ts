/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ComponentMessages } from '@progress/kendo-angular-l10n';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class Messages extends ComponentMessages {
    /**
     * The **All events** text that is displayed in the **Timeline** views when no vertical grouping is applied.
     */
    allEvents: string;
    /**
     * The **All day** text that is displayed in the *Day** and **Week** views.
     */
    allDay: string;
    /**
     * The date-header text that is displayed in the **Agenda** view.
     */
    dateHeader: string;
    /**
     * The time-header text that is displayed in the **Agenda** view.
     */
    timeHeader: string;
    /**
     * The event-header text that is displayed in the **Agenda** view.
     */
    eventHeader: string;
    /**
     * The title of the **Delete** icon.
     */
    deleteTitle: string;
    /**
     * The title of the **Next** navigation button.
     */
    nextTitle: string;
    /**
     * The title of the **Previous** navigation button.
     */
    previousTitle: string;
    /**
     * The text of the **Today** navigation button.
     */
    today: string;
    /**
     * The text of today's date in the header of the Calendar.
     */
    calendarToday: string;
    /**
     * The text of the **Show full day** button that is displayed in the footer of the **Day**, **Week**, and **Timeline** views.
     */
    showFullDay: string;
    /**
     * The text of the **Show work day** button that is displayed in the footer of the **Day**, **Week**, and **Timeline** views.
     */
    showWorkDay: string;
    /**
     * The title of the **Day** view.
     */
    dayViewTitle: string;
    /**
     * The title of the **Multi-Day** view.
     */
    multiDayViewTitle: string;
    /**
     * The title of the **Week** view.
     */
    weekViewTitle: string;
    /**
     * The title of the **Work Week** view.
     */
    workWeekViewTitle: string;
    /**
     * The title of the **Month** view.
     */
    monthViewTitle: string;
    /**
     * The title of the **Timeline** view.
     */
    timelineViewTitle: string;
    /**
     * The title of the **Week** timeline view.
     */
    timelineWeekViewTitle: string;
    /**
     * The title of the **Month** timeline view.
     */
    timelineMonthViewTitle: string;
    /**
     * The title of the **Agenda** view.
     */
    agendaViewTitle: string;
    /**
     * The text of the **Cancel** button displayed in the scheduler dialogs.
     */
    cancel: string;
    /**
     * The text of the **Save** button displayed in scheduler dialogs.
     */
    save: string;
    /**
     * The text similar to 'Title' displayed in the scheduler event editor.
     */
    editorEventTitle: string;
    /**
     * The text similar to 'Start' displayed in the scheduler event editor.
     */
    editorEventStart: string;
    /**
     * The text similar to 'Start Time Zone' displayed in the scheduler event editor.
     */
    editorEventStartTimeZone: string;
    /**
     * The text similar to 'End' displayed in the scheduler event editor.
     */
    editorEventEnd: string;
    /**
     * The text similar to 'End Time Zone' displayed in the scheduler event editor.
     */
    editorEventEndTimeZone: string;
    /**
     * The text similar to 'All Day Event' displayed in the scheduler event editor.
     */
    editorEventAllDay: string;
    /**
     * The text similar to 'Description' displayed in the scheduler event editor.
     */
    editorEventDescription: string;
    /**
     * The text similar to 'Use separate Start and End Time Zones' displayed in the scheduler event editor.
     */
    editorEventSeparateTimeZones: string;
    /**
     * The text similar to 'Time Zone' displayed in the scheduler event editor.
     */
    editorEventTimeZone: string;
    /**
     * The text similar to 'Repeat' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorRepeat: string;
    /**
     * The text similar to 'day(s)' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorDailyInterval: string;
    /**
     * The text similar to 'Repeat every' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorDailyRepeatEvery: string;
    /**
     * The text similar to 'week(s)' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorWeeklyInterval: string;
    /**
     * The text similar to 'Repeat every' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorWeeklyRepeatEvery: string;
    /**
     * The text similar to 'Repeat on' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorWeeklyRepeatOn: string;
    /**
     * The text similar to 'Day' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorMonthlyDay: string;
    /**
     * The text similar to 'month(s)' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorMonthlyInterval: string;
    /**
     * The text similar to 'Repeat every' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorMonthlyRepeatEvery: string;
    /**
     * The text similar to 'Repeat on' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorMonthlyRepeatOn: string;
    /**
     * The text similar to 'of' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorYearlyOf: string;
    /**
     * The text similar to 'Repeat every' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorYearlyRepeatEvery: string;
    /**
     * The text similar to 'Repeat on' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorYearlyRepeatOn: string;
    /**
     * The text similar to 'year(s)' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorYearlyInterval: string;
    /**
     * The text similar to 'Daily' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorFrequenciesDaily: string;
    /**
     * The text similar to 'Monthly' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorFrequenciesMonthly: string;
    /**
     * The text similar to 'Never' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorFrequenciesNever: string;
    /**
     * The text similar to 'Weekly' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorFrequenciesWeekly: string;
    /**
     * The text similar to 'Yearly' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorFrequenciesYearly: string;
    /**
     * The text similar to 'First' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorOffsetPositionsFirst: string;
    /**
     * The text similar to 'Second' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorOffsetPositionsSecond: string;
    /**
     * The text similar to 'Third' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorOffsetPositionsThird: string;
    /**
     * The text similar to 'Fourth' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorOffsetPositionsFourth: string;
    /**
     * The text similar to 'Last' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorOffsetPositionsLast: string;
    /**
     * The text similar to 'Day' displayed in the repeat by section of the monthly recurrence pattern.
     */
    recurrenceEditorWeekdaysDay: string;
    /**
     * The text similar to 'Weekday' displayed in the repeat by section of the monthly recurrence pattern.
     */
    recurrenceEditorWeekdaysWeekday: string;
    /**
     * The text similar to 'Weekend Day' displayed in the repeat by section of the monthly recurrence pattern.
     */
    recurrenceEditorWeekdaysWeekendday: string;
    /**
     * The text similar to 'After' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorEndAfter: string;
    /**
     * The text similar to 'occurrence(s)' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorEndOccurrence: string;
    /**
     * The text similar to 'End' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorEndLabel: string;
    /**
     * The text similar to 'Never' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorEndNever: string;
    /**
     * The text similar to 'On' displayed in the scheduler recurrence editor.
     */
    recurrenceEditorEndOn: string;
    /**
     * The text similar to **Event** displayed as title of the scheduler event editor.
     */
    editorTitle: string;
    /**
     * The text of the **Delete** button displayed in the scheduler remove confirmation dialog.
     */
    destroy: string;
    /**
     * The text similar to **Are you sure you want to delete this event?** displayed in scheduler remove confirmation dialog.
     */
    deleteConfirmation: string;
    /**
     * The text similar to **Do you want to edit only this event occurrence or the whole series?** displayed in the scheduler recurring confirmation dialog.
     */
    editRecurringConfirmation: string;
    /**
     * The text of the **Edit current occurrence** button displayed in the scheduler recurring confirmation dialog.
     */
    editOccurrence: string;
    /**
     * The text of the **Edit the series** button displayed in the scheduler recurring confirmation dialog.
     */
    editSeries: string;
    /**
     * The text similar to **Do you want to delete only this event occurrence or the whole series?** displayed in the scheduler recurring confirmation dialog.
     */
    deleteRecurringConfirmation: string;
    /**
     * The text of the **Delete current occurrence** button displayed in the scheduler recurring confirmation dialog.
     */
    deleteOccurrence: string;
    /**
     * The text similar of the **Delete the series** button displayed in the scheduler recurring confirmation dialog.
     */
    deleteSeries: string;
    /**
     * The title of the remove confirmation dialog, similar to **Delete event**.
     */
    deleteDialogTitle: string;
    /**
     * The title of the recurring remove confirmation dialog, similar to **Delete Recurring Item**.
     */
    deleteRecurringDialogTitle: string;
    /**
     * The title of the recurring edit confirmation dialog, similar to **Edit Recurring Item**.
     */
    editRecurringDialogTitle: string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Messages, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<Messages, never, never, { "allEvents": "allEvents"; "allDay": "allDay"; "dateHeader": "dateHeader"; "timeHeader": "timeHeader"; "eventHeader": "eventHeader"; "deleteTitle": "deleteTitle"; "nextTitle": "nextTitle"; "previousTitle": "previousTitle"; "today": "today"; "calendarToday": "calendarToday"; "showFullDay": "showFullDay"; "showWorkDay": "showWorkDay"; "dayViewTitle": "dayViewTitle"; "multiDayViewTitle": "multiDayViewTitle"; "weekViewTitle": "weekViewTitle"; "workWeekViewTitle": "workWeekViewTitle"; "monthViewTitle": "monthViewTitle"; "timelineViewTitle": "timelineViewTitle"; "timelineWeekViewTitle": "timelineWeekViewTitle"; "timelineMonthViewTitle": "timelineMonthViewTitle"; "agendaViewTitle": "agendaViewTitle"; "cancel": "cancel"; "save": "save"; "editorEventTitle": "editorEventTitle"; "editorEventStart": "editorEventStart"; "editorEventStartTimeZone": "editorEventStartTimeZone"; "editorEventEnd": "editorEventEnd"; "editorEventEndTimeZone": "editorEventEndTimeZone"; "editorEventAllDay": "editorEventAllDay"; "editorEventDescription": "editorEventDescription"; "editorEventSeparateTimeZones": "editorEventSeparateTimeZones"; "editorEventTimeZone": "editorEventTimeZone"; "recurrenceEditorRepeat": "recurrenceEditorRepeat"; "recurrenceEditorDailyInterval": "recurrenceEditorDailyInterval"; "recurrenceEditorDailyRepeatEvery": "recurrenceEditorDailyRepeatEvery"; "recurrenceEditorWeeklyInterval": "recurrenceEditorWeeklyInterval"; "recurrenceEditorWeeklyRepeatEvery": "recurrenceEditorWeeklyRepeatEvery"; "recurrenceEditorWeeklyRepeatOn": "recurrenceEditorWeeklyRepeatOn"; "recurrenceEditorMonthlyDay": "recurrenceEditorMonthlyDay"; "recurrenceEditorMonthlyInterval": "recurrenceEditorMonthlyInterval"; "recurrenceEditorMonthlyRepeatEvery": "recurrenceEditorMonthlyRepeatEvery"; "recurrenceEditorMonthlyRepeatOn": "recurrenceEditorMonthlyRepeatOn"; "recurrenceEditorYearlyOf": "recurrenceEditorYearlyOf"; "recurrenceEditorYearlyRepeatEvery": "recurrenceEditorYearlyRepeatEvery"; "recurrenceEditorYearlyRepeatOn": "recurrenceEditorYearlyRepeatOn"; "recurrenceEditorYearlyInterval": "recurrenceEditorYearlyInterval"; "recurrenceEditorFrequenciesDaily": "recurrenceEditorFrequenciesDaily"; "recurrenceEditorFrequenciesMonthly": "recurrenceEditorFrequenciesMonthly"; "recurrenceEditorFrequenciesNever": "recurrenceEditorFrequenciesNever"; "recurrenceEditorFrequenciesWeekly": "recurrenceEditorFrequenciesWeekly"; "recurrenceEditorFrequenciesYearly": "recurrenceEditorFrequenciesYearly"; "recurrenceEditorOffsetPositionsFirst": "recurrenceEditorOffsetPositionsFirst"; "recurrenceEditorOffsetPositionsSecond": "recurrenceEditorOffsetPositionsSecond"; "recurrenceEditorOffsetPositionsThird": "recurrenceEditorOffsetPositionsThird"; "recurrenceEditorOffsetPositionsFourth": "recurrenceEditorOffsetPositionsFourth"; "recurrenceEditorOffsetPositionsLast": "recurrenceEditorOffsetPositionsLast"; "recurrenceEditorWeekdaysDay": "recurrenceEditorWeekdaysDay"; "recurrenceEditorWeekdaysWeekday": "recurrenceEditorWeekdaysWeekday"; "recurrenceEditorWeekdaysWeekendday": "recurrenceEditorWeekdaysWeekendday"; "recurrenceEditorEndAfter": "recurrenceEditorEndAfter"; "recurrenceEditorEndOccurrence": "recurrenceEditorEndOccurrence"; "recurrenceEditorEndLabel": "recurrenceEditorEndLabel"; "recurrenceEditorEndNever": "recurrenceEditorEndNever"; "recurrenceEditorEndOn": "recurrenceEditorEndOn"; "editorTitle": "editorTitle"; "destroy": "destroy"; "deleteConfirmation": "deleteConfirmation"; "editRecurringConfirmation": "editRecurringConfirmation"; "editOccurrence": "editOccurrence"; "editSeries": "editSeries"; "deleteRecurringConfirmation": "deleteRecurringConfirmation"; "deleteOccurrence": "deleteOccurrence"; "deleteSeries": "deleteSeries"; "deleteDialogTitle": "deleteDialogTitle"; "deleteRecurringDialogTitle": "deleteRecurringDialogTitle"; "editRecurringDialogTitle": "editRecurringDialogTitle"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,