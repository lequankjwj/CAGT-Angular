/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { AfterViewInit, ElementRef, OnDestroy, Renderer2, NgZone } from '@angular/core';
import { SchedulerView } from '../types';
import { ToolbarService } from './toolbar.service';
import { ToolbarContext } from './toolbar-context';
import { DomEventsService } from '../views/common/dom-events.service';
/**
 * A toolbar component which contains the controls for switching the views
 * ([see example]({% slug toolbar_scheduler %}#toc-including-the-built-in-components)).
 *
 * To render the view-selection buttons, include the component in the
 * [toolbar template]({% slug api_scheduler_toolbartemplatedirective %}).
 *
 * {% meta height:700 %}
 * {% embed_file toolbar/template/app.component.ts preview %}
 * {% embed_file toolbar/template/my-navigation.component.ts %}
 * {% embed_file toolbar/template/app.module.ts %}
 * {% embed_file shared/events-utc.ts %}
 * {% embed_file shared/main.ts %}
 * {% endmeta %}
 */
import * as ɵngcc0 from '@angular/core';
export declare class ToolbarViewSelectorComponent implements AfterViewInit, OnDestroy {
    private service;
    private element;
    private renderer;
    private domEvents;
    private ngZone;
    /**
     * @hidden
     */
    hostClasses: boolean;
    /**
     * @hidden
     */
    expanded: boolean;
    /**
     * @hidden
     */
    readonly ctx: ToolbarContext;
    /**
     * @hidden
     */
    readonly itemDisplay: string;
    private detachDomEvents;
    private _expanded;
    constructor(service: ToolbarService, element: ElementRef, renderer: Renderer2, domEvents: DomEventsService, ngZone: NgZone);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    /**
     * @hidden
     */
    onClick(view: SchedulerView): void;
    /**
     * @hidden
     */
    onCurrentViewClick(): void;
    /**
     * @hidden
     */
    isSelected(view: SchedulerView): boolean;
    private attachElementEventHandlers;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ToolbarViewSelectorComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ToolbarViewSelectorComponent, "[kendoSchedulerToolbarViewSelector]", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlldy1zZWxlY3Rvci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsidmlldy1zZWxlY3Rvci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgRWxlbWVudFJlZiwgT25EZXN0cm95LCBSZW5kZXJlcjIsIE5nWm9uZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU2NoZWR1bGVyVmlldyB9IGZyb20gJy4uL3R5cGVzJztcbmltcG9ydCB7IFRvb2xiYXJTZXJ2aWNlIH0gZnJvbSAnLi90b29sYmFyLnNlcnZpY2UnO1xuaW1wb3J0IHsgVG9vbGJhckNvbnRleHQgfSBmcm9tICcuL3Rvb2xiYXItY29udGV4dCc7XG5pbXBvcnQgeyBEb21FdmVudHNTZXJ2aWNlIH0gZnJvbSAnLi4vdmlld3MvY29tbW9uL2RvbS1ldmVudHMuc2VydmljZSc7XG4vKipcbiAqIEEgdG9vbGJhciBjb21wb25lbnQgd2hpY2ggY29udGFpbnMgdGhlIGNvbnRyb2xzIGZvciBzd2l0Y2hpbmcgdGhlIHZpZXdzXG4gKiAoW3NlZSBleGFtcGxlXSh7JSBzbHVnIHRvb2xiYXJfc2NoZWR1bGVyICV9I3RvYy1pbmNsdWRpbmctdGhlLWJ1aWx0LWluLWNvbXBvbmVudHMpKS5cbiAqXG4gKiBUbyByZW5kZXIgdGhlIHZpZXctc2VsZWN0aW9uIGJ1dHRvbnMsIGluY2x1ZGUgdGhlIGNvbXBvbmVudCBpbiB0aGVcbiAqIFt0b29sYmFyIHRlbXBsYXRlXSh7JSBzbHVnIGFwaV9zY2hlZHVsZXJfdG9vbGJhcnRlbXBsYXRlZGlyZWN0aXZlICV9KS5cbiAqXG4gKiB7JSBtZXRhIGhlaWdodDo3MDAgJX1cbiAqIHslIGVtYmVkX2ZpbGUgdG9vbGJhci90ZW1wbGF0ZS9hcHAuY29tcG9uZW50LnRzIHByZXZpZXcgJX1cbiAqIHslIGVtYmVkX2ZpbGUgdG9vbGJhci90ZW1wbGF0ZS9teS1uYXZpZ2F0aW9uLmNvbXBvbmVudC50cyAlfVxuICogeyUgZW1iZWRfZmlsZSB0b29sYmFyL3RlbXBsYXRlL2FwcC5tb2R1bGUudHMgJX1cbiAqIHslIGVtYmVkX2ZpbGUgc2hhcmVkL2V2ZW50cy11dGMudHMgJX1cbiAqIHslIGVtYmVkX2ZpbGUgc2hhcmVkL21haW4udHMgJX1cbiAqIHslIGVuZG1ldGEgJX1cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgVG9vbGJhclZpZXdTZWxlY3RvckNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBzZXJ2aWNlO1xuICAgIHByaXZhdGUgZWxlbWVudDtcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xuICAgIHByaXZhdGUgZG9tRXZlbnRzO1xuICAgIHByaXZhdGUgbmdab25lO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBob3N0Q2xhc3NlczogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZXhwYW5kZWQ6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHJlYWRvbmx5IGN0eDogVG9vbGJhckNvbnRleHQ7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHJlYWRvbmx5IGl0ZW1EaXNwbGF5OiBzdHJpbmc7XG4gICAgcHJpdmF0ZSBkZXRhY2hEb21FdmVudHM7XG4gICAgcHJpdmF0ZSBfZXhwYW5kZWQ7XG4gICAgY29uc3RydWN0b3Ioc2VydmljZTogVG9vbGJhclNlcnZpY2UsIGVsZW1lbnQ6IEVsZW1lbnRSZWYsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIGRvbUV2ZW50czogRG9tRXZlbnRzU2VydmljZSwgbmdab25lOiBOZ1pvbmUpO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG9uQ2xpY2sodmlldzogU2NoZWR1bGVyVmlldyk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG9uQ3VycmVudFZpZXdDbGljaygpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBpc1NlbGVjdGVkKHZpZXc6IFNjaGVkdWxlclZpZXcpOiBib29sZWFuO1xuICAgIHByaXZhdGUgYXR0YWNoRWxlbWVudEV2ZW50SGFuZGxlcnM7XG59XG4iXX0=