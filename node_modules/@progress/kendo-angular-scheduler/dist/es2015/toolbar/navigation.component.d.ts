/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, TemplateRef, OnDestroy, ChangeDetectorRef } from '@angular/core';
import { PopupService } from '@progress/kendo-angular-popup';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { ToolbarService } from './toolbar.service';
import { ToolbarContext } from './toolbar-context';
import { CalendarComponent } from '@progress/kendo-angular-dateinputs';
/**
 * A toolbar component which contains the controls for date navigation
 * ([see example]({% slug toolbar_scheduler %}#toc-including-the-built-in-components)).
 *
 * To render the **Previous**, **Today**, **Next**, and **Date picker**
 * buttons, include the component in the
 * [toolbar template]({% slug api_scheduler_toolbartemplatedirective %}).
 *
 * {% meta height:700 %}
 * {% embed_file toolbar/template/app.component.ts preview %}
 * {% embed_file toolbar/template/my-navigation.component.ts %}
 * {% embed_file toolbar/template/app.module.ts %}
 * {% embed_file shared/events-utc.ts %}
 * {% embed_file shared/main.ts %}
 * {% endmeta %}
 */
import * as ɵngcc0 from '@angular/core';
export declare class ToolbarNavigationComponent implements OnDestroy {
    private popupService;
    private toolbarService;
    private localization;
    calendar: CalendarComponent;
    /**
     * @hidden
     */
    hostClasses: boolean;
    /**
     * @hidden
     */
    min: Date;
    /**
     * @hidden
     */
    max: Date;
    /**
     * @hidden
     */
    readonly todayText: string;
    /**
     * @hidden
     */
    readonly calendarTodayText: string;
    /**
     * @hidden
     */
    readonly nextText: string;
    /**
     * @hidden
     */
    readonly previousText: string;
    /**
     * @hidden
     */
    readonly ctx: ToolbarContext;
    private popupRef;
    private subs;
    constructor(popupService: PopupService, toolbarService: ToolbarService, localization: LocalizationService, cd: ChangeDetectorRef);
    /**
     * @hidden
     */
    onBlur(): void;
    ngOnDestroy(): void;
    /**
     * @hidden
     */
    toggleSelectedDate(anchor: ElementRef, template: TemplateRef<any>): boolean;
    /**
     * @hidden
     */
    selectDate(value: Date): void;
    /**
     * @hidden
     */
    prevClick(): boolean;
    /**
     * @hidden
     */
    nextClick(): boolean;
    /**
     * @hidden
     */
    todayClick(): boolean;
    protected closePopup(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ToolbarNavigationComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ToolbarNavigationComponent, "[kendoSchedulerToolbarNavigation]", never, { "min": "min"; "max": "max"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2aWdhdGlvbi5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsibmF2aWdhdGlvbi5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBFbGVtZW50UmVmLCBUZW1wbGF0ZVJlZiwgT25EZXN0cm95LCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUG9wdXBTZXJ2aWNlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItcG9wdXAnO1xuaW1wb3J0IHsgTG9jYWxpemF0aW9uU2VydmljZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWwxMG4nO1xuaW1wb3J0IHsgVG9vbGJhclNlcnZpY2UgfSBmcm9tICcuL3Rvb2xiYXIuc2VydmljZSc7XG5pbXBvcnQgeyBUb29sYmFyQ29udGV4dCB9IGZyb20gJy4vdG9vbGJhci1jb250ZXh0JztcbmltcG9ydCB7IENhbGVuZGFyQ29tcG9uZW50IH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItZGF0ZWlucHV0cyc7XG4vKipcbiAqIEEgdG9vbGJhciBjb21wb25lbnQgd2hpY2ggY29udGFpbnMgdGhlIGNvbnRyb2xzIGZvciBkYXRlIG5hdmlnYXRpb25cbiAqIChbc2VlIGV4YW1wbGVdKHslIHNsdWcgdG9vbGJhcl9zY2hlZHVsZXIgJX0jdG9jLWluY2x1ZGluZy10aGUtYnVpbHQtaW4tY29tcG9uZW50cykpLlxuICpcbiAqIFRvIHJlbmRlciB0aGUgKipQcmV2aW91cyoqLCAqKlRvZGF5KiosICoqTmV4dCoqLCBhbmQgKipEYXRlIHBpY2tlcioqXG4gKiBidXR0b25zLCBpbmNsdWRlIHRoZSBjb21wb25lbnQgaW4gdGhlXG4gKiBbdG9vbGJhciB0ZW1wbGF0ZV0oeyUgc2x1ZyBhcGlfc2NoZWR1bGVyX3Rvb2xiYXJ0ZW1wbGF0ZWRpcmVjdGl2ZSAlfSkuXG4gKlxuICogeyUgbWV0YSBoZWlnaHQ6NzAwICV9XG4gKiB7JSBlbWJlZF9maWxlIHRvb2xiYXIvdGVtcGxhdGUvYXBwLmNvbXBvbmVudC50cyBwcmV2aWV3ICV9XG4gKiB7JSBlbWJlZF9maWxlIHRvb2xiYXIvdGVtcGxhdGUvbXktbmF2aWdhdGlvbi5jb21wb25lbnQudHMgJX1cbiAqIHslIGVtYmVkX2ZpbGUgdG9vbGJhci90ZW1wbGF0ZS9hcHAubW9kdWxlLnRzICV9XG4gKiB7JSBlbWJlZF9maWxlIHNoYXJlZC9ldmVudHMtdXRjLnRzICV9XG4gKiB7JSBlbWJlZF9maWxlIHNoYXJlZC9tYWluLnRzICV9XG4gKiB7JSBlbmRtZXRhICV9XG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFRvb2xiYXJOYXZpZ2F0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIHBvcHVwU2VydmljZTtcbiAgICBwcml2YXRlIHRvb2xiYXJTZXJ2aWNlO1xuICAgIHByaXZhdGUgbG9jYWxpemF0aW9uO1xuICAgIGNhbGVuZGFyOiBDYWxlbmRhckNvbXBvbmVudDtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgaG9zdENsYXNzZXM6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIG1pbjogRGF0ZTtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgbWF4OiBEYXRlO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICByZWFkb25seSB0b2RheVRleHQ6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgcmVhZG9ubHkgY2FsZW5kYXJUb2RheVRleHQ6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgcmVhZG9ubHkgbmV4dFRleHQ6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgcmVhZG9ubHkgcHJldmlvdXNUZXh0OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHJlYWRvbmx5IGN0eDogVG9vbGJhckNvbnRleHQ7XG4gICAgcHJpdmF0ZSBwb3B1cFJlZjtcbiAgICBwcml2YXRlIHN1YnM7XG4gICAgY29uc3RydWN0b3IocG9wdXBTZXJ2aWNlOiBQb3B1cFNlcnZpY2UsIHRvb2xiYXJTZXJ2aWNlOiBUb29sYmFyU2VydmljZSwgbG9jYWxpemF0aW9uOiBMb2NhbGl6YXRpb25TZXJ2aWNlLCBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBvbkJsdXIoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICB0b2dnbGVTZWxlY3RlZERhdGUoYW5jaG9yOiBFbGVtZW50UmVmLCB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55Pik6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHNlbGVjdERhdGUodmFsdWU6IERhdGUpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBwcmV2Q2xpY2soKTogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgbmV4dENsaWNrKCk6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqL1xuICAgIHRvZGF5Q2xpY2soKTogYm9vbGVhbjtcbiAgICBwcm90ZWN0ZWQgY2xvc2VQb3B1cCgpOiB2b2lkO1xufVxuIl19