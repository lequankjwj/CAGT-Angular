/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, Renderer2, NgZone } from '@angular/core';
import { Button } from '@progress/kendo-angular-buttons';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { PDFService } from './pdf.service';
/**
 * Represents the `export-to-PDF` command of the Scheduler.
 * You can apply this directive to any `button` element inside a
 * [`ToolbarTemplate`]({% slug toolbar_scheduler %}).
 * When the user clicks a button that is associated with the directive, the
 * [`pdfExport`]({% slug api_scheduler_schedulercomponent %}#toc-pdfexport) event
 * fires ([see example]({% slug pdfexport_scheduler %})).
 *
 * @example
 * ```html-no-run
 * <kendo-scheduler>
 *      <ng-template kendoSchedulerToolbarTemplate>
 *          <button kendoSchedulerPDFCommand>Export PDF</button>
 *          <ul kendoSchedulerToolbarNavigation></ul>
 *          <ul kendoSchedulerToolbarViewSelector></ul>
 *      </ng-template>
 *      <kendo-scheduler-pdf fileName="Scheduler.pdf">
 *      </kendo-scheduler-pdf>
 * </kendo-scheduler>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class PDFCommandDirective extends Button {
    private pdfService;
    /**
     * @hidden
     */
    onClick(e: any): void;
    constructor(pdfService: PDFService, element: ElementRef, renderer: Renderer2, localization: LocalizationService, ngZone: NgZone);
    ngOnInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PDFCommandDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PDFCommandDirective, "[kendoSchedulerPDFCommand]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGRmLWNvbW1hbmQuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbInBkZi1jb21tYW5kLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBFbGVtZW50UmVmLCBSZW5kZXJlcjIsIE5nWm9uZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItYnV0dG9ucyc7XG5pbXBvcnQgeyBMb2NhbGl6YXRpb25TZXJ2aWNlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItbDEwbic7XG5pbXBvcnQgeyBQREZTZXJ2aWNlIH0gZnJvbSAnLi9wZGYuc2VydmljZSc7XG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIGBleHBvcnQtdG8tUERGYCBjb21tYW5kIG9mIHRoZSBTY2hlZHVsZXIuXG4gKiBZb3UgY2FuIGFwcGx5IHRoaXMgZGlyZWN0aXZlIHRvIGFueSBgYnV0dG9uYCBlbGVtZW50IGluc2lkZSBhXG4gKiBbYFRvb2xiYXJUZW1wbGF0ZWBdKHslIHNsdWcgdG9vbGJhcl9zY2hlZHVsZXIgJX0pLlxuICogV2hlbiB0aGUgdXNlciBjbGlja3MgYSBidXR0b24gdGhhdCBpcyBhc3NvY2lhdGVkIHdpdGggdGhlIGRpcmVjdGl2ZSwgdGhlXG4gKiBbYHBkZkV4cG9ydGBdKHslIHNsdWcgYXBpX3NjaGVkdWxlcl9zY2hlZHVsZXJjb21wb25lbnQgJX0jdG9jLXBkZmV4cG9ydCkgZXZlbnRcbiAqIGZpcmVzIChbc2VlIGV4YW1wbGVdKHslIHNsdWcgcGRmZXhwb3J0X3NjaGVkdWxlciAlfSkpLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBodG1sLW5vLXJ1blxuICogPGtlbmRvLXNjaGVkdWxlcj5cbiAqICAgICAgPG5nLXRlbXBsYXRlIGtlbmRvU2NoZWR1bGVyVG9vbGJhclRlbXBsYXRlPlxuICogICAgICAgICAgPGJ1dHRvbiBrZW5kb1NjaGVkdWxlclBERkNvbW1hbmQ+RXhwb3J0IFBERjwvYnV0dG9uPlxuICogICAgICAgICAgPHVsIGtlbmRvU2NoZWR1bGVyVG9vbGJhck5hdmlnYXRpb24+PC91bD5cbiAqICAgICAgICAgIDx1bCBrZW5kb1NjaGVkdWxlclRvb2xiYXJWaWV3U2VsZWN0b3I+PC91bD5cbiAqICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAqICAgICAgPGtlbmRvLXNjaGVkdWxlci1wZGYgZmlsZU5hbWU9XCJTY2hlZHVsZXIucGRmXCI+XG4gKiAgICAgIDwva2VuZG8tc2NoZWR1bGVyLXBkZj5cbiAqIDwva2VuZG8tc2NoZWR1bGVyPlxuICogYGBgXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBERkNvbW1hbmREaXJlY3RpdmUgZXh0ZW5kcyBCdXR0b24ge1xuICAgIHByaXZhdGUgcGRmU2VydmljZTtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgb25DbGljayhlOiBhbnkpOiB2b2lkO1xuICAgIGNvbnN0cnVjdG9yKHBkZlNlcnZpY2U6IFBERlNlcnZpY2UsIGVsZW1lbnQ6IEVsZW1lbnRSZWYsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIGxvY2FsaXphdGlvbjogTG9jYWxpemF0aW9uU2VydmljZSwgbmdab25lOiBOZ1pvbmUpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG59XG4iXX0=