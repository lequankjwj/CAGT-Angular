/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { OnDestroy, NgZone } from '@angular/core';
import { PDFService } from './pdf.service';
import { pdf } from '@progress/kendo-drawing';
/**
 * Configures the settings for the export of Scheduler in PDF ([see example]({% slug pdfexport_scheduler %})).
 */
import * as ɵngcc0 from '@angular/core';
export declare class PDFComponent implements OnDestroy {
    protected pdfService: PDFService;
    protected ngZone: NgZone;
    /**
     * The author (metadata) of the PDF document.
     */
    author: string;
    /**
     * A flag that indicates whether to produce actual hyperlinks in the exported PDF file.
     * It is also possible to set a CSS selector. All matching links will be ignored.
     */
    avoidLinks: boolean | string;
    /**
     * The creator of the PDF document.
     * Defaults to `Kendo UI PDF Generator`.
     */
    creator: string;
    /**
     * The date when the PDF document is created. Defaults to `new Date()`.
     */
    date: Date;
    /**
     * The forced resolution of the images in the exported PDF document.
     * By default, the images are exported at their full resolution.
     */
    imageResolution: number;
    /**
     * Specifies the name of the exported PDF file.
     */
    fileName: string;
    /**
     * If set to `true`, the content is forwarded to `proxyURL` even if the
     * browser supports local saving of files.
     */
    forceProxy: boolean;
    /**
     * The keywords (metadata) of the PDF document.
     */
    keywords: string;
    /**
     * Specifies the margins of the page.
     *
     * > Numbers are treated as points (`"pt"`).
     *
     * The supported units are:
     * * `"mm"`
     * * `"cm"`
     * * `"in"`
     * * `"pt"` (default).
     *
     */
    margin: string | number | pdf.PageMargin;
    /**
     * A scale factor. The text size on the screen might be too big for printing.
     * To scale down the output in PDF, use this option.
     * Defaults to `1`.
     */
    scale: number;
    /**
     * A key/value dictionary of form values which will be sent to the proxy.
     * Can be used to submit Anti-Forgery tokens and other metadata.
     */
    proxyData?: {
        [key: string]: string;
    };
    /**
     * The URL of the server-side proxy which streams the file to the end user. You need to use a proxy if
     * the browser is not capable of saving files locally&mdash;for example, Internet Explorer 9 and Safari.
     * It is your responsibility to implement the server-side proxy. The proxy returns the decoded file with
     * the `"Content-Disposition"` header set to `attachment; filename="<fileName.pdf>"`.
     *
     * In the request body, the proxy receives a POST request with the following parameters:
     * - `"contentType"`&mdash;The MIME type of the file.
     * - `"base64"`&mdash;The base-64 encoded file content.
     * - `"fileName"`&mdash;The file name, as requested by the caller.
     *
     */
    proxyURL: string;
    /**
     * A name or keyword which indicates where to display the document that is
     * returned from the proxy. Defaults to `_self`.
     *
     * To display the document in a new window or iframe, the proxy has to have the
     * `"Content-Disposition"` header set to `inline; filename="<fileName.pdf>"`.
     */
    proxyTarget: string;
    /**
     * The producer (metadata) of the PDF document.
     */
    producer: string;
    /**
     * The subject (metadata) of the PDF document.
     */
    subject: string;
    /**
     * The title (metadata) of the PDF document.
     */
    title: string;
    private subscriptions;
    private container;
    constructor(pdfService: PDFService, ngZone: NgZone);
    ngOnDestroy(): void;
    protected readonly drawOptions: any;
    protected readonly pdfOptions: any;
    protected readonly saveOptions: any;
    protected createElement(args: any): void;
    protected save(element: any): void;
    protected drawElement(element: any, options: any): any;
    protected exportGroup(group: any): Promise<string>;
    protected saveDataUri(dataUri: string): void;
    protected done(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PDFComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PDFComponent, "kendo-scheduler-pdf", never, { "creator": "creator"; "author": "author"; "avoidLinks": "avoidLinks"; "date": "date"; "imageResolution": "imageResolution"; "fileName": "fileName"; "forceProxy": "forceProxy"; "keywords": "keywords"; "margin": "margin"; "scale": "scale"; "proxyData": "proxyData"; "proxyURL": "proxyURL"; "proxyTarget": "proxyTarget"; "producer": "producer"; "subject": "subject"; "title": "title"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGRmLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwZGYuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IE9uRGVzdHJveSwgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQREZTZXJ2aWNlIH0gZnJvbSAnLi9wZGYuc2VydmljZSc7XG5pbXBvcnQgeyBwZGYgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tZHJhd2luZyc7XG4vKipcbiAqIENvbmZpZ3VyZXMgdGhlIHNldHRpbmdzIGZvciB0aGUgZXhwb3J0IG9mIFNjaGVkdWxlciBpbiBQREYgKFtzZWUgZXhhbXBsZV0oeyUgc2x1ZyBwZGZleHBvcnRfc2NoZWR1bGVyICV9KSkuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBERkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gICAgcHJvdGVjdGVkIHBkZlNlcnZpY2U6IFBERlNlcnZpY2U7XG4gICAgcHJvdGVjdGVkIG5nWm9uZTogTmdab25lO1xuICAgIC8qKlxuICAgICAqIFRoZSBhdXRob3IgKG1ldGFkYXRhKSBvZiB0aGUgUERGIGRvY3VtZW50LlxuICAgICAqL1xuICAgIGF1dGhvcjogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEEgZmxhZyB0aGF0IGluZGljYXRlcyB3aGV0aGVyIHRvIHByb2R1Y2UgYWN0dWFsIGh5cGVybGlua3MgaW4gdGhlIGV4cG9ydGVkIFBERiBmaWxlLlxuICAgICAqIEl0IGlzIGFsc28gcG9zc2libGUgdG8gc2V0IGEgQ1NTIHNlbGVjdG9yLiBBbGwgbWF0Y2hpbmcgbGlua3Mgd2lsbCBiZSBpZ25vcmVkLlxuICAgICAqL1xuICAgIGF2b2lkTGlua3M6IGJvb2xlYW4gfCBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIGNyZWF0b3Igb2YgdGhlIFBERiBkb2N1bWVudC5cbiAgICAgKiBEZWZhdWx0cyB0byBgS2VuZG8gVUkgUERGIEdlbmVyYXRvcmAuXG4gICAgICovXG4gICAgY3JlYXRvcjogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSBkYXRlIHdoZW4gdGhlIFBERiBkb2N1bWVudCBpcyBjcmVhdGVkLiBEZWZhdWx0cyB0byBgbmV3IERhdGUoKWAuXG4gICAgICovXG4gICAgZGF0ZTogRGF0ZTtcbiAgICAvKipcbiAgICAgKiBUaGUgZm9yY2VkIHJlc29sdXRpb24gb2YgdGhlIGltYWdlcyBpbiB0aGUgZXhwb3J0ZWQgUERGIGRvY3VtZW50LlxuICAgICAqIEJ5IGRlZmF1bHQsIHRoZSBpbWFnZXMgYXJlIGV4cG9ydGVkIGF0IHRoZWlyIGZ1bGwgcmVzb2x1dGlvbi5cbiAgICAgKi9cbiAgICBpbWFnZVJlc29sdXRpb246IG51bWJlcjtcbiAgICAvKipcbiAgICAgKiBTcGVjaWZpZXMgdGhlIG5hbWUgb2YgdGhlIGV4cG9ydGVkIFBERiBmaWxlLlxuICAgICAqL1xuICAgIGZpbGVOYW1lOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogSWYgc2V0IHRvIGB0cnVlYCwgdGhlIGNvbnRlbnQgaXMgZm9yd2FyZGVkIHRvIGBwcm94eVVSTGAgZXZlbiBpZiB0aGVcbiAgICAgKiBicm93c2VyIHN1cHBvcnRzIGxvY2FsIHNhdmluZyBvZiBmaWxlcy5cbiAgICAgKi9cbiAgICBmb3JjZVByb3h5OiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIFRoZSBrZXl3b3JkcyAobWV0YWRhdGEpIG9mIHRoZSBQREYgZG9jdW1lbnQuXG4gICAgICovXG4gICAga2V5d29yZHM6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBTcGVjaWZpZXMgdGhlIG1hcmdpbnMgb2YgdGhlIHBhZ2UuXG4gICAgICpcbiAgICAgKiA+IE51bWJlcnMgYXJlIHRyZWF0ZWQgYXMgcG9pbnRzIChgXCJwdFwiYCkuXG4gICAgICpcbiAgICAgKiBUaGUgc3VwcG9ydGVkIHVuaXRzIGFyZTpcbiAgICAgKiAqIGBcIm1tXCJgXG4gICAgICogKiBgXCJjbVwiYFxuICAgICAqICogYFwiaW5cImBcbiAgICAgKiAqIGBcInB0XCJgIChkZWZhdWx0KS5cbiAgICAgKlxuICAgICAqL1xuICAgIG1hcmdpbjogc3RyaW5nIHwgbnVtYmVyIHwgcGRmLlBhZ2VNYXJnaW47XG4gICAgLyoqXG4gICAgICogQSBzY2FsZSBmYWN0b3IuIFRoZSB0ZXh0IHNpemUgb24gdGhlIHNjcmVlbiBtaWdodCBiZSB0b28gYmlnIGZvciBwcmludGluZy5cbiAgICAgKiBUbyBzY2FsZSBkb3duIHRoZSBvdXRwdXQgaW4gUERGLCB1c2UgdGhpcyBvcHRpb24uXG4gICAgICogRGVmYXVsdHMgdG8gYDFgLlxuICAgICAqL1xuICAgIHNjYWxlOiBudW1iZXI7XG4gICAgLyoqXG4gICAgICogQSBrZXkvdmFsdWUgZGljdGlvbmFyeSBvZiBmb3JtIHZhbHVlcyB3aGljaCB3aWxsIGJlIHNlbnQgdG8gdGhlIHByb3h5LlxuICAgICAqIENhbiBiZSB1c2VkIHRvIHN1Ym1pdCBBbnRpLUZvcmdlcnkgdG9rZW5zIGFuZCBvdGhlciBtZXRhZGF0YS5cbiAgICAgKi9cbiAgICBwcm94eURhdGE/OiB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IHN0cmluZztcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFRoZSBVUkwgb2YgdGhlIHNlcnZlci1zaWRlIHByb3h5IHdoaWNoIHN0cmVhbXMgdGhlIGZpbGUgdG8gdGhlIGVuZCB1c2VyLiBZb3UgbmVlZCB0byB1c2UgYSBwcm94eSBpZlxuICAgICAqIHRoZSBicm93c2VyIGlzIG5vdCBjYXBhYmxlIG9mIHNhdmluZyBmaWxlcyBsb2NhbGx5Jm1kYXNoO2ZvciBleGFtcGxlLCBJbnRlcm5ldCBFeHBsb3JlciA5IGFuZCBTYWZhcmkuXG4gICAgICogSXQgaXMgeW91ciByZXNwb25zaWJpbGl0eSB0byBpbXBsZW1lbnQgdGhlIHNlcnZlci1zaWRlIHByb3h5LiBUaGUgcHJveHkgcmV0dXJucyB0aGUgZGVjb2RlZCBmaWxlIHdpdGhcbiAgICAgKiB0aGUgYFwiQ29udGVudC1EaXNwb3NpdGlvblwiYCBoZWFkZXIgc2V0IHRvIGBhdHRhY2htZW50OyBmaWxlbmFtZT1cIjxmaWxlTmFtZS5wZGY+XCJgLlxuICAgICAqXG4gICAgICogSW4gdGhlIHJlcXVlc3QgYm9keSwgdGhlIHByb3h5IHJlY2VpdmVzIGEgUE9TVCByZXF1ZXN0IHdpdGggdGhlIGZvbGxvd2luZyBwYXJhbWV0ZXJzOlxuICAgICAqIC0gYFwiY29udGVudFR5cGVcImAmbWRhc2g7VGhlIE1JTUUgdHlwZSBvZiB0aGUgZmlsZS5cbiAgICAgKiAtIGBcImJhc2U2NFwiYCZtZGFzaDtUaGUgYmFzZS02NCBlbmNvZGVkIGZpbGUgY29udGVudC5cbiAgICAgKiAtIGBcImZpbGVOYW1lXCJgJm1kYXNoO1RoZSBmaWxlIG5hbWUsIGFzIHJlcXVlc3RlZCBieSB0aGUgY2FsbGVyLlxuICAgICAqXG4gICAgICovXG4gICAgcHJveHlVUkw6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBBIG5hbWUgb3Iga2V5d29yZCB3aGljaCBpbmRpY2F0ZXMgd2hlcmUgdG8gZGlzcGxheSB0aGUgZG9jdW1lbnQgdGhhdCBpc1xuICAgICAqIHJldHVybmVkIGZyb20gdGhlIHByb3h5LiBEZWZhdWx0cyB0byBgX3NlbGZgLlxuICAgICAqXG4gICAgICogVG8gZGlzcGxheSB0aGUgZG9jdW1lbnQgaW4gYSBuZXcgd2luZG93IG9yIGlmcmFtZSwgdGhlIHByb3h5IGhhcyB0byBoYXZlIHRoZVxuICAgICAqIGBcIkNvbnRlbnQtRGlzcG9zaXRpb25cImAgaGVhZGVyIHNldCB0byBgaW5saW5lOyBmaWxlbmFtZT1cIjxmaWxlTmFtZS5wZGY+XCJgLlxuICAgICAqL1xuICAgIHByb3h5VGFyZ2V0OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIHByb2R1Y2VyIChtZXRhZGF0YSkgb2YgdGhlIFBERiBkb2N1bWVudC5cbiAgICAgKi9cbiAgICBwcm9kdWNlcjogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSBzdWJqZWN0IChtZXRhZGF0YSkgb2YgdGhlIFBERiBkb2N1bWVudC5cbiAgICAgKi9cbiAgICBzdWJqZWN0OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIHRpdGxlIChtZXRhZGF0YSkgb2YgdGhlIFBERiBkb2N1bWVudC5cbiAgICAgKi9cbiAgICB0aXRsZTogc3RyaW5nO1xuICAgIHByaXZhdGUgc3Vic2NyaXB0aW9ucztcbiAgICBwcml2YXRlIGNvbnRhaW5lcjtcbiAgICBjb25zdHJ1Y3RvcihwZGZTZXJ2aWNlOiBQREZTZXJ2aWNlLCBuZ1pvbmU6IE5nWm9uZSk7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgZHJhd09wdGlvbnM6IGFueTtcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgcGRmT3B0aW9uczogYW55O1xuICAgIHByb3RlY3RlZCByZWFkb25seSBzYXZlT3B0aW9uczogYW55O1xuICAgIHByb3RlY3RlZCBjcmVhdGVFbGVtZW50KGFyZ3M6IGFueSk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIHNhdmUoZWxlbWVudDogYW55KTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgZHJhd0VsZW1lbnQoZWxlbWVudDogYW55LCBvcHRpb25zOiBhbnkpOiBhbnk7XG4gICAgcHJvdGVjdGVkIGV4cG9ydEdyb3VwKGdyb3VwOiBhbnkpOiBQcm9taXNlPHN0cmluZz47XG4gICAgcHJvdGVjdGVkIHNhdmVEYXRhVXJpKGRhdGFVcmk6IHN0cmluZyk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIGRvbmUoKTogdm9pZDtcbn1cbiJdfQ==