/**-----------------------------------------------------------------------------------------
* Copyright Â© 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { CalendarView, DateInputFormatPlaceholder, PopupSettings } from '@progress/kendo-angular-dateinputs';
import { Day } from '@progress/kendo-date-math';
/**
 * The available configuration options for the DatePicker component, used internally in the recurrence editor.
 */
export interface DatePickerOptions {
    /**
     * Defines the active view that the Calendar initially renders
     * ([see example]({% slug activeview_datepicker %})).
     * By default, the active view is `month`.
     *
     * > You have to set `activeView` within the `topView`-`bottomView` range.
     */
    activeView?: CalendarView;
    /**
     * Defines the bottommost Calendar view to which the user can navigate
     * ([see example]({% slug dates_datepicker %}#toc-partial-dates)).
     */
    bottomView?: CalendarView;
    /**
     * Determines whether the built-in validator for disabled
     * date ranges is enforced when validating a form
     * ([see example]({% slug disabled_dates_datepicker %}#toc-validation)).
     */
    disabledDatesValidation?: boolean;
    /**
     * Specifies the focused date of the Calendar component
     * ([see example]({% slug dates_datepicker %})).
     */
    focusedDate?: Date;
    /**
     * Specifies the date format that is used to display the input value
     * ([see example]({% slug formats_datepicker %})).
     */
    format?: string;
    /**
     * Defines the descriptions of the format sections in the input field.
     * ([more information and examples]({% slug placeholders_datepicker %})).
     */
    formatPlaceHolder?: DateInputFormatPlaceholder;
    /**
     * Specifies the biggest valid date
     * ([see example]({% slug dateranges_datepicker %})).
     */
    max?: Date;
    /**
     * Specifies the smallest valid date
     * ([see example]({% slug dateranges_datepicker %})).
     */
    min?: Date;
    /**
     * Sets or gets the `navigation` property of the Calendar
     * and determines whether the navigation side-bar is displayed.
     * ([see example]({% slug sidebar_datepicker %})).
     */
    navigation?: boolean;
    /**
     * Specifies the hint the DatePicker displays when its value is `null`.
     * ([more information and examples]({% slug placeholders_datepicker %})).
     */
    placeholder?: string;
    /**
     * Sets the read-only state of the DatePicker input field
     * ([see example]({% slug readonly_datepicker %}#toc-read-only-input)).
     *
     * > Note that if you set the [`readonly`]({% slug api_dateinputs_datepickercomponent %}#toc-readonly) property value to `true`,
     * the input will be rendered in a read-only state regardless of the `readOnlyInput` value.
     */
    readOnlyInput?: boolean;
    /**
     * Sets the read-only state of the DatePicker
     * ([see example]({% slug readonly_datepicker %}#toc-read-only-datepicker)).
     */
    readonly?: boolean;
    /**
     * Sets the title of the input element of the DatePicker.
     */
    title?: string;
    /**
     * Defines the topmost Calendar view to which the user can navigate
     * ([see example]({% slug dates_datepicker %}#toc-partial-dates)).
     */
    topView?: CalendarView;
    /**
     * Determines whether to display a week number column in the `month` view of the Calendar
     * ([see example]({% slug weeknumcolumn_datepicker %})).
     */
    weekNumber?: boolean;
    /**
     * Sets the dates of the DatePicker that will be disabled
     * ([see example]({% slug disabled_dates_datepicker %})).
     */
    disabledDates?: (date: Date) => boolean | Date[] | Day[];
    /**
     * Configures the popup options of the DatePicker.
     *
     * The available options are:
     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.
     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.
     */
    popupSettings?: PopupSettings;
}
