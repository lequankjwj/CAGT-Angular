/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ComponentMessages } from '@progress/kendo-angular-l10n';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class Messages extends ComponentMessages {
    /**
     * The text similar to **Repeat** which is displayed in the recurrence editor.
     */
    repeat: string;
    /**
     * The text similar to **day(s)** which is displayed in the recurrence editor.
     */
    dailyInterval: string;
    /**
     * The text similar to **Repeat every** which is displayed in the recurrence editor.
     */
    dailyRepeatEvery: string;
    /**
     * The text similar to **week(s)** which is displayed in the recurrence editor.
     */
    weeklyInterval: string;
    /**
     * The text similar to **Repeat every** which is displayed in the recurrence editor.
     */
    weeklyRepeatEvery: string;
    /**
     * The text similar to **Repeat on** which is displayed in the recurrence editor.
     */
    weeklyRepeatOn: string;
    /**
     * The text similar to **Day** which is displayed in the recurrence editor.
     */
    monthlyDay: string;
    /**
     * The text similar to **month(s)** which is displayed in the recurrence editor.
     */
    monthlyInterval: string;
    /**
     * The text similar to **Repeat every** which is displayed in the recurrence editor.
     */
    monthlyRepeatEvery: string;
    /**
     * The text similar to **Repeat on** which is displayed in the recurrence editor.
     */
    monthlyRepeatOn: string;
    /**
     * The text similar to **of** which is displayed in the recurrence editor.
     */
    yearlyOf: string;
    /**
     * The text similar to **Repeat every** which is displayed in the recurrence editor.
     */
    yearlyRepeatEvery: string;
    /**
     * The text similar to **Repeat on** which is displayed in the recurrence editor.
     */
    yearlyRepeatOn: string;
    /**
     * The text similar to **year(s)** which is displayed in the recurrence editor.
     */
    yearlyInterval: string;
    /**
     * The text similar to **Daily** which is displayed in the recurrence editor.
     */
    frequenciesDaily: string;
    /**
     * The text similar to **Monthly** which is displayed in the recurrence editor.
     */
    frequenciesMonthly: string;
    /**
     * The text similar to **Never** which is displayed in the recurrence editor.
     */
    frequenciesNever: string;
    /**
     * The text similar to **Weekly** which is displayed in the recurrence editor.
     */
    frequenciesWeekly: string;
    /**
     * The text similar to **Yearly** which is displayed in the recurrence editor.
     */
    frequenciesYearly: string;
    /**
     * The text similar to **First** which is displayed in the recurrence editor.
     */
    offsetPositionsFirst: string;
    /**
     * The text similar to **Second** which is displayed in the recurrence editor.
     */
    offsetPositionsSecond: string;
    /**
     * The text similar to **Third** which is displayed in the recurrence editor.
     */
    offsetPositionsThird: string;
    /**
     * The text similar to **Fourth** which is displayed in the recurrence editor.
     */
    offsetPositionsFourth: string;
    /**
     * The text similar to **Last** which is displayed in the recurrence editor.
     */
    offsetPositionsLast: string;
    /**
     * The text similar to **Day** which is displayed in the repeat-by-section of the monthly recurrence pattern.
     */
    weekdaysDay: string;
    /**
     * The text similar to **Weekday** which is displayed in the repeat-by-section of the monthly recurrence pattern.
     */
    weekdaysWeekday: string;
    /**
     * The text similar to **Weekend Day** which is displayed in the repeat-by-section of the monthly recurrence pattern.
     */
    weekdaysWeekendday: string;
    /**
     * The text similar to **After** which is displayed in the recurrence editor.
     */
    endAfter: string;
    /**
     * The text similar to **occurrence(s)** which is displayed in the recurrence editor.
     */
    endOccurrence: string;
    /**
     * The text similar to **End** which is displayed in the recurrence editor.
     */
    endLabel: string;
    /**
     * The text similar to **Never** which is displayed in the recurrence editor.
     */
    endNever: string;
    /**
     * The text similar to **On** which is displayed in the recurrence editor.
     */
    endOn: string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Messages, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<Messages, never, never, { "repeat": "repeat"; "dailyInterval": "dailyInterval"; "dailyRepeatEvery": "dailyRepeatEvery"; "weeklyInterval": "weeklyInterval"; "weeklyRepeatEvery": "weeklyRepeatEvery"; "weeklyRepeatOn": "weeklyRepeatOn"; "monthlyDay": "monthlyDay"; "monthlyInterval": "monthlyInterval"; "monthlyRepeatEvery": "monthlyRepeatEvery"; "monthlyRepeatOn": "monthlyRepeatOn"; "yearlyOf": "yearlyOf"; "yearlyRepeatEvery": "yearlyRepeatEvery"; "yearlyRepeatOn": "yearlyRepeatOn"; "yearlyInterval": "yearlyInterval"; "frequenciesDaily": "frequenciesDaily"; "frequenciesMonthly": "frequenciesMonthly"; "frequenciesNever": "frequenciesNever"; "frequenciesWeekly": "frequenciesWeekly"; "frequenciesYearly": "frequenciesYearly"; "offsetPositionsFirst": "offsetPositionsFirst"; "offsetPositionsSecond": "offsetPositionsSecond"; "offsetPositionsThird": "offsetPositionsThird"; "offsetPositionsFourth": "offsetPositionsFourth"; "offsetPositionsLast": "offsetPositionsLast"; "weekdaysDay": "weekdaysDay"; "weekdaysWeekday": "weekdaysWeekday"; "weekdaysWeekendday": "weekdaysWeekendday"; "endAfter": "endAfter"; "endOccurrence": "endOccurrence"; "endLabel": "endLabel"; "endNever": "endNever"; "endOn": "endOn"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZXMuZC50cyIsInNvdXJjZXMiOlsibWVzc2FnZXMuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBDb21wb25lbnRNZXNzYWdlcyB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWwxMG4nO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE1lc3NhZ2VzIGV4dGVuZHMgQ29tcG9uZW50TWVzc2FnZXMge1xuICAgIC8qKlxuICAgICAqIFRoZSB0ZXh0IHNpbWlsYXIgdG8gKipSZXBlYXQqKiB3aGljaCBpcyBkaXNwbGF5ZWQgaW4gdGhlIHJlY3VycmVuY2UgZWRpdG9yLlxuICAgICAqL1xuICAgIHJlcGVhdDogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSB0ZXh0IHNpbWlsYXIgdG8gKipkYXkocykqKiB3aGljaCBpcyBkaXNwbGF5ZWQgaW4gdGhlIHJlY3VycmVuY2UgZWRpdG9yLlxuICAgICAqL1xuICAgIGRhaWx5SW50ZXJ2YWw6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgdGV4dCBzaW1pbGFyIHRvICoqUmVwZWF0IGV2ZXJ5Kiogd2hpY2ggaXMgZGlzcGxheWVkIGluIHRoZSByZWN1cnJlbmNlIGVkaXRvci5cbiAgICAgKi9cbiAgICBkYWlseVJlcGVhdEV2ZXJ5OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIHRleHQgc2ltaWxhciB0byAqKndlZWsocykqKiB3aGljaCBpcyBkaXNwbGF5ZWQgaW4gdGhlIHJlY3VycmVuY2UgZWRpdG9yLlxuICAgICAqL1xuICAgIHdlZWtseUludGVydmFsOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIHRleHQgc2ltaWxhciB0byAqKlJlcGVhdCBldmVyeSoqIHdoaWNoIGlzIGRpc3BsYXllZCBpbiB0aGUgcmVjdXJyZW5jZSBlZGl0b3IuXG4gICAgICovXG4gICAgd2Vla2x5UmVwZWF0RXZlcnk6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgdGV4dCBzaW1pbGFyIHRvICoqUmVwZWF0IG9uKiogd2hpY2ggaXMgZGlzcGxheWVkIGluIHRoZSByZWN1cnJlbmNlIGVkaXRvci5cbiAgICAgKi9cbiAgICB3ZWVrbHlSZXBlYXRPbjogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSB0ZXh0IHNpbWlsYXIgdG8gKipEYXkqKiB3aGljaCBpcyBkaXNwbGF5ZWQgaW4gdGhlIHJlY3VycmVuY2UgZWRpdG9yLlxuICAgICAqL1xuICAgIG1vbnRobHlEYXk6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgdGV4dCBzaW1pbGFyIHRvICoqbW9udGgocykqKiB3aGljaCBpcyBkaXNwbGF5ZWQgaW4gdGhlIHJlY3VycmVuY2UgZWRpdG9yLlxuICAgICAqL1xuICAgIG1vbnRobHlJbnRlcnZhbDogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSB0ZXh0IHNpbWlsYXIgdG8gKipSZXBlYXQgZXZlcnkqKiB3aGljaCBpcyBkaXNwbGF5ZWQgaW4gdGhlIHJlY3VycmVuY2UgZWRpdG9yLlxuICAgICAqL1xuICAgIG1vbnRobHlSZXBlYXRFdmVyeTogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSB0ZXh0IHNpbWlsYXIgdG8gKipSZXBlYXQgb24qKiB3aGljaCBpcyBkaXNwbGF5ZWQgaW4gdGhlIHJlY3VycmVuY2UgZWRpdG9yLlxuICAgICAqL1xuICAgIG1vbnRobHlSZXBlYXRPbjogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSB0ZXh0IHNpbWlsYXIgdG8gKipvZioqIHdoaWNoIGlzIGRpc3BsYXllZCBpbiB0aGUgcmVjdXJyZW5jZSBlZGl0b3IuXG4gICAgICovXG4gICAgeWVhcmx5T2Y6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgdGV4dCBzaW1pbGFyIHRvICoqUmVwZWF0IGV2ZXJ5Kiogd2hpY2ggaXMgZGlzcGxheWVkIGluIHRoZSByZWN1cnJlbmNlIGVkaXRvci5cbiAgICAgKi9cbiAgICB5ZWFybHlSZXBlYXRFdmVyeTogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSB0ZXh0IHNpbWlsYXIgdG8gKipSZXBlYXQgb24qKiB3aGljaCBpcyBkaXNwbGF5ZWQgaW4gdGhlIHJlY3VycmVuY2UgZWRpdG9yLlxuICAgICAqL1xuICAgIHllYXJseVJlcGVhdE9uOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIHRleHQgc2ltaWxhciB0byAqKnllYXIocykqKiB3aGljaCBpcyBkaXNwbGF5ZWQgaW4gdGhlIHJlY3VycmVuY2UgZWRpdG9yLlxuICAgICAqL1xuICAgIHllYXJseUludGVydmFsOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIHRleHQgc2ltaWxhciB0byAqKkRhaWx5Kiogd2hpY2ggaXMgZGlzcGxheWVkIGluIHRoZSByZWN1cnJlbmNlIGVkaXRvci5cbiAgICAgKi9cbiAgICBmcmVxdWVuY2llc0RhaWx5OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIHRleHQgc2ltaWxhciB0byAqKk1vbnRobHkqKiB3aGljaCBpcyBkaXNwbGF5ZWQgaW4gdGhlIHJlY3VycmVuY2UgZWRpdG9yLlxuICAgICAqL1xuICAgIGZyZXF1ZW5jaWVzTW9udGhseTogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSB0ZXh0IHNpbWlsYXIgdG8gKipOZXZlcioqIHdoaWNoIGlzIGRpc3BsYXllZCBpbiB0aGUgcmVjdXJyZW5jZSBlZGl0b3IuXG4gICAgICovXG4gICAgZnJlcXVlbmNpZXNOZXZlcjogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSB0ZXh0IHNpbWlsYXIgdG8gKipXZWVrbHkqKiB3aGljaCBpcyBkaXNwbGF5ZWQgaW4gdGhlIHJlY3VycmVuY2UgZWRpdG9yLlxuICAgICAqL1xuICAgIGZyZXF1ZW5jaWVzV2Vla2x5OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIHRleHQgc2ltaWxhciB0byAqKlllYXJseSoqIHdoaWNoIGlzIGRpc3BsYXllZCBpbiB0aGUgcmVjdXJyZW5jZSBlZGl0b3IuXG4gICAgICovXG4gICAgZnJlcXVlbmNpZXNZZWFybHk6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgdGV4dCBzaW1pbGFyIHRvICoqRmlyc3QqKiB3aGljaCBpcyBkaXNwbGF5ZWQgaW4gdGhlIHJlY3VycmVuY2UgZWRpdG9yLlxuICAgICAqL1xuICAgIG9mZnNldFBvc2l0aW9uc0ZpcnN0OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIHRleHQgc2ltaWxhciB0byAqKlNlY29uZCoqIHdoaWNoIGlzIGRpc3BsYXllZCBpbiB0aGUgcmVjdXJyZW5jZSBlZGl0b3IuXG4gICAgICovXG4gICAgb2Zmc2V0UG9zaXRpb25zU2Vjb25kOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIHRleHQgc2ltaWxhciB0byAqKlRoaXJkKiogd2hpY2ggaXMgZGlzcGxheWVkIGluIHRoZSByZWN1cnJlbmNlIGVkaXRvci5cbiAgICAgKi9cbiAgICBvZmZzZXRQb3NpdGlvbnNUaGlyZDogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSB0ZXh0IHNpbWlsYXIgdG8gKipGb3VydGgqKiB3aGljaCBpcyBkaXNwbGF5ZWQgaW4gdGhlIHJlY3VycmVuY2UgZWRpdG9yLlxuICAgICAqL1xuICAgIG9mZnNldFBvc2l0aW9uc0ZvdXJ0aDogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSB0ZXh0IHNpbWlsYXIgdG8gKipMYXN0Kiogd2hpY2ggaXMgZGlzcGxheWVkIGluIHRoZSByZWN1cnJlbmNlIGVkaXRvci5cbiAgICAgKi9cbiAgICBvZmZzZXRQb3NpdGlvbnNMYXN0OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIHRleHQgc2ltaWxhciB0byAqKkRheSoqIHdoaWNoIGlzIGRpc3BsYXllZCBpbiB0aGUgcmVwZWF0LWJ5LXNlY3Rpb24gb2YgdGhlIG1vbnRobHkgcmVjdXJyZW5jZSBwYXR0ZXJuLlxuICAgICAqL1xuICAgIHdlZWtkYXlzRGF5OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIHRleHQgc2ltaWxhciB0byAqKldlZWtkYXkqKiB3aGljaCBpcyBkaXNwbGF5ZWQgaW4gdGhlIHJlcGVhdC1ieS1zZWN0aW9uIG9mIHRoZSBtb250aGx5IHJlY3VycmVuY2UgcGF0dGVybi5cbiAgICAgKi9cbiAgICB3ZWVrZGF5c1dlZWtkYXk6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgdGV4dCBzaW1pbGFyIHRvICoqV2Vla2VuZCBEYXkqKiB3aGljaCBpcyBkaXNwbGF5ZWQgaW4gdGhlIHJlcGVhdC1ieS1zZWN0aW9uIG9mIHRoZSBtb250aGx5IHJlY3VycmVuY2UgcGF0dGVybi5cbiAgICAgKi9cbiAgICB3ZWVrZGF5c1dlZWtlbmRkYXk6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgdGV4dCBzaW1pbGFyIHRvICoqQWZ0ZXIqKiB3aGljaCBpcyBkaXNwbGF5ZWQgaW4gdGhlIHJlY3VycmVuY2UgZWRpdG9yLlxuICAgICAqL1xuICAgIGVuZEFmdGVyOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIHRleHQgc2ltaWxhciB0byAqKm9jY3VycmVuY2UocykqKiB3aGljaCBpcyBkaXNwbGF5ZWQgaW4gdGhlIHJlY3VycmVuY2UgZWRpdG9yLlxuICAgICAqL1xuICAgIGVuZE9jY3VycmVuY2U6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgdGV4dCBzaW1pbGFyIHRvICoqRW5kKiogd2hpY2ggaXMgZGlzcGxheWVkIGluIHRoZSByZWN1cnJlbmNlIGVkaXRvci5cbiAgICAgKi9cbiAgICBlbmRMYWJlbDogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSB0ZXh0IHNpbWlsYXIgdG8gKipOZXZlcioqIHdoaWNoIGlzIGRpc3BsYXllZCBpbiB0aGUgcmVjdXJyZW5jZSBlZGl0b3IuXG4gICAgICovXG4gICAgZW5kTmV2ZXI6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgdGV4dCBzaW1pbGFyIHRvICoqT24qKiB3aGljaCBpcyBkaXNwbGF5ZWQgaW4gdGhlIHJlY3VycmVuY2UgZWRpdG9yLlxuICAgICAqL1xuICAgIGVuZE9uOiBzdHJpbmc7XG59XG4iXX0=