/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { DatePickerOptions } from './../../types/datepicker-options.interface';
import { OnDestroy, QueryList } from '@angular/core';
import { RecurrenceService, EndRule } from './recurrence.service';
import { RecurrenceRule } from '@progress/kendo-recurrence';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { EndRuleRadioButtonDirective } from './end-rule-radio-button.directive';
import { NumericTextBoxOptions } from '../../types/numeric-options.interface';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class RecurrenceEndRuleEditorComponent implements OnDestroy {
    private recurrence;
    private localization;
    userNumericOptions: NumericTextBoxOptions;
    userDatePickerOptions: DatePickerOptions;
    endRuleRadioButtons: QueryList<EndRuleRadioButtonDirective>;
    countValue: number;
    untilValue: Date;
    numericOptions: NumericTextBoxOptions;
    datePickerOptions: DatePickerOptions;
    uniqueId: number;
    private subscriptions;
    constructor(recurrence: RecurrenceService, localization: LocalizationService);
    ngOnDestroy(): void;
    setEndRule(endRule: EndRule): void;
    readonly rrule: RecurrenceRule;
    readonly isCountDisabled: boolean;
    readonly isUntilDisabled: boolean;
    onCountChange(value: number): void;
    onCountBlur(): void;
    onUntilChange(value: Date): void;
    onUntilBlur(): void;
    textFor(key: string): string;
    onEndLabelClick(): void;
    private setInitialValues;
    private subscribeChanges;
    private createUntil;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<RecurrenceEndRuleEditorComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<RecurrenceEndRuleEditorComponent, "kendo-recurrence-end-rule-editor", never, { "userNumericOptions": "userNumericOptions"; "userDatePickerOptions": "userDatePickerOptions"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVjdXJyZW5jZS1lbmQtcnVsZS1lZGl0b3IuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInJlY3VycmVuY2UtZW5kLXJ1bGUtZWRpdG9yLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IERhdGVQaWNrZXJPcHRpb25zIH0gZnJvbSAnLi8uLi8uLi90eXBlcy9kYXRlcGlja2VyLW9wdGlvbnMuaW50ZXJmYWNlJztcbmltcG9ydCB7IE9uRGVzdHJveSwgUXVlcnlMaXN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSZWN1cnJlbmNlU2VydmljZSwgRW5kUnVsZSB9IGZyb20gJy4vcmVjdXJyZW5jZS5zZXJ2aWNlJztcbmltcG9ydCB7IFJlY3VycmVuY2VSdWxlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLXJlY3VycmVuY2UnO1xuaW1wb3J0IHsgTG9jYWxpemF0aW9uU2VydmljZSB9IGZyb20gJ0Bwcm9ncmVzcy9rZW5kby1hbmd1bGFyLWwxMG4nO1xuaW1wb3J0IHsgRW5kUnVsZVJhZGlvQnV0dG9uRGlyZWN0aXZlIH0gZnJvbSAnLi9lbmQtcnVsZS1yYWRpby1idXR0b24uZGlyZWN0aXZlJztcbmltcG9ydCB7IE51bWVyaWNUZXh0Qm94T3B0aW9ucyB9IGZyb20gJy4uLy4uL3R5cGVzL251bWVyaWMtb3B0aW9ucy5pbnRlcmZhY2UnO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFJlY3VycmVuY2VFbmRSdWxlRWRpdG9yQ29tcG9uZW50IGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIHJlY3VycmVuY2U7XG4gICAgcHJpdmF0ZSBsb2NhbGl6YXRpb247XG4gICAgdXNlck51bWVyaWNPcHRpb25zOiBOdW1lcmljVGV4dEJveE9wdGlvbnM7XG4gICAgdXNlckRhdGVQaWNrZXJPcHRpb25zOiBEYXRlUGlja2VyT3B0aW9ucztcbiAgICBlbmRSdWxlUmFkaW9CdXR0b25zOiBRdWVyeUxpc3Q8RW5kUnVsZVJhZGlvQnV0dG9uRGlyZWN0aXZlPjtcbiAgICBjb3VudFZhbHVlOiBudW1iZXI7XG4gICAgdW50aWxWYWx1ZTogRGF0ZTtcbiAgICBudW1lcmljT3B0aW9uczogTnVtZXJpY1RleHRCb3hPcHRpb25zO1xuICAgIGRhdGVQaWNrZXJPcHRpb25zOiBEYXRlUGlja2VyT3B0aW9ucztcbiAgICB1bmlxdWVJZDogbnVtYmVyO1xuICAgIHByaXZhdGUgc3Vic2NyaXB0aW9ucztcbiAgICBjb25zdHJ1Y3RvcihyZWN1cnJlbmNlOiBSZWN1cnJlbmNlU2VydmljZSwgbG9jYWxpemF0aW9uOiBMb2NhbGl6YXRpb25TZXJ2aWNlKTtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIHNldEVuZFJ1bGUoZW5kUnVsZTogRW5kUnVsZSk6IHZvaWQ7XG4gICAgcmVhZG9ubHkgcnJ1bGU6IFJlY3VycmVuY2VSdWxlO1xuICAgIHJlYWRvbmx5IGlzQ291bnREaXNhYmxlZDogYm9vbGVhbjtcbiAgICByZWFkb25seSBpc1VudGlsRGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgb25Db3VudENoYW5nZSh2YWx1ZTogbnVtYmVyKTogdm9pZDtcbiAgICBvbkNvdW50Qmx1cigpOiB2b2lkO1xuICAgIG9uVW50aWxDaGFuZ2UodmFsdWU6IERhdGUpOiB2b2lkO1xuICAgIG9uVW50aWxCbHVyKCk6IHZvaWQ7XG4gICAgdGV4dEZvcihrZXk6IHN0cmluZyk6IHN0cmluZztcbiAgICBvbkVuZExhYmVsQ2xpY2soKTogdm9pZDtcbiAgICBwcml2YXRlIHNldEluaXRpYWxWYWx1ZXM7XG4gICAgcHJpdmF0ZSBzdWJzY3JpYmVDaGFuZ2VzO1xuICAgIHByaXZhdGUgY3JlYXRlVW50aWw7XG59XG4iXX0=