/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { EventEmitter, NgZone } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { Observable } from 'rxjs';
import { EditMode } from '../types';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare type CommandAction = 'edit' | 'remove' | 'cancel' | 'save' | 'add';
/**
 * @hidden
 */
export declare type CommandEvent = {
    action: CommandAction;
    dataItem?: any;
    formGroup?: FormGroup;
    isNew?: boolean;
    mode?: EditMode;
};
/**
 * @hidden
 */
export declare type Entity = {
    dataItem: any;
    formGroup: any;
    mode?: EditMode;
};
/**
 * @hidden
 */
export declare class EditService {
    ngZone: NgZone;
    changes: EventEmitter<CommandEvent>;
    changed: Observable<any>;
    editedEvent: Entity;
    newEventGroup: any;
    private changedSource;
    constructor(ngZone: NgZone);
    endEdit(): void;
    removeEvent(dataItem: any): void;
    addEvent(formGroup: FormGroup): void;
    editEvent(dataItem: any, formGroup?: FormGroup, mode?: EditMode): void;
    close(): void;
    save(): void;
    isEditing(): boolean;
    readonly occurrenceEditMode: EditMode;
    readonly hasNewEvent: boolean;
    readonly newEvent: any;
    readonly context: Entity;
    private onChanged;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<EditService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<EditService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRpdC5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbImVkaXQuc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IEV2ZW50RW1pdHRlciwgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBFZGl0TW9kZSB9IGZyb20gJy4uL3R5cGVzJztcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSB0eXBlIENvbW1hbmRBY3Rpb24gPSAnZWRpdCcgfCAncmVtb3ZlJyB8ICdjYW5jZWwnIHwgJ3NhdmUnIHwgJ2FkZCc7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgdHlwZSBDb21tYW5kRXZlbnQgPSB7XG4gICAgYWN0aW9uOiBDb21tYW5kQWN0aW9uO1xuICAgIGRhdGFJdGVtPzogYW55O1xuICAgIGZvcm1Hcm91cD86IEZvcm1Hcm91cDtcbiAgICBpc05ldz86IGJvb2xlYW47XG4gICAgbW9kZT86IEVkaXRNb2RlO1xufTtcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSB0eXBlIEVudGl0eSA9IHtcbiAgICBkYXRhSXRlbTogYW55O1xuICAgIGZvcm1Hcm91cDogYW55O1xuICAgIG1vZGU/OiBFZGl0TW9kZTtcbn07XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRWRpdFNlcnZpY2Uge1xuICAgIG5nWm9uZTogTmdab25lO1xuICAgIGNoYW5nZXM6IEV2ZW50RW1pdHRlcjxDb21tYW5kRXZlbnQ+O1xuICAgIGNoYW5nZWQ6IE9ic2VydmFibGU8YW55PjtcbiAgICBlZGl0ZWRFdmVudDogRW50aXR5O1xuICAgIG5ld0V2ZW50R3JvdXA6IGFueTtcbiAgICBwcml2YXRlIGNoYW5nZWRTb3VyY2U7XG4gICAgY29uc3RydWN0b3Iobmdab25lOiBOZ1pvbmUpO1xuICAgIGVuZEVkaXQoKTogdm9pZDtcbiAgICByZW1vdmVFdmVudChkYXRhSXRlbTogYW55KTogdm9pZDtcbiAgICBhZGRFdmVudChmb3JtR3JvdXA6IEZvcm1Hcm91cCk6IHZvaWQ7XG4gICAgZWRpdEV2ZW50KGRhdGFJdGVtOiBhbnksIGZvcm1Hcm91cD86IEZvcm1Hcm91cCwgbW9kZT86IEVkaXRNb2RlKTogdm9pZDtcbiAgICBjbG9zZSgpOiB2b2lkO1xuICAgIHNhdmUoKTogdm9pZDtcbiAgICBpc0VkaXRpbmcoKTogYm9vbGVhbjtcbiAgICByZWFkb25seSBvY2N1cnJlbmNlRWRpdE1vZGU6IEVkaXRNb2RlO1xuICAgIHJlYWRvbmx5IGhhc05ld0V2ZW50OiBib29sZWFuO1xuICAgIHJlYWRvbmx5IG5ld0V2ZW50OiBhbnk7XG4gICAgcmVhZG9ubHkgY29udGV4dDogRW50aXR5O1xuICAgIHByaXZhdGUgb25DaGFuZ2VkO1xufVxuIl19