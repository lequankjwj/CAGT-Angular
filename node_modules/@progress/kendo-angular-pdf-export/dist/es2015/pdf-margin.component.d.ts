/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { pdf } from '@progress/kendo-drawing';
/**
 * Represents the Kendo UI PDFMargin component for Angular.
 */
import * as ɵngcc0 from '@angular/core';
export declare class PDFMarginComponent implements pdf.PageMargin {
    /**
     * The bottom margin.
     *
     * The supported units are:
     * * `"mm"`
     * * `"cm"`
     * * `"in"`
     * * `"pt"` (default).
     *
     * > Numbers are considered to be points (`"pt"`).
     */
    left?: number | string;
    /**
     * The top margin.
     *
     * The supported units are:
     * * `"mm"`
     * * `"cm"`
     * * `"in"`
     * * `"pt"` (default).
     *
     * > Numbers are considered to be points (`"pt"`).
     */
    top?: number | string;
    /**
     * The right margin.
     *
     * The supported units are:
     * * `"mm"`
     * * `"cm"`
     * * `"in"`
     * * `"pt"` (default).
     *
     * > Numbers are considered to be points (`"pt"`).
     */
    right?: number | string;
    /**
     * The bottom margin.
     *
     * The supported units are:
     * * `"mm"`
     * * `"cm"`
     * * `"in"`
     * * `"pt"` (default).
     *
     * > Numbers are considered to be points (`"pt"`).
     */
    bottom?: number | string;
    /**
     * @hidden
     */
    readonly options: any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PDFMarginComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PDFMarginComponent, "kendo-pdf-export-margin", never, { "left": "left"; "top": "top"; "right": "right"; "bottom": "bottom"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGRmLW1hcmdpbi5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicGRmLW1hcmdpbi5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgcGRmIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWRyYXdpbmcnO1xuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBLZW5kbyBVSSBQREZNYXJnaW4gY29tcG9uZW50IGZvciBBbmd1bGFyLlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQREZNYXJnaW5Db21wb25lbnQgaW1wbGVtZW50cyBwZGYuUGFnZU1hcmdpbiB7XG4gICAgLyoqXG4gICAgICogVGhlIGJvdHRvbSBtYXJnaW4uXG4gICAgICpcbiAgICAgKiBUaGUgc3VwcG9ydGVkIHVuaXRzIGFyZTpcbiAgICAgKiAqIGBcIm1tXCJgXG4gICAgICogKiBgXCJjbVwiYFxuICAgICAqICogYFwiaW5cImBcbiAgICAgKiAqIGBcInB0XCJgIChkZWZhdWx0KS5cbiAgICAgKlxuICAgICAqID4gTnVtYmVycyBhcmUgY29uc2lkZXJlZCB0byBiZSBwb2ludHMgKGBcInB0XCJgKS5cbiAgICAgKi9cbiAgICBsZWZ0PzogbnVtYmVyIHwgc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSB0b3AgbWFyZ2luLlxuICAgICAqXG4gICAgICogVGhlIHN1cHBvcnRlZCB1bml0cyBhcmU6XG4gICAgICogKiBgXCJtbVwiYFxuICAgICAqICogYFwiY21cImBcbiAgICAgKiAqIGBcImluXCJgXG4gICAgICogKiBgXCJwdFwiYCAoZGVmYXVsdCkuXG4gICAgICpcbiAgICAgKiA+IE51bWJlcnMgYXJlIGNvbnNpZGVyZWQgdG8gYmUgcG9pbnRzIChgXCJwdFwiYCkuXG4gICAgICovXG4gICAgdG9wPzogbnVtYmVyIHwgc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSByaWdodCBtYXJnaW4uXG4gICAgICpcbiAgICAgKiBUaGUgc3VwcG9ydGVkIHVuaXRzIGFyZTpcbiAgICAgKiAqIGBcIm1tXCJgXG4gICAgICogKiBgXCJjbVwiYFxuICAgICAqICogYFwiaW5cImBcbiAgICAgKiAqIGBcInB0XCJgIChkZWZhdWx0KS5cbiAgICAgKlxuICAgICAqID4gTnVtYmVycyBhcmUgY29uc2lkZXJlZCB0byBiZSBwb2ludHMgKGBcInB0XCJgKS5cbiAgICAgKi9cbiAgICByaWdodD86IG51bWJlciB8IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgYm90dG9tIG1hcmdpbi5cbiAgICAgKlxuICAgICAqIFRoZSBzdXBwb3J0ZWQgdW5pdHMgYXJlOlxuICAgICAqICogYFwibW1cImBcbiAgICAgKiAqIGBcImNtXCJgXG4gICAgICogKiBgXCJpblwiYFxuICAgICAqICogYFwicHRcImAgKGRlZmF1bHQpLlxuICAgICAqXG4gICAgICogPiBOdW1iZXJzIGFyZSBjb25zaWRlcmVkIHRvIGJlIHBvaW50cyAoYFwicHRcImApLlxuICAgICAqL1xuICAgIGJvdHRvbT86IG51bWJlciB8IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgcmVhZG9ubHkgb3B0aW9uczogYW55O1xufVxuIl19