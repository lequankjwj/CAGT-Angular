/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Subject } from 'rxjs';
/**
 * A base class for a service that returns localized messages.
 *
 * For more information, refer to the section on [using the message service]({% slug messages_l10n %}#toc-using-the-message-service).
 */
import * as ɵngcc0 from '@angular/core';
export declare class MessageService {
    /**
     * @hidden
     */
    readonly changes: Subject<{
        rtl: boolean;
    }>;
    /**
     * Notifies the components that the messages were changed.
     *
     * @param rtl - (Optional) A new value for the [text direction token]({% slug api_l10n_rtl %}).
     */
    notify(rtl?: boolean): void;
    /**
     * Returns a localized message for the supplied key.
     *
     * @param key - The message key. For example, `"kendo.grid.noRecords"`.
     * @return - The localized message for this key or `undefined` if not found.
     */
    get(key: string): string | undefined;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MessageService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<MessageService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZS5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbIm1lc3NhZ2Uuc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuLyoqXG4gKiBBIGJhc2UgY2xhc3MgZm9yIGEgc2VydmljZSB0aGF0IHJldHVybnMgbG9jYWxpemVkIG1lc3NhZ2VzLlxuICpcbiAqIEZvciBtb3JlIGluZm9ybWF0aW9uLCByZWZlciB0byB0aGUgc2VjdGlvbiBvbiBbdXNpbmcgdGhlIG1lc3NhZ2Ugc2VydmljZV0oeyUgc2x1ZyBtZXNzYWdlc19sMTBuICV9I3RvYy11c2luZy10aGUtbWVzc2FnZS1zZXJ2aWNlKS5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTWVzc2FnZVNlcnZpY2Uge1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICByZWFkb25seSBjaGFuZ2VzOiBTdWJqZWN0PHtcbiAgICAgICAgcnRsOiBib29sZWFuO1xuICAgIH0+O1xuICAgIC8qKlxuICAgICAqIE5vdGlmaWVzIHRoZSBjb21wb25lbnRzIHRoYXQgdGhlIG1lc3NhZ2VzIHdlcmUgY2hhbmdlZC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBydGwgLSAoT3B0aW9uYWwpIEEgbmV3IHZhbHVlIGZvciB0aGUgW3RleHQgZGlyZWN0aW9uIHRva2VuXSh7JSBzbHVnIGFwaV9sMTBuX3J0bCAlfSkuXG4gICAgICovXG4gICAgbm90aWZ5KHJ0bD86IGJvb2xlYW4pOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBsb2NhbGl6ZWQgbWVzc2FnZSBmb3IgdGhlIHN1cHBsaWVkIGtleS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBrZXkgLSBUaGUgbWVzc2FnZSBrZXkuIEZvciBleGFtcGxlLCBgXCJrZW5kby5ncmlkLm5vUmVjb3Jkc1wiYC5cbiAgICAgKiBAcmV0dXJuIC0gVGhlIGxvY2FsaXplZCBtZXNzYWdlIGZvciB0aGlzIGtleSBvciBgdW5kZWZpbmVkYCBpZiBub3QgZm91bmQuXG4gICAgICovXG4gICAgZ2V0KGtleTogc3RyaW5nKTogc3RyaW5nIHwgdW5kZWZpbmVkO1xufVxuIl19