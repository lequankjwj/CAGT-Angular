/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { InjectionToken, OnDestroy } from '@angular/core';
import { MessageService } from './message.service';
import { Subject } from 'rxjs';
/**
 * Localization prefix for the component messages.
 *
 * For internal use.
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare const L10N_PREFIX: InjectionToken<string>;
/**
 * Component localization service.
 *
 * For internal use.
 * @hidden
 */
export declare class LocalizationService implements OnDestroy {
    private prefix;
    private messageService;
    private _rtl;
    readonly changes: Subject<{
        rtl: boolean;
    }>;
    private subscription;
    private dictionary;
    constructor(prefix: string, messageService: MessageService, _rtl: boolean);
    readonly rtl: boolean;
    ngOnDestroy(): void;
    get(shortKey: string): string;
    register(shortKey: string, value: string, override?: boolean): void;
    notifyChanges(): void;
    private key;
    private defaultValue;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LocalizationService, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<LocalizationService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWxpemF0aW9uLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsibG9jYWxpemF0aW9uLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgSW5qZWN0aW9uVG9rZW4sIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWVzc2FnZVNlcnZpY2UgfSBmcm9tICcuL21lc3NhZ2Uuc2VydmljZSc7XG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG4vKipcbiAqIExvY2FsaXphdGlvbiBwcmVmaXggZm9yIHRoZSBjb21wb25lbnQgbWVzc2FnZXMuXG4gKlxuICogRm9yIGludGVybmFsIHVzZS5cbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgTDEwTl9QUkVGSVg6IEluamVjdGlvblRva2VuPHN0cmluZz47XG4vKipcbiAqIENvbXBvbmVudCBsb2NhbGl6YXRpb24gc2VydmljZS5cbiAqXG4gKiBGb3IgaW50ZXJuYWwgdXNlLlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBMb2NhbGl6YXRpb25TZXJ2aWNlIGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIHByZWZpeDtcbiAgICBwcml2YXRlIG1lc3NhZ2VTZXJ2aWNlO1xuICAgIHByaXZhdGUgX3J0bDtcbiAgICByZWFkb25seSBjaGFuZ2VzOiBTdWJqZWN0PHtcbiAgICAgICAgcnRsOiBib29sZWFuO1xuICAgIH0+O1xuICAgIHByaXZhdGUgc3Vic2NyaXB0aW9uO1xuICAgIHByaXZhdGUgZGljdGlvbmFyeTtcbiAgICBjb25zdHJ1Y3RvcihwcmVmaXg6IHN0cmluZywgbWVzc2FnZVNlcnZpY2U6IE1lc3NhZ2VTZXJ2aWNlLCBfcnRsOiBib29sZWFuKTtcbiAgICByZWFkb25seSBydGw6IGJvb2xlYW47XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBnZXQoc2hvcnRLZXk6IHN0cmluZyk6IHN0cmluZztcbiAgICByZWdpc3RlcihzaG9ydEtleTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nLCBvdmVycmlkZT86IGJvb2xlYW4pOiB2b2lkO1xuICAgIG5vdGlmeUNoYW5nZXMoKTogdm9pZDtcbiAgICBwcml2YXRlIGtleTtcbiAgICBwcml2YXRlIGRlZmF1bHRWYWx1ZTtcbn1cbiJdfQ==