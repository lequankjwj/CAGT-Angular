/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ChangeDetectorRef, EventEmitter, OnChanges, TemplateRef } from '@angular/core';
import { BusViewService } from './services/bus-view.service';
import { ViewService } from './models/view-service.interface';
import { SelectionRangeEnd } from './models/selection-range-end.type';
import { SelectionRange } from './models/selection-range.interface';
import { Action } from './models/navigation-action.enum';
import { CalendarViewEnum } from './models/view.enum';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class HorizontalViewListComponent implements OnChanges {
    private bus;
    private cdr;
    cellTemplateRef: TemplateRef<any>;
    weekNumberTemplateRef: TemplateRef<any>;
    headerTitleTemplateRef: TemplateRef<any>;
    activeRangeEnd: SelectionRangeEnd;
    activeView: CalendarViewEnum;
    cellUID: string;
    focusedDate: Date;
    isActive: boolean;
    min: Date;
    max: Date;
    selectionRange: SelectionRange;
    value: Date;
    views: number;
    weekNumber: boolean;
    valueChange: EventEmitter<Date>;
    cellEnter: EventEmitter<Date>;
    cellLeave: EventEmitter<Date>;
    readonly getComponentClass: boolean;
    readonly getComponentMonthClass: boolean;
    readonly getComponentYearClass: boolean;
    readonly getComponentDecadeClass: boolean;
    readonly getComponentCenturyClass: boolean;
    service: ViewService;
    activeDate: Date;
    dates: Date[];
    skip: number;
    total: number;
    private showWeekNumbers;
    constructor(bus: BusViewService, cdr: ChangeDetectorRef);
    ngOnChanges(changes: any): void;
    initService(): void;
    handleDateChange(candidate: Date): void;
    isMonthView(): boolean;
    navigate(action: Action): Date;
    canNavigate(action: Action): boolean;
    private clampDate;
    private move;
    private isListInRange;
    private isInDates;
    private getTake;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<HorizontalViewListComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<HorizontalViewListComponent, "kendo-calendar-horizontal", never, { "activeView": "activeView"; "isActive": "isActive"; "min": "min"; "max": "max"; "views": "views"; "weekNumber": "weekNumber"; "focusedDate": "focusedDate"; "cellTemplateRef": "cellTemplateRef"; "weekNumberTemplateRef": "weekNumberTemplateRef"; "headerTitleTemplateRef": "headerTitleTemplateRef"; "activeRangeEnd": "activeRangeEnd"; "cellUID": "cellUID"; "selectionRange": "selectionRange"; "value": "value"; }, { "valueChange": "valueChange"; "cellEnter": "cellEnter"; "cellLeave": "cellLeave"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG9yaXpvbnRhbC12aWV3LWxpc3QuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImhvcml6b250YWwtdmlldy1saXN0LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIEV2ZW50RW1pdHRlciwgT25DaGFuZ2VzLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQnVzVmlld1NlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL2J1cy12aWV3LnNlcnZpY2UnO1xuaW1wb3J0IHsgVmlld1NlcnZpY2UgfSBmcm9tICcuL21vZGVscy92aWV3LXNlcnZpY2UuaW50ZXJmYWNlJztcbmltcG9ydCB7IFNlbGVjdGlvblJhbmdlRW5kIH0gZnJvbSAnLi9tb2RlbHMvc2VsZWN0aW9uLXJhbmdlLWVuZC50eXBlJztcbmltcG9ydCB7IFNlbGVjdGlvblJhbmdlIH0gZnJvbSAnLi9tb2RlbHMvc2VsZWN0aW9uLXJhbmdlLmludGVyZmFjZSc7XG5pbXBvcnQgeyBBY3Rpb24gfSBmcm9tICcuL21vZGVscy9uYXZpZ2F0aW9uLWFjdGlvbi5lbnVtJztcbmltcG9ydCB7IENhbGVuZGFyVmlld0VudW0gfSBmcm9tICcuL21vZGVscy92aWV3LmVudW0nO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEhvcml6b250YWxWaWV3TGlzdENvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gICAgcHJpdmF0ZSBidXM7XG4gICAgcHJpdmF0ZSBjZHI7XG4gICAgY2VsbFRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIHdlZWtOdW1iZXJUZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBoZWFkZXJUaXRsZVRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGFjdGl2ZVJhbmdlRW5kOiBTZWxlY3Rpb25SYW5nZUVuZDtcbiAgICBhY3RpdmVWaWV3OiBDYWxlbmRhclZpZXdFbnVtO1xuICAgIGNlbGxVSUQ6IHN0cmluZztcbiAgICBmb2N1c2VkRGF0ZTogRGF0ZTtcbiAgICBpc0FjdGl2ZTogYm9vbGVhbjtcbiAgICBtaW46IERhdGU7XG4gICAgbWF4OiBEYXRlO1xuICAgIHNlbGVjdGlvblJhbmdlOiBTZWxlY3Rpb25SYW5nZTtcbiAgICB2YWx1ZTogRGF0ZTtcbiAgICB2aWV3czogbnVtYmVyO1xuICAgIHdlZWtOdW1iZXI6IGJvb2xlYW47XG4gICAgdmFsdWVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxEYXRlPjtcbiAgICBjZWxsRW50ZXI6IEV2ZW50RW1pdHRlcjxEYXRlPjtcbiAgICBjZWxsTGVhdmU6IEV2ZW50RW1pdHRlcjxEYXRlPjtcbiAgICByZWFkb25seSBnZXRDb21wb25lbnRDbGFzczogYm9vbGVhbjtcbiAgICByZWFkb25seSBnZXRDb21wb25lbnRNb250aENsYXNzOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IGdldENvbXBvbmVudFllYXJDbGFzczogYm9vbGVhbjtcbiAgICByZWFkb25seSBnZXRDb21wb25lbnREZWNhZGVDbGFzczogYm9vbGVhbjtcbiAgICByZWFkb25seSBnZXRDb21wb25lbnRDZW50dXJ5Q2xhc3M6IGJvb2xlYW47XG4gICAgc2VydmljZTogVmlld1NlcnZpY2U7XG4gICAgYWN0aXZlRGF0ZTogRGF0ZTtcbiAgICBkYXRlczogRGF0ZVtdO1xuICAgIHNraXA6IG51bWJlcjtcbiAgICB0b3RhbDogbnVtYmVyO1xuICAgIHByaXZhdGUgc2hvd1dlZWtOdW1iZXJzO1xuICAgIGNvbnN0cnVjdG9yKGJ1czogQnVzVmlld1NlcnZpY2UsIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IGFueSk6IHZvaWQ7XG4gICAgaW5pdFNlcnZpY2UoKTogdm9pZDtcbiAgICBoYW5kbGVEYXRlQ2hhbmdlKGNhbmRpZGF0ZTogRGF0ZSk6IHZvaWQ7XG4gICAgaXNNb250aFZpZXcoKTogYm9vbGVhbjtcbiAgICBuYXZpZ2F0ZShhY3Rpb246IEFjdGlvbik6IERhdGU7XG4gICAgY2FuTmF2aWdhdGUoYWN0aW9uOiBBY3Rpb24pOiBib29sZWFuO1xuICAgIHByaXZhdGUgY2xhbXBEYXRlO1xuICAgIHByaXZhdGUgbW92ZTtcbiAgICBwcml2YXRlIGlzTGlzdEluUmFuZ2U7XG4gICAgcHJpdmF0ZSBpc0luRGF0ZXM7XG4gICAgcHJpdmF0ZSBnZXRUYWtlO1xufVxuIl19