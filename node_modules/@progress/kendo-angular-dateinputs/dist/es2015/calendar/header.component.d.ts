/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, OnInit, TemplateRef } from '@angular/core';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { IntlService } from '@progress/kendo-angular-intl';
import { CalendarView } from './models/view.type';
import { CalendarViewEnum } from './models/view.enum';
import { BusViewService } from './services/bus-view.service';
import { DisabledDatesService } from './services/disabled-dates.service';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class HeaderComponent implements OnChanges, OnInit, OnDestroy {
    private bus;
    private cdr;
    localization: LocalizationService;
    private intl;
    private disabledDatesService;
    navigate: boolean;
    todayAvailable: boolean;
    activeViewValue: CalendarView;
    todayMessage: string;
    title: string;
    activeView: CalendarViewEnum;
    currentDate: Date;
    min: Date;
    max: Date;
    rangeLength: number;
    templateRef: TemplateRef<any>;
    today: EventEmitter<Date>;
    readonly getComponentClass: boolean;
    private subscriptions;
    constructor(bus: BusViewService, cdr: ChangeDetectorRef, localization: LocalizationService, intl: IntlService, disabledDatesService: DisabledDatesService);
    ngOnInit(): void;
    ngOnChanges(_: any): void;
    ngOnDestroy(): void;
    handleTodayClick(): void;
    handleNavigation(): void;
    private intlChange;
    private l10nChange;
    private getTitle;
    private setTodayAvailability;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<HeaderComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<HeaderComponent, "kendo-calendar-header", never, { "min": "min"; "max": "max"; "rangeLength": "rangeLength"; "activeView": "activeView"; "currentDate": "currentDate"; "templateRef": "templateRef"; }, { "today": "today"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJoZWFkZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIEV2ZW50RW1pdHRlciwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIE9uSW5pdCwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IExvY2FsaXphdGlvblNlcnZpY2UgfSBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tYW5ndWxhci1sMTBuJztcbmltcG9ydCB7IEludGxTZXJ2aWNlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItaW50bCc7XG5pbXBvcnQgeyBDYWxlbmRhclZpZXcgfSBmcm9tICcuL21vZGVscy92aWV3LnR5cGUnO1xuaW1wb3J0IHsgQ2FsZW5kYXJWaWV3RW51bSB9IGZyb20gJy4vbW9kZWxzL3ZpZXcuZW51bSc7XG5pbXBvcnQgeyBCdXNWaWV3U2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvYnVzLXZpZXcuc2VydmljZSc7XG5pbXBvcnQgeyBEaXNhYmxlZERhdGVzU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvZGlzYWJsZWQtZGF0ZXMuc2VydmljZSc7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSGVhZGVyQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzLCBPbkluaXQsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBidXM7XG4gICAgcHJpdmF0ZSBjZHI7XG4gICAgbG9jYWxpemF0aW9uOiBMb2NhbGl6YXRpb25TZXJ2aWNlO1xuICAgIHByaXZhdGUgaW50bDtcbiAgICBwcml2YXRlIGRpc2FibGVkRGF0ZXNTZXJ2aWNlO1xuICAgIG5hdmlnYXRlOiBib29sZWFuO1xuICAgIHRvZGF5QXZhaWxhYmxlOiBib29sZWFuO1xuICAgIGFjdGl2ZVZpZXdWYWx1ZTogQ2FsZW5kYXJWaWV3O1xuICAgIHRvZGF5TWVzc2FnZTogc3RyaW5nO1xuICAgIHRpdGxlOiBzdHJpbmc7XG4gICAgYWN0aXZlVmlldzogQ2FsZW5kYXJWaWV3RW51bTtcbiAgICBjdXJyZW50RGF0ZTogRGF0ZTtcbiAgICBtaW46IERhdGU7XG4gICAgbWF4OiBEYXRlO1xuICAgIHJhbmdlTGVuZ3RoOiBudW1iZXI7XG4gICAgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgdG9kYXk6IEV2ZW50RW1pdHRlcjxEYXRlPjtcbiAgICByZWFkb25seSBnZXRDb21wb25lbnRDbGFzczogYm9vbGVhbjtcbiAgICBwcml2YXRlIHN1YnNjcmlwdGlvbnM7XG4gICAgY29uc3RydWN0b3IoYnVzOiBCdXNWaWV3U2VydmljZSwgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZiwgbG9jYWxpemF0aW9uOiBMb2NhbGl6YXRpb25TZXJ2aWNlLCBpbnRsOiBJbnRsU2VydmljZSwgZGlzYWJsZWREYXRlc1NlcnZpY2U6IERpc2FibGVkRGF0ZXNTZXJ2aWNlKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKF86IGFueSk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBoYW5kbGVUb2RheUNsaWNrKCk6IHZvaWQ7XG4gICAgaGFuZGxlTmF2aWdhdGlvbigpOiB2b2lkO1xuICAgIHByaXZhdGUgaW50bENoYW5nZTtcbiAgICBwcml2YXRlIGwxMG5DaGFuZ2U7XG4gICAgcHJpdmF0ZSBnZXRUaXRsZTtcbiAgICBwcml2YXRlIHNldFRvZGF5QXZhaWxhYmlsaXR5O1xufVxuIl19