/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Action } from '../models/navigation-action.enum';
import { CellContext } from '../models/cell-context.interface';
import { ViewService } from '../models/view-service.interface';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class CenturyViewService implements ViewService {
    addToDate(min: Date, skip: number): Date;
    datesList(start: Date, count: number): Date[];
    data(options: any): CellContext[][];
    isEqual(candidate: Date, expected: Date): boolean;
    isInArray(date: Date, dates: Date[]): boolean;
    isInRange(candidate: Date, min: Date, max: Date): boolean;
    beginningOfPeriod(date: Date): Date;
    isRangeStart(value: Date): boolean;
    move(value: Date, action: Action): Date;
    cellTitle(value: Date): string;
    navigationTitle(value?: Date): string;
    title(value?: Date): string;
    rowLength(_?: boolean): number;
    skip(value: Date, min: Date): number;
    total(min: Date, max: Date): number;
    value(current: Date): string;
    viewDate(date: Date, max: Date, viewsCount?: number): Date;
    private normalize;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CenturyViewService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<CenturyViewService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2VudHVyeS12aWV3LnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsiY2VudHVyeS12aWV3LnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuKiBDb3B5cmlnaHQgwqkgMjAyMCBQcm9ncmVzcyBTb2Z0d2FyZSBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiogTGljZW5zZWQgdW5kZXIgY29tbWVyY2lhbCBsaWNlbnNlLiBTZWUgTElDRU5TRS5tZCBpbiB0aGUgcHJvamVjdCByb290IGZvciBtb3JlIGluZm9ybWF0aW9uXG4qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBBY3Rpb24gfSBmcm9tICcuLi9tb2RlbHMvbmF2aWdhdGlvbi1hY3Rpb24uZW51bSc7XG5pbXBvcnQgeyBDZWxsQ29udGV4dCB9IGZyb20gJy4uL21vZGVscy9jZWxsLWNvbnRleHQuaW50ZXJmYWNlJztcbmltcG9ydCB7IFZpZXdTZXJ2aWNlIH0gZnJvbSAnLi4vbW9kZWxzL3ZpZXctc2VydmljZS5pbnRlcmZhY2UnO1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENlbnR1cnlWaWV3U2VydmljZSBpbXBsZW1lbnRzIFZpZXdTZXJ2aWNlIHtcbiAgICBhZGRUb0RhdGUobWluOiBEYXRlLCBza2lwOiBudW1iZXIpOiBEYXRlO1xuICAgIGRhdGVzTGlzdChzdGFydDogRGF0ZSwgY291bnQ6IG51bWJlcik6IERhdGVbXTtcbiAgICBkYXRhKG9wdGlvbnM6IGFueSk6IENlbGxDb250ZXh0W11bXTtcbiAgICBpc0VxdWFsKGNhbmRpZGF0ZTogRGF0ZSwgZXhwZWN0ZWQ6IERhdGUpOiBib29sZWFuO1xuICAgIGlzSW5BcnJheShkYXRlOiBEYXRlLCBkYXRlczogRGF0ZVtdKTogYm9vbGVhbjtcbiAgICBpc0luUmFuZ2UoY2FuZGlkYXRlOiBEYXRlLCBtaW46IERhdGUsIG1heDogRGF0ZSk6IGJvb2xlYW47XG4gICAgYmVnaW5uaW5nT2ZQZXJpb2QoZGF0ZTogRGF0ZSk6IERhdGU7XG4gICAgaXNSYW5nZVN0YXJ0KHZhbHVlOiBEYXRlKTogYm9vbGVhbjtcbiAgICBtb3ZlKHZhbHVlOiBEYXRlLCBhY3Rpb246IEFjdGlvbik6IERhdGU7XG4gICAgY2VsbFRpdGxlKHZhbHVlOiBEYXRlKTogc3RyaW5nO1xuICAgIG5hdmlnYXRpb25UaXRsZSh2YWx1ZT86IERhdGUpOiBzdHJpbmc7XG4gICAgdGl0bGUodmFsdWU/OiBEYXRlKTogc3RyaW5nO1xuICAgIHJvd0xlbmd0aChfPzogYm9vbGVhbik6IG51bWJlcjtcbiAgICBza2lwKHZhbHVlOiBEYXRlLCBtaW46IERhdGUpOiBudW1iZXI7XG4gICAgdG90YWwobWluOiBEYXRlLCBtYXg6IERhdGUpOiBudW1iZXI7XG4gICAgdmFsdWUoY3VycmVudDogRGF0ZSk6IHN0cmluZztcbiAgICB2aWV3RGF0ZShkYXRlOiBEYXRlLCBtYXg6IERhdGUsIHZpZXdzQ291bnQ/OiBudW1iZXIpOiBEYXRlO1xuICAgIHByaXZhdGUgbm9ybWFsaXplO1xufVxuIl19