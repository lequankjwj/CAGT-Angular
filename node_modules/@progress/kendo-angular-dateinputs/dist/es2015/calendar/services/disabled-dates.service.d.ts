/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Day } from '@progress/kendo-date-math';
import { Subject } from 'rxjs';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class DisabledDatesService {
    /**
     * Emits every time the `isDateDisabled` method changes.
     */
    changes: Subject<void>;
    /**
     * Based on the user-defined `disabledDates` input evaluates if the date is disabled.
     * If not set, returns `false`.
     */
    isDateDisabled: (date: Date) => boolean;
    /**
     * Configures the `isDateDisabled` function.
     *
     * * If a function is provided, uses it as-is and passes each date to it for evaluation.
     * The time part is set to `midnight`.
     * * If a `Date[]` is provided, creates a function that checks the targeted date against
     * the listed dates and, if the targeted date is listed, marks it as disabled.
     * * If a `Day[]` is provided, creates a function that evaluates the provided days of the
     * week as disabled.
     */
    initialize(disabledDates: ((date: Date) => boolean) | Date[] | Day[]): void;
    private notifyInvalidInput;
    private notifyServiceChange;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DisabledDatesService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<DisabledDatesService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlzYWJsZWQtZGF0ZXMuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJkaXNhYmxlZC1kYXRlcy5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiogQ29weXJpZ2h0IMKpIDIwMjAgUHJvZ3Jlc3MgU29mdHdhcmUgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qIExpY2Vuc2VkIHVuZGVyIGNvbW1lcmNpYWwgbGljZW5zZS4gU2VlIExJQ0VOU0UubWQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbW9yZSBpbmZvcm1hdGlvblxuKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuaW1wb3J0IHsgRGF5IH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWRhdGUtbWF0aCc7XG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRGlzYWJsZWREYXRlc1NlcnZpY2Uge1xuICAgIC8qKlxuICAgICAqIEVtaXRzIGV2ZXJ5IHRpbWUgdGhlIGBpc0RhdGVEaXNhYmxlZGAgbWV0aG9kIGNoYW5nZXMuXG4gICAgICovXG4gICAgY2hhbmdlczogU3ViamVjdDx2b2lkPjtcbiAgICAvKipcbiAgICAgKiBCYXNlZCBvbiB0aGUgdXNlci1kZWZpbmVkIGBkaXNhYmxlZERhdGVzYCBpbnB1dCBldmFsdWF0ZXMgaWYgdGhlIGRhdGUgaXMgZGlzYWJsZWQuXG4gICAgICogSWYgbm90IHNldCwgcmV0dXJucyBgZmFsc2VgLlxuICAgICAqL1xuICAgIGlzRGF0ZURpc2FibGVkOiAoZGF0ZTogRGF0ZSkgPT4gYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBDb25maWd1cmVzIHRoZSBgaXNEYXRlRGlzYWJsZWRgIGZ1bmN0aW9uLlxuICAgICAqXG4gICAgICogKiBJZiBhIGZ1bmN0aW9uIGlzIHByb3ZpZGVkLCB1c2VzIGl0IGFzLWlzIGFuZCBwYXNzZXMgZWFjaCBkYXRlIHRvIGl0IGZvciBldmFsdWF0aW9uLlxuICAgICAqIFRoZSB0aW1lIHBhcnQgaXMgc2V0IHRvIGBtaWRuaWdodGAuXG4gICAgICogKiBJZiBhIGBEYXRlW11gIGlzIHByb3ZpZGVkLCBjcmVhdGVzIGEgZnVuY3Rpb24gdGhhdCBjaGVja3MgdGhlIHRhcmdldGVkIGRhdGUgYWdhaW5zdFxuICAgICAqIHRoZSBsaXN0ZWQgZGF0ZXMgYW5kLCBpZiB0aGUgdGFyZ2V0ZWQgZGF0ZSBpcyBsaXN0ZWQsIG1hcmtzIGl0IGFzIGRpc2FibGVkLlxuICAgICAqICogSWYgYSBgRGF5W11gIGlzIHByb3ZpZGVkLCBjcmVhdGVzIGEgZnVuY3Rpb24gdGhhdCBldmFsdWF0ZXMgdGhlIHByb3ZpZGVkIGRheXMgb2YgdGhlXG4gICAgICogd2VlayBhcyBkaXNhYmxlZC5cbiAgICAgKi9cbiAgICBpbml0aWFsaXplKGRpc2FibGVkRGF0ZXM6ICgoZGF0ZTogRGF0ZSkgPT4gYm9vbGVhbikgfCBEYXRlW10gfCBEYXlbXSk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBub3RpZnlJbnZhbGlkSW5wdXQ7XG4gICAgcHJpdmF0ZSBub3RpZnlTZXJ2aWNlQ2hhbmdlO1xufVxuIl19