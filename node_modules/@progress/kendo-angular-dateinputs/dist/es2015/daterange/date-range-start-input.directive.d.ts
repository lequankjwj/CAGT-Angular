/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, Renderer2, NgZone, OnInit, OnDestroy } from '@angular/core';
import { DateInputComponent } from '../dateinput/dateinput.component';
import { AutoCorrectOn } from './auto-correct-on.type';
import { DateRangeInput } from './date-range-input';
import { DateRangeService } from './date-range.service';
import { SelectionRange } from '../calendar/models/selection-range.interface';
/**
 * A directive which manages the start selection range.
 *
 * > You can use the DateRangeStartInputDirective only with a DateInput component.
 */
import * as ɵngcc0 from '@angular/core';
export declare class DateRangeStartInputDirective extends DateRangeInput implements OnInit, OnDestroy {
    private rangeService;
    private dateInput;
    /**
     * Specifies the auto-correction behavior. If the start date is greater than the end date,
     * the directive fixes the date range to a single date either on input change or on blur
     * ([see example]({% slug autocorrect_daterange %}#toc-configuring-input-directives)).
     *
     * By default, the component does not perform any auto-correction.
     */
    autoCorrectOn: AutoCorrectOn;
    /**
     * Specifies the navigation behavior of the calendar when the active end is changed on input focus.
     * When enabled, the calendar navigates to the value of the focused input. Otherwise, the calendar
     * displays the last picked date.
     *
     * By default, the automatic navigation behavior on input focus is disabled.
     *
     * @example
     * ```ts
     * _@Component({
     * selector: 'my-app',
     * template: `
     *  <h5>Toggle input focus to see the calendar navigating between range ends.</h5>
     *  <kendo-daterange>
     *      <kendo-dateinput kendoDateRangeStartInput [navigateCalendarOnFocus]="true" [(value)]="start"></kendo-dateinput>
     *      <kendo-dateinput kendoDateRangeEndInput [navigateCalendarOnFocus]="true" [(value)]="end"></kendo-dateinput>
     *  </kendo-daterange>
     * `
     * })
     * export class AppComponent {
     *   public start: Date = new Date(2018, 3, 10);
     *   public end: Date = new Date(2018, 10, 20);
     * }
     * ```
     */
    navigateCalendarOnFocus: boolean;
    constructor(rangeService: DateRangeService, dateInput: DateInputComponent, element: ElementRef, renderer: Renderer2, zone: NgZone);
    ngOnInit(): void;
    ngOnDestroy(): void;
    protected getRange(value: Date, correctOn: AutoCorrectOn): SelectionRange;
    protected updateInputValue(range: SelectionRange): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DateRangeStartInputDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DateRangeStartInputDirective, "[kendoDateRangeStartInput]", never, { "navigateCalendarOnFocus": "navigateCalendarOnFocus"; "autoCorrectOn": "autoCorrectOn"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1yYW5nZS1zdGFydC1pbnB1dC5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsiZGF0ZS1yYW5nZS1zdGFydC1pbnB1dC5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4qIENvcHlyaWdodCDCqSAyMDIwIFByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuKiBMaWNlbnNlZCB1bmRlciBjb21tZXJjaWFsIGxpY2Vuc2UuIFNlZSBMSUNFTlNFLm1kIGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIG1vcmUgaW5mb3JtYXRpb25cbiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IEVsZW1lbnRSZWYsIFJlbmRlcmVyMiwgTmdab25lLCBPbkluaXQsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRGF0ZUlucHV0Q29tcG9uZW50IH0gZnJvbSAnLi4vZGF0ZWlucHV0L2RhdGVpbnB1dC5jb21wb25lbnQnO1xuaW1wb3J0IHsgQXV0b0NvcnJlY3RPbiB9IGZyb20gJy4vYXV0by1jb3JyZWN0LW9uLnR5cGUnO1xuaW1wb3J0IHsgRGF0ZVJhbmdlSW5wdXQgfSBmcm9tICcuL2RhdGUtcmFuZ2UtaW5wdXQnO1xuaW1wb3J0IHsgRGF0ZVJhbmdlU2VydmljZSB9IGZyb20gJy4vZGF0ZS1yYW5nZS5zZXJ2aWNlJztcbmltcG9ydCB7IFNlbGVjdGlvblJhbmdlIH0gZnJvbSAnLi4vY2FsZW5kYXIvbW9kZWxzL3NlbGVjdGlvbi1yYW5nZS5pbnRlcmZhY2UnO1xuLyoqXG4gKiBBIGRpcmVjdGl2ZSB3aGljaCBtYW5hZ2VzIHRoZSBzdGFydCBzZWxlY3Rpb24gcmFuZ2UuXG4gKlxuICogPiBZb3UgY2FuIHVzZSB0aGUgRGF0ZVJhbmdlU3RhcnRJbnB1dERpcmVjdGl2ZSBvbmx5IHdpdGggYSBEYXRlSW5wdXQgY29tcG9uZW50LlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEYXRlUmFuZ2VTdGFydElucHV0RGlyZWN0aXZlIGV4dGVuZHMgRGF0ZVJhbmdlSW5wdXQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSByYW5nZVNlcnZpY2U7XG4gICAgcHJpdmF0ZSBkYXRlSW5wdXQ7XG4gICAgLyoqXG4gICAgICogU3BlY2lmaWVzIHRoZSBhdXRvLWNvcnJlY3Rpb24gYmVoYXZpb3IuIElmIHRoZSBzdGFydCBkYXRlIGlzIGdyZWF0ZXIgdGhhbiB0aGUgZW5kIGRhdGUsXG4gICAgICogdGhlIGRpcmVjdGl2ZSBmaXhlcyB0aGUgZGF0ZSByYW5nZSB0byBhIHNpbmdsZSBkYXRlIGVpdGhlciBvbiBpbnB1dCBjaGFuZ2Ugb3Igb24gYmx1clxuICAgICAqIChbc2VlIGV4YW1wbGVdKHslIHNsdWcgYXV0b2NvcnJlY3RfZGF0ZXJhbmdlICV9I3RvYy1jb25maWd1cmluZy1pbnB1dC1kaXJlY3RpdmVzKSkuXG4gICAgICpcbiAgICAgKiBCeSBkZWZhdWx0LCB0aGUgY29tcG9uZW50IGRvZXMgbm90IHBlcmZvcm0gYW55IGF1dG8tY29ycmVjdGlvbi5cbiAgICAgKi9cbiAgICBhdXRvQ29ycmVjdE9uOiBBdXRvQ29ycmVjdE9uO1xuICAgIC8qKlxuICAgICAqIFNwZWNpZmllcyB0aGUgbmF2aWdhdGlvbiBiZWhhdmlvciBvZiB0aGUgY2FsZW5kYXIgd2hlbiB0aGUgYWN0aXZlIGVuZCBpcyBjaGFuZ2VkIG9uIGlucHV0IGZvY3VzLlxuICAgICAqIFdoZW4gZW5hYmxlZCwgdGhlIGNhbGVuZGFyIG5hdmlnYXRlcyB0byB0aGUgdmFsdWUgb2YgdGhlIGZvY3VzZWQgaW5wdXQuIE90aGVyd2lzZSwgdGhlIGNhbGVuZGFyXG4gICAgICogZGlzcGxheXMgdGhlIGxhc3QgcGlja2VkIGRhdGUuXG4gICAgICpcbiAgICAgKiBCeSBkZWZhdWx0LCB0aGUgYXV0b21hdGljIG5hdmlnYXRpb24gYmVoYXZpb3Igb24gaW5wdXQgZm9jdXMgaXMgZGlzYWJsZWQuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogX0BDb21wb25lbnQoe1xuICAgICAqIHNlbGVjdG9yOiAnbXktYXBwJyxcbiAgICAgKiB0ZW1wbGF0ZTogYFxuICAgICAqICA8aDU+VG9nZ2xlIGlucHV0IGZvY3VzIHRvIHNlZSB0aGUgY2FsZW5kYXIgbmF2aWdhdGluZyBiZXR3ZWVuIHJhbmdlIGVuZHMuPC9oNT5cbiAgICAgKiAgPGtlbmRvLWRhdGVyYW5nZT5cbiAgICAgKiAgICAgIDxrZW5kby1kYXRlaW5wdXQga2VuZG9EYXRlUmFuZ2VTdGFydElucHV0IFtuYXZpZ2F0ZUNhbGVuZGFyT25Gb2N1c109XCJ0cnVlXCIgWyh2YWx1ZSldPVwic3RhcnRcIj48L2tlbmRvLWRhdGVpbnB1dD5cbiAgICAgKiAgICAgIDxrZW5kby1kYXRlaW5wdXQga2VuZG9EYXRlUmFuZ2VFbmRJbnB1dCBbbmF2aWdhdGVDYWxlbmRhck9uRm9jdXNdPVwidHJ1ZVwiIFsodmFsdWUpXT1cImVuZFwiPjwva2VuZG8tZGF0ZWlucHV0PlxuICAgICAqICA8L2tlbmRvLWRhdGVyYW5nZT5cbiAgICAgKiBgXG4gICAgICogfSlcbiAgICAgKiBleHBvcnQgY2xhc3MgQXBwQ29tcG9uZW50IHtcbiAgICAgKiAgIHB1YmxpYyBzdGFydDogRGF0ZSA9IG5ldyBEYXRlKDIwMTgsIDMsIDEwKTtcbiAgICAgKiAgIHB1YmxpYyBlbmQ6IERhdGUgPSBuZXcgRGF0ZSgyMDE4LCAxMCwgMjApO1xuICAgICAqIH1cbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBuYXZpZ2F0ZUNhbGVuZGFyT25Gb2N1czogYm9vbGVhbjtcbiAgICBjb25zdHJ1Y3RvcihyYW5nZVNlcnZpY2U6IERhdGVSYW5nZVNlcnZpY2UsIGRhdGVJbnB1dDogRGF0ZUlucHV0Q29tcG9uZW50LCBlbGVtZW50OiBFbGVtZW50UmVmLCByZW5kZXJlcjogUmVuZGVyZXIyLCB6b25lOiBOZ1pvbmUpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgZ2V0UmFuZ2UodmFsdWU6IERhdGUsIGNvcnJlY3RPbjogQXV0b0NvcnJlY3RPbik6IFNlbGVjdGlvblJhbmdlO1xuICAgIHByb3RlY3RlZCB1cGRhdGVJbnB1dFZhbHVlKHJhbmdlOiBTZWxlY3Rpb25SYW5nZSk6IHZvaWQ7XG59XG4iXX0=