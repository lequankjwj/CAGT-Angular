/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { AfterViewInit, ElementRef, EventEmitter, NgZone, OnDestroy, QueryList } from '@angular/core';
import { NzResizeObserver } from 'ng-zorro-antd/core/resize-observers';
import * as ɵngcc0 from '@angular/core';
export declare class NzTrMeasureComponent implements AfterViewInit, OnDestroy {
    private nzResizeObserver;
    private ngZone;
    listOfMeasureColumn: string[];
    readonly listOfAutoWidth: EventEmitter<number[]>;
    listOfTdElement: QueryList<ElementRef>;
    private destroy$;
    constructor(nzResizeObserver: NzResizeObserver, ngZone: NgZone);
    trackByFunc(_: number, key: string): string;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzTrMeasureComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzTrMeasureComponent, "tr[nz-table-measure-row]", never, { "listOfMeasureColumn": "listOfMeasureColumn"; }, { "listOfAutoWidth": "listOfAutoWidth"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHItbWVhc3VyZS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsidHItbWVhc3VyZS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBOZ1pvbmUsIE9uRGVzdHJveSwgUXVlcnlMaXN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOelJlc2l6ZU9ic2VydmVyIH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3Jlc2l6ZS1vYnNlcnZlcnMnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTnpUck1lYXN1cmVDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgbnpSZXNpemVPYnNlcnZlcjtcbiAgICBwcml2YXRlIG5nWm9uZTtcbiAgICBsaXN0T2ZNZWFzdXJlQ29sdW1uOiBzdHJpbmdbXTtcbiAgICByZWFkb25seSBsaXN0T2ZBdXRvV2lkdGg6IEV2ZW50RW1pdHRlcjxudW1iZXJbXT47XG4gICAgbGlzdE9mVGRFbGVtZW50OiBRdWVyeUxpc3Q8RWxlbWVudFJlZj47XG4gICAgcHJpdmF0ZSBkZXN0cm95JDtcbiAgICBjb25zdHJ1Y3RvcihuelJlc2l6ZU9ic2VydmVyOiBOelJlc2l6ZU9ic2VydmVyLCBuZ1pvbmU6IE5nWm9uZSk7XG4gICAgdHJhY2tCeUZ1bmMoXzogbnVtYmVyLCBrZXk6IHN0cmluZyk6IHN0cmluZztcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuIl19