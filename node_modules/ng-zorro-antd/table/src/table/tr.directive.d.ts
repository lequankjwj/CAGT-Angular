/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { AfterContentInit, OnDestroy, QueryList } from '@angular/core';
import { Observable } from 'rxjs';
import { NzCellFixedDirective } from '../cell/cell-fixed.directive';
import { NzThMeasureDirective } from '../cell/th-measure.directive';
import { NzTableStyleService } from '../table-style.service';
import * as ɵngcc0 from '@angular/core';
export declare class NzTrDirective implements AfterContentInit, OnDestroy {
    private nzTableStyleService;
    listOfNzThDirective: QueryList<NzThMeasureDirective>;
    listOfCellFixedDirective: QueryList<NzCellFixedDirective>;
    private destroy$;
    private listOfFixedColumns$;
    private listOfColumns$;
    listOfFixedColumnsChanges$: Observable<NzCellFixedDirective[]>;
    listOfFixedLeftColumnChanges$: Observable<NzCellFixedDirective[]>;
    listOfFixedRightColumnChanges$: Observable<NzCellFixedDirective[]>;
    listOfColumnsChanges$: Observable<NzThMeasureDirective[]>;
    isInsideTable: boolean;
    constructor(nzTableStyleService: NzTableStyleService);
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzTrDirective, [{ optional: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NzTrDirective, "tr:not([mat-row]):not([mat-header-row]):not([nz-table-measure-row]):not([nzExpand]):not([nz-table-fixed-row])", never, {}, {}, ["listOfNzThDirective", "listOfCellFixedDirective"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHIuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbInRyLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cbmltcG9ydCB7IEFmdGVyQ29udGVudEluaXQsIE9uRGVzdHJveSwgUXVlcnlMaXN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBOekNlbGxGaXhlZERpcmVjdGl2ZSB9IGZyb20gJy4uL2NlbGwvY2VsbC1maXhlZC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTnpUaE1lYXN1cmVEaXJlY3RpdmUgfSBmcm9tICcuLi9jZWxsL3RoLW1lYXN1cmUuZGlyZWN0aXZlJztcbmltcG9ydCB7IE56VGFibGVTdHlsZVNlcnZpY2UgfSBmcm9tICcuLi90YWJsZS1zdHlsZS5zZXJ2aWNlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE56VHJEaXJlY3RpdmUgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0LCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgbnpUYWJsZVN0eWxlU2VydmljZTtcbiAgICBsaXN0T2ZOelRoRGlyZWN0aXZlOiBRdWVyeUxpc3Q8TnpUaE1lYXN1cmVEaXJlY3RpdmU+O1xuICAgIGxpc3RPZkNlbGxGaXhlZERpcmVjdGl2ZTogUXVlcnlMaXN0PE56Q2VsbEZpeGVkRGlyZWN0aXZlPjtcbiAgICBwcml2YXRlIGRlc3Ryb3kkO1xuICAgIHByaXZhdGUgbGlzdE9mRml4ZWRDb2x1bW5zJDtcbiAgICBwcml2YXRlIGxpc3RPZkNvbHVtbnMkO1xuICAgIGxpc3RPZkZpeGVkQ29sdW1uc0NoYW5nZXMkOiBPYnNlcnZhYmxlPE56Q2VsbEZpeGVkRGlyZWN0aXZlW10+O1xuICAgIGxpc3RPZkZpeGVkTGVmdENvbHVtbkNoYW5nZXMkOiBPYnNlcnZhYmxlPE56Q2VsbEZpeGVkRGlyZWN0aXZlW10+O1xuICAgIGxpc3RPZkZpeGVkUmlnaHRDb2x1bW5DaGFuZ2VzJDogT2JzZXJ2YWJsZTxOekNlbGxGaXhlZERpcmVjdGl2ZVtdPjtcbiAgICBsaXN0T2ZDb2x1bW5zQ2hhbmdlcyQ6IE9ic2VydmFibGU8TnpUaE1lYXN1cmVEaXJlY3RpdmVbXT47XG4gICAgaXNJbnNpZGVUYWJsZTogYm9vbGVhbjtcbiAgICBjb25zdHJ1Y3RvcihuelRhYmxlU3R5bGVTZXJ2aWNlOiBOelRhYmxlU3R5bGVTZXJ2aWNlKTtcbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuIl19