/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { CandyDate } from 'ng-zorro-antd/core/time';
import { DateHelperService, NzCalendarI18nInterface, NzI18nService } from 'ng-zorro-antd/i18n';
import { AbstractTable } from './abstract-table';
import { DateBodyRow, DateCell, DayCell } from './interface';
import * as ɵngcc0 from '@angular/core';
export declare class DateTableComponent extends AbstractTable implements OnChanges, OnInit {
    private i18n;
    private dateHelper;
    locale: NzCalendarI18nInterface;
    selectedValue: CandyDate[];
    hoverValue: CandyDate[];
    readonly dayHover: EventEmitter<CandyDate>;
    constructor(i18n: NzI18nService, dateHelper: DateHelperService);
    ngOnChanges(changes: SimpleChanges): void;
    private isDateRealChange;
    private isSameDate;
    private changeValueFromInside;
    makeHeadRow(): DayCell[];
    private getVeryShortWeekFormat;
    makeBodyRows(): DateBodyRow[];
    getClassMap(cell: DayCell): {
        [key: string]: boolean;
    };
    trackByBodyRow(_index: number, item: DateBodyRow): string;
    trackByBodyColumn(_index: number, item: DateCell): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DateTableComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DateTableComponent, "date-table", ["dateTable"], { "selectedValue": "selectedValue"; "hoverValue": "hoverValue"; "locale": "locale"; }, { "dayHover": "dayHover"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS10YWJsZS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiZGF0ZS10YWJsZS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIE9uSW5pdCwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2FuZHlEYXRlIH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3RpbWUnO1xuaW1wb3J0IHsgRGF0ZUhlbHBlclNlcnZpY2UsIE56Q2FsZW5kYXJJMThuSW50ZXJmYWNlLCBOekkxOG5TZXJ2aWNlIH0gZnJvbSAnbmctem9ycm8tYW50ZC9pMThuJztcbmltcG9ydCB7IEFic3RyYWN0VGFibGUgfSBmcm9tICcuL2Fic3RyYWN0LXRhYmxlJztcbmltcG9ydCB7IERhdGVCb2R5Um93LCBEYXRlQ2VsbCwgRGF5Q2VsbCB9IGZyb20gJy4vaW50ZXJmYWNlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIERhdGVUYWJsZUNvbXBvbmVudCBleHRlbmRzIEFic3RyYWN0VGFibGUgaW1wbGVtZW50cyBPbkNoYW5nZXMsIE9uSW5pdCB7XG4gICAgcHJpdmF0ZSBpMThuO1xuICAgIHByaXZhdGUgZGF0ZUhlbHBlcjtcbiAgICBsb2NhbGU6IE56Q2FsZW5kYXJJMThuSW50ZXJmYWNlO1xuICAgIHNlbGVjdGVkVmFsdWU6IENhbmR5RGF0ZVtdO1xuICAgIGhvdmVyVmFsdWU6IENhbmR5RGF0ZVtdO1xuICAgIHJlYWRvbmx5IGRheUhvdmVyOiBFdmVudEVtaXR0ZXI8Q2FuZHlEYXRlPjtcbiAgICBjb25zdHJ1Y3RvcihpMThuOiBOekkxOG5TZXJ2aWNlLCBkYXRlSGVscGVyOiBEYXRlSGVscGVyU2VydmljZSk7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBpc0RhdGVSZWFsQ2hhbmdlO1xuICAgIHByaXZhdGUgaXNTYW1lRGF0ZTtcbiAgICBwcml2YXRlIGNoYW5nZVZhbHVlRnJvbUluc2lkZTtcbiAgICBtYWtlSGVhZFJvdygpOiBEYXlDZWxsW107XG4gICAgcHJpdmF0ZSBnZXRWZXJ5U2hvcnRXZWVrRm9ybWF0O1xuICAgIG1ha2VCb2R5Um93cygpOiBEYXRlQm9keVJvd1tdO1xuICAgIGdldENsYXNzTWFwKGNlbGw6IERheUNlbGwpOiB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IGJvb2xlYW47XG4gICAgfTtcbiAgICB0cmFja0J5Qm9keVJvdyhfaW5kZXg6IG51bWJlciwgaXRlbTogRGF0ZUJvZHlSb3cpOiBzdHJpbmc7XG4gICAgdHJhY2tCeUJvZHlDb2x1bW4oX2luZGV4OiBudW1iZXIsIGl0ZW06IERhdGVDZWxsKTogc3RyaW5nO1xufVxuIl19