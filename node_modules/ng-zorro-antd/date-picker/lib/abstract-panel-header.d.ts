/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { CandyDate } from 'ng-zorro-antd/core/time';
import { NzCalendarI18nInterface } from 'ng-zorro-antd/i18n';
import { NzDateMode } from '../standard-types';
import { PanelSelector } from './interface';
import * as ɵngcc0 from '@angular/core';
export declare abstract class AbstractPanelHeader implements OnInit, OnChanges {
    prefixCls: string;
    selectors: PanelSelector[];
    value: CandyDate;
    locale: NzCalendarI18nInterface;
    showSuperPreBtn: boolean;
    showSuperNextBtn: boolean;
    showPreBtn: boolean;
    showNextBtn: boolean;
    readonly panelModeChange: EventEmitter<NzDateMode>;
    readonly valueChange: EventEmitter<CandyDate>;
    abstract getSelectors(): PanelSelector[];
    superPreviousTitle(): string;
    previousTitle(): string;
    superNextTitle(): string;
    nextTitle(): string;
    superPrevious(): void;
    superNext(): void;
    previous(): void;
    next(): void;
    changeValue(value: CandyDate): void;
    changeMode(mode: NzDateMode): void;
    private render;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AbstractPanelHeader, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<AbstractPanelHeader, never, never, { "showSuperPreBtn": "showSuperPreBtn"; "showSuperNextBtn": "showSuperNextBtn"; "showPreBtn": "showPreBtn"; "showNextBtn": "showNextBtn"; "value": "value"; "locale": "locale"; }, { "panelModeChange": "panelModeChange"; "valueChange": "valueChange"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJzdHJhY3QtcGFuZWwtaGVhZGVyLmQudHMiLCJzb3VyY2VzIjpbImFic3RyYWN0LXBhbmVsLWhlYWRlci5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIE9uSW5pdCwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2FuZHlEYXRlIH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3RpbWUnO1xuaW1wb3J0IHsgTnpDYWxlbmRhckkxOG5JbnRlcmZhY2UgfSBmcm9tICduZy16b3Jyby1hbnRkL2kxOG4nO1xuaW1wb3J0IHsgTnpEYXRlTW9kZSB9IGZyb20gJy4uL3N0YW5kYXJkLXR5cGVzJztcbmltcG9ydCB7IFBhbmVsU2VsZWN0b3IgfSBmcm9tICcuL2ludGVyZmFjZSc7XG5leHBvcnQgZGVjbGFyZSBhYnN0cmFjdCBjbGFzcyBBYnN0cmFjdFBhbmVsSGVhZGVyIGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xuICAgIHByZWZpeENsczogc3RyaW5nO1xuICAgIHNlbGVjdG9yczogUGFuZWxTZWxlY3RvcltdO1xuICAgIHZhbHVlOiBDYW5keURhdGU7XG4gICAgbG9jYWxlOiBOekNhbGVuZGFySTE4bkludGVyZmFjZTtcbiAgICBzaG93U3VwZXJQcmVCdG46IGJvb2xlYW47XG4gICAgc2hvd1N1cGVyTmV4dEJ0bjogYm9vbGVhbjtcbiAgICBzaG93UHJlQnRuOiBib29sZWFuO1xuICAgIHNob3dOZXh0QnRuOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IHBhbmVsTW9kZUNoYW5nZTogRXZlbnRFbWl0dGVyPE56RGF0ZU1vZGU+O1xuICAgIHJlYWRvbmx5IHZhbHVlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8Q2FuZHlEYXRlPjtcbiAgICBhYnN0cmFjdCBnZXRTZWxlY3RvcnMoKTogUGFuZWxTZWxlY3RvcltdO1xuICAgIHN1cGVyUHJldmlvdXNUaXRsZSgpOiBzdHJpbmc7XG4gICAgcHJldmlvdXNUaXRsZSgpOiBzdHJpbmc7XG4gICAgc3VwZXJOZXh0VGl0bGUoKTogc3RyaW5nO1xuICAgIG5leHRUaXRsZSgpOiBzdHJpbmc7XG4gICAgc3VwZXJQcmV2aW91cygpOiB2b2lkO1xuICAgIHN1cGVyTmV4dCgpOiB2b2lkO1xuICAgIHByZXZpb3VzKCk6IHZvaWQ7XG4gICAgbmV4dCgpOiB2b2lkO1xuICAgIGNoYW5nZVZhbHVlKHZhbHVlOiBDYW5keURhdGUpOiB2b2lkO1xuICAgIGNoYW5nZU1vZGUobW9kZTogTnpEYXRlTW9kZSk6IHZvaWQ7XG4gICAgcHJpdmF0ZSByZW5kZXI7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbn1cbiJdfQ==