/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { AfterContentInit, ChangeDetectorRef, OnChanges, OnDestroy, OnInit, QueryList, SimpleChanges } from '@angular/core';
import { Router, RouterLink, RouterLinkWithHref } from '@angular/router';
import { BooleanInput } from 'ng-zorro-antd/core/types';
import { Subject } from 'rxjs';
import { MenuService } from './menu.service';
import { NzSubmenuService } from './submenu.service';
import * as ɵngcc0 from '@angular/core';
export declare class NzMenuItemDirective implements OnInit, OnChanges, OnDestroy, AfterContentInit {
    private nzMenuService;
    private cdr;
    private nzSubmenuService;
    isMenuInsideDropDown: boolean;
    private routerLink?;
    private routerLinkWithHref?;
    private router?;
    static ngAcceptInputType_nzDisabled: BooleanInput;
    static ngAcceptInputType_nzSelected: BooleanInput;
    static ngAcceptInputType_nzMatchRouterExact: BooleanInput;
    static ngAcceptInputType_nzMatchRouter: BooleanInput;
    private destroy$;
    level: number;
    selected$: Subject<boolean>;
    inlinePaddingLeft: number | null;
    nzPaddingLeft?: number;
    nzDisabled: boolean;
    nzSelected: boolean;
    nzMatchRouterExact: boolean;
    nzMatchRouter: boolean;
    listOfRouterLink: QueryList<RouterLink>;
    listOfRouterLinkWithHref: QueryList<RouterLinkWithHref>;
    /** clear all item selected status except this */
    clickMenuItem(e: MouseEvent): void;
    setSelectedState(value: boolean): void;
    private updateRouterActive;
    private hasActiveLinks;
    private isLinkActive;
    constructor(nzMenuService: MenuService, cdr: ChangeDetectorRef, nzSubmenuService: NzSubmenuService, isMenuInsideDropDown: boolean, routerLink?: RouterLink | undefined, routerLinkWithHref?: RouterLinkWithHref | undefined, router?: Router | undefined);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzMenuItemDirective, [null, null, { optional: true; }, null, { optional: true; }, { optional: true; }, { optional: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NzMenuItemDirective, "[nz-menu-item]", ["nzMenuItem"], { "nzDisabled": "nzDisabled"; "nzSelected": "nzSelected"; "nzMatchRouterExact": "nzMatchRouterExact"; "nzMatchRouter": "nzMatchRouter"; "nzPaddingLeft": "nzPaddingLeft"; }, {}, ["listOfRouterLink", "listOfRouterLinkWithHref"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS1pdGVtLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJtZW51LWl0ZW0uZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cbmltcG9ydCB7IEFmdGVyQ29udGVudEluaXQsIENoYW5nZURldGVjdG9yUmVmLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgT25Jbml0LCBRdWVyeUxpc3QsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJvdXRlciwgUm91dGVyTGluaywgUm91dGVyTGlua1dpdGhIcmVmIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IEJvb2xlYW5JbnB1dCB9IGZyb20gJ25nLXpvcnJvLWFudGQvY29yZS90eXBlcyc7XG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBNZW51U2VydmljZSB9IGZyb20gJy4vbWVudS5zZXJ2aWNlJztcbmltcG9ydCB7IE56U3VibWVudVNlcnZpY2UgfSBmcm9tICcuL3N1Ym1lbnUuc2VydmljZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOek1lbnVJdGVtRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgQWZ0ZXJDb250ZW50SW5pdCB7XG4gICAgcHJpdmF0ZSBuek1lbnVTZXJ2aWNlO1xuICAgIHByaXZhdGUgY2RyO1xuICAgIHByaXZhdGUgbnpTdWJtZW51U2VydmljZTtcbiAgICBpc01lbnVJbnNpZGVEcm9wRG93bjogYm9vbGVhbjtcbiAgICBwcml2YXRlIHJvdXRlckxpbms/O1xuICAgIHByaXZhdGUgcm91dGVyTGlua1dpdGhIcmVmPztcbiAgICBwcml2YXRlIHJvdXRlcj87XG4gICAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX256RGlzYWJsZWQ6IEJvb2xlYW5JbnB1dDtcbiAgICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfbnpTZWxlY3RlZDogQm9vbGVhbklucHV0O1xuICAgIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9uek1hdGNoUm91dGVyRXhhY3Q6IEJvb2xlYW5JbnB1dDtcbiAgICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfbnpNYXRjaFJvdXRlcjogQm9vbGVhbklucHV0O1xuICAgIHByaXZhdGUgZGVzdHJveSQ7XG4gICAgbGV2ZWw6IG51bWJlcjtcbiAgICBzZWxlY3RlZCQ6IFN1YmplY3Q8Ym9vbGVhbj47XG4gICAgaW5saW5lUGFkZGluZ0xlZnQ6IG51bWJlciB8IG51bGw7XG4gICAgbnpQYWRkaW5nTGVmdD86IG51bWJlcjtcbiAgICBuekRpc2FibGVkOiBib29sZWFuO1xuICAgIG56U2VsZWN0ZWQ6IGJvb2xlYW47XG4gICAgbnpNYXRjaFJvdXRlckV4YWN0OiBib29sZWFuO1xuICAgIG56TWF0Y2hSb3V0ZXI6IGJvb2xlYW47XG4gICAgbGlzdE9mUm91dGVyTGluazogUXVlcnlMaXN0PFJvdXRlckxpbms+O1xuICAgIGxpc3RPZlJvdXRlckxpbmtXaXRoSHJlZjogUXVlcnlMaXN0PFJvdXRlckxpbmtXaXRoSHJlZj47XG4gICAgLyoqIGNsZWFyIGFsbCBpdGVtIHNlbGVjdGVkIHN0YXR1cyBleGNlcHQgdGhpcyAqL1xuICAgIGNsaWNrTWVudUl0ZW0oZTogTW91c2VFdmVudCk6IHZvaWQ7XG4gICAgc2V0U2VsZWN0ZWRTdGF0ZSh2YWx1ZTogYm9vbGVhbik6IHZvaWQ7XG4gICAgcHJpdmF0ZSB1cGRhdGVSb3V0ZXJBY3RpdmU7XG4gICAgcHJpdmF0ZSBoYXNBY3RpdmVMaW5rcztcbiAgICBwcml2YXRlIGlzTGlua0FjdGl2ZTtcbiAgICBjb25zdHJ1Y3Rvcihuek1lbnVTZXJ2aWNlOiBNZW51U2VydmljZSwgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZiwgbnpTdWJtZW51U2VydmljZTogTnpTdWJtZW51U2VydmljZSwgaXNNZW51SW5zaWRlRHJvcERvd246IGJvb2xlYW4sIHJvdXRlckxpbms/OiBSb3V0ZXJMaW5rIHwgdW5kZWZpbmVkLCByb3V0ZXJMaW5rV2l0aEhyZWY/OiBSb3V0ZXJMaW5rV2l0aEhyZWYgfCB1bmRlZmluZWQsIHJvdXRlcj86IFJvdXRlciB8IHVuZGVmaW5lZCk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuIl19