/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { Platform } from '@angular/cdk/platform';
import { AfterViewInit, ChangeDetectorRef, EventEmitter, NgZone, OnChanges, OnDestroy, Renderer2, SimpleChanges } from '@angular/core';
import { NzConfigService } from 'ng-zorro-antd/core/config';
import { NzScrollService } from 'ng-zorro-antd/core/services';
import { BooleanInput, NgStyleInterface, NumberInput, NzSafeAny } from 'ng-zorro-antd/core/types';
import { NzAnchorLinkComponent } from './anchor-link.component';
import * as ɵngcc0 from '@angular/core';
export declare class NzAnchorComponent implements OnDestroy, AfterViewInit, OnChanges {
    private doc;
    nzConfigService: NzConfigService;
    private scrollSrv;
    private cdr;
    private platform;
    private zone;
    private renderer;
    static ngAcceptInputType_nzAffix: BooleanInput;
    static ngAcceptInputType_nzShowInkInFixed: BooleanInput;
    static ngAcceptInputType_nzBounds: NumberInput;
    static ngAcceptInputType_nzOffsetTop: NumberInput;
    private ink;
    nzAffix: boolean;
    nzShowInkInFixed: boolean;
    nzBounds: number;
    nzOffsetTop?: number;
    nzContainer?: string | HTMLElement;
    nzTarget: string | HTMLElement;
    readonly nzClick: EventEmitter<string>;
    readonly nzScroll: EventEmitter<NzAnchorLinkComponent>;
    visible: boolean;
    wrapperStyle: NgStyleInterface;
    container?: HTMLElement | Window;
    private links;
    private animating;
    private destroy$;
    private handleScrollTimeoutID;
    constructor(doc: NzSafeAny, nzConfigService: NzConfigService, scrollSrv: NzScrollService, cdr: ChangeDetectorRef, platform: Platform, zone: NgZone, renderer: Renderer2);
    registerLink(link: NzAnchorLinkComponent): void;
    unregisterLink(link: NzAnchorLinkComponent): void;
    private getContainer;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    private registerScrollEvent;
    handleScroll(): void;
    private clearActive;
    private handleActive;
    private setVisible;
    handleScrollTo(linkComp: NzAnchorLinkComponent): void;
    ngOnChanges(changes: SimpleChanges): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzAnchorComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzAnchorComponent, "nz-anchor", ["nzAnchor"], { "nzAffix": "nzAffix"; "nzShowInkInFixed": "nzShowInkInFixed"; "nzBounds": "nzBounds"; "nzOffsetTop": "nzOffsetTop"; "nzTarget": "nzTarget"; "nzContainer": "nzContainer"; }, { "nzClick": "nzClick"; "nzScroll": "nzScroll"; }, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5jaG9yLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJhbmNob3IuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuaW1wb3J0IHsgUGxhdGZvcm0gfSBmcm9tICdAYW5ndWxhci9jZGsvcGxhdGZvcm0nO1xuaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgQ2hhbmdlRGV0ZWN0b3JSZWYsIEV2ZW50RW1pdHRlciwgTmdab25lLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgUmVuZGVyZXIyLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOekNvbmZpZ1NlcnZpY2UgfSBmcm9tICduZy16b3Jyby1hbnRkL2NvcmUvY29uZmlnJztcbmltcG9ydCB7IE56U2Nyb2xsU2VydmljZSB9IGZyb20gJ25nLXpvcnJvLWFudGQvY29yZS9zZXJ2aWNlcyc7XG5pbXBvcnQgeyBCb29sZWFuSW5wdXQsIE5nU3R5bGVJbnRlcmZhY2UsIE51bWJlcklucHV0LCBOelNhZmVBbnkgfSBmcm9tICduZy16b3Jyby1hbnRkL2NvcmUvdHlwZXMnO1xuaW1wb3J0IHsgTnpBbmNob3JMaW5rQ29tcG9uZW50IH0gZnJvbSAnLi9hbmNob3ItbGluay5jb21wb25lbnQnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTnpBbmNob3JDb21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3ksIEFmdGVyVmlld0luaXQsIE9uQ2hhbmdlcyB7XG4gICAgcHJpdmF0ZSBkb2M7XG4gICAgbnpDb25maWdTZXJ2aWNlOiBOekNvbmZpZ1NlcnZpY2U7XG4gICAgcHJpdmF0ZSBzY3JvbGxTcnY7XG4gICAgcHJpdmF0ZSBjZHI7XG4gICAgcHJpdmF0ZSBwbGF0Zm9ybTtcbiAgICBwcml2YXRlIHpvbmU7XG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcbiAgICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfbnpBZmZpeDogQm9vbGVhbklucHV0O1xuICAgIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9uelNob3dJbmtJbkZpeGVkOiBCb29sZWFuSW5wdXQ7XG4gICAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX256Qm91bmRzOiBOdW1iZXJJbnB1dDtcbiAgICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfbnpPZmZzZXRUb3A6IE51bWJlcklucHV0O1xuICAgIHByaXZhdGUgaW5rO1xuICAgIG56QWZmaXg6IGJvb2xlYW47XG4gICAgbnpTaG93SW5rSW5GaXhlZDogYm9vbGVhbjtcbiAgICBuekJvdW5kczogbnVtYmVyO1xuICAgIG56T2Zmc2V0VG9wPzogbnVtYmVyO1xuICAgIG56Q29udGFpbmVyPzogc3RyaW5nIHwgSFRNTEVsZW1lbnQ7XG4gICAgbnpUYXJnZXQ6IHN0cmluZyB8IEhUTUxFbGVtZW50O1xuICAgIHJlYWRvbmx5IG56Q2xpY2s6IEV2ZW50RW1pdHRlcjxzdHJpbmc+O1xuICAgIHJlYWRvbmx5IG56U2Nyb2xsOiBFdmVudEVtaXR0ZXI8TnpBbmNob3JMaW5rQ29tcG9uZW50PjtcbiAgICB2aXNpYmxlOiBib29sZWFuO1xuICAgIHdyYXBwZXJTdHlsZTogTmdTdHlsZUludGVyZmFjZTtcbiAgICBjb250YWluZXI/OiBIVE1MRWxlbWVudCB8IFdpbmRvdztcbiAgICBwcml2YXRlIGxpbmtzO1xuICAgIHByaXZhdGUgYW5pbWF0aW5nO1xuICAgIHByaXZhdGUgZGVzdHJveSQ7XG4gICAgcHJpdmF0ZSBoYW5kbGVTY3JvbGxUaW1lb3V0SUQ7XG4gICAgY29uc3RydWN0b3IoZG9jOiBOelNhZmVBbnksIG56Q29uZmlnU2VydmljZTogTnpDb25maWdTZXJ2aWNlLCBzY3JvbGxTcnY6IE56U2Nyb2xsU2VydmljZSwgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZiwgcGxhdGZvcm06IFBsYXRmb3JtLCB6b25lOiBOZ1pvbmUsIHJlbmRlcmVyOiBSZW5kZXJlcjIpO1xuICAgIHJlZ2lzdGVyTGluayhsaW5rOiBOekFuY2hvckxpbmtDb21wb25lbnQpOiB2b2lkO1xuICAgIHVucmVnaXN0ZXJMaW5rKGxpbms6IE56QW5jaG9yTGlua0NvbXBvbmVudCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBnZXRDb250YWluZXI7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBwcml2YXRlIHJlZ2lzdGVyU2Nyb2xsRXZlbnQ7XG4gICAgaGFuZGxlU2Nyb2xsKCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBjbGVhckFjdGl2ZTtcbiAgICBwcml2YXRlIGhhbmRsZUFjdGl2ZTtcbiAgICBwcml2YXRlIHNldFZpc2libGU7XG4gICAgaGFuZGxlU2Nyb2xsVG8obGlua0NvbXA6IE56QW5jaG9yTGlua0NvbXBvbmVudCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG59XG4iXX0=