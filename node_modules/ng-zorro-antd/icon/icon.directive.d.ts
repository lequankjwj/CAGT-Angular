/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { AfterContentChecked, ElementRef, OnChanges, OnInit, Renderer2, SimpleChanges } from '@angular/core';
import { IconDirective, ThemeType } from '@ant-design/icons-angular';
import { NzIconPatchService, NzIconService } from './icon.service';
import * as ɵngcc0 from '@angular/core';
export declare class NzIconDirective extends IconDirective implements OnInit, OnChanges, AfterContentChecked {
    iconService: NzIconService;
    renderer: Renderer2;
    cacheClassName: string | null;
    set nzSpin(value: boolean);
    nzRotate: number;
    set nzType(value: string);
    set nzTheme(value: ThemeType);
    set nzTwotoneColor(value: string);
    set nzIconfont(value: string);
    hostClass?: string;
    private readonly el;
    private iconfont?;
    private spin;
    constructor(elementRef: ElementRef, iconService: NzIconService, renderer: Renderer2, iconPatch: NzIconPatchService);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnInit(): void;
    /**
     * If custom content is provided, try to normalize SVG elements.
     */
    ngAfterContentChecked(): void;
    /**
     * Replacement of `changeIcon` for more modifications.
     */
    private changeIcon2;
    private handleSpin;
    private handleRotate;
    private setClassName;
    private setSVGData;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzIconDirective, [null, null, null, { optional: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NzIconDirective, "[nz-icon]", ["nzIcon"], { "nzRotate": "nzRotate"; "nzSpin": "nzSpin"; "nzType": "nzType"; "nzTheme": "nzTheme"; "nzTwotoneColor": "nzTwotoneColor"; "nzIconfont": "nzIconfont"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsiaWNvbi5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5pbXBvcnQgeyBBZnRlckNvbnRlbnRDaGVja2VkLCBFbGVtZW50UmVmLCBPbkNoYW5nZXMsIE9uSW5pdCwgUmVuZGVyZXIyLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJY29uRGlyZWN0aXZlLCBUaGVtZVR5cGUgfSBmcm9tICdAYW50LWRlc2lnbi9pY29ucy1hbmd1bGFyJztcbmltcG9ydCB7IE56SWNvblBhdGNoU2VydmljZSwgTnpJY29uU2VydmljZSB9IGZyb20gJy4vaWNvbi5zZXJ2aWNlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE56SWNvbkRpcmVjdGl2ZSBleHRlbmRzIEljb25EaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcywgQWZ0ZXJDb250ZW50Q2hlY2tlZCB7XG4gICAgaWNvblNlcnZpY2U6IE56SWNvblNlcnZpY2U7XG4gICAgcmVuZGVyZXI6IFJlbmRlcmVyMjtcbiAgICBjYWNoZUNsYXNzTmFtZTogc3RyaW5nIHwgbnVsbDtcbiAgICBzZXQgbnpTcGluKHZhbHVlOiBib29sZWFuKTtcbiAgICBuelJvdGF0ZTogbnVtYmVyO1xuICAgIHNldCBuelR5cGUodmFsdWU6IHN0cmluZyk7XG4gICAgc2V0IG56VGhlbWUodmFsdWU6IFRoZW1lVHlwZSk7XG4gICAgc2V0IG56VHdvdG9uZUNvbG9yKHZhbHVlOiBzdHJpbmcpO1xuICAgIHNldCBuekljb25mb250KHZhbHVlOiBzdHJpbmcpO1xuICAgIGhvc3RDbGFzcz86IHN0cmluZztcbiAgICBwcml2YXRlIHJlYWRvbmx5IGVsO1xuICAgIHByaXZhdGUgaWNvbmZvbnQ/O1xuICAgIHByaXZhdGUgc3BpbjtcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50UmVmOiBFbGVtZW50UmVmLCBpY29uU2VydmljZTogTnpJY29uU2VydmljZSwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgaWNvblBhdGNoOiBOekljb25QYXRjaFNlcnZpY2UpO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogSWYgY3VzdG9tIGNvbnRlbnQgaXMgcHJvdmlkZWQsIHRyeSB0byBub3JtYWxpemUgU1ZHIGVsZW1lbnRzLlxuICAgICAqL1xuICAgIG5nQWZ0ZXJDb250ZW50Q2hlY2tlZCgpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIFJlcGxhY2VtZW50IG9mIGBjaGFuZ2VJY29uYCBmb3IgbW9yZSBtb2RpZmljYXRpb25zLlxuICAgICAqL1xuICAgIHByaXZhdGUgY2hhbmdlSWNvbjI7XG4gICAgcHJpdmF0ZSBoYW5kbGVTcGluO1xuICAgIHByaXZhdGUgaGFuZGxlUm90YXRlO1xuICAgIHByaXZhdGUgc2V0Q2xhc3NOYW1lO1xuICAgIHByaXZhdGUgc2V0U1ZHRGF0YTtcbn1cbiJdfQ==