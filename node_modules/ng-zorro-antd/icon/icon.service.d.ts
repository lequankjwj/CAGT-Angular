/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { HttpBackend } from '@angular/common/http';
import { InjectionToken, RendererFactory2 } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { IconDefinition, IconService } from '@ant-design/icons-angular';
import { NzConfigService } from 'ng-zorro-antd/core/config';
import { NzSafeAny } from 'ng-zorro-antd/core/types';
import { Subject } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export interface NzIconfontOption {
    scriptUrl: string;
}
export declare const NZ_ICONS: InjectionToken<unknown>;
export declare const NZ_ICON_DEFAULT_TWOTONE_COLOR: InjectionToken<unknown>;
export declare const DEFAULT_TWOTONE_COLOR = "#1890ff";
/**
 * It should be a global singleton, otherwise registered icons could not be found.
 */
export declare class NzIconService extends IconService {
    protected nzConfigService: NzConfigService;
    configUpdated$: Subject<void>;
    private iconfontCache;
    normalizeSvgElement(svg: SVGElement): void;
    fetchFromIconfont(opt: NzIconfontOption): void;
    createIconfontIcon(type: string): SVGElement;
    constructor(rendererFactory: RendererFactory2, sanitizer: DomSanitizer, nzConfigService: NzConfigService, handler: HttpBackend, _document: NzSafeAny, icons?: IconDefinition[]);
    private onConfigChange;
    private configDefaultTheme;
    private configDefaultTwotoneColor;
    private getConfig;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzIconService, [null, null, null, { optional: true; }, { optional: true; }, { optional: true; }]>;
}
export declare const NZ_ICONS_PATCH: InjectionToken<unknown>;
export declare class NzIconPatchService {
    private extraIcons;
    private rootIconService;
    patched: boolean;
    constructor(extraIcons: IconDefinition[], rootIconService: NzIconService);
    doPatch(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzIconPatchService, [{ self: true; }, null]>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NzIconPatchService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbImljb24uc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cbmltcG9ydCB7IEh0dHBCYWNrZW5kIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgSW5qZWN0aW9uVG9rZW4sIFJlbmRlcmVyRmFjdG9yeTIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERvbVNhbml0aXplciB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuaW1wb3J0IHsgSWNvbkRlZmluaXRpb24sIEljb25TZXJ2aWNlIH0gZnJvbSAnQGFudC1kZXNpZ24vaWNvbnMtYW5ndWxhcic7XG5pbXBvcnQgeyBOekNvbmZpZ1NlcnZpY2UgfSBmcm9tICduZy16b3Jyby1hbnRkL2NvcmUvY29uZmlnJztcbmltcG9ydCB7IE56U2FmZUFueSB9IGZyb20gJ25nLXpvcnJvLWFudGQvY29yZS90eXBlcyc7XG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5leHBvcnQgaW50ZXJmYWNlIE56SWNvbmZvbnRPcHRpb24ge1xuICAgIHNjcmlwdFVybDogc3RyaW5nO1xufVxuZXhwb3J0IGRlY2xhcmUgY29uc3QgTlpfSUNPTlM6IEluamVjdGlvblRva2VuPHVua25vd24+O1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgTlpfSUNPTl9ERUZBVUxUX1RXT1RPTkVfQ09MT1I6IEluamVjdGlvblRva2VuPHVua25vd24+O1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgREVGQVVMVF9UV09UT05FX0NPTE9SID0gXCIjMTg5MGZmXCI7XG4vKipcbiAqIEl0IHNob3VsZCBiZSBhIGdsb2JhbCBzaW5nbGV0b24sIG90aGVyd2lzZSByZWdpc3RlcmVkIGljb25zIGNvdWxkIG5vdCBiZSBmb3VuZC5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTnpJY29uU2VydmljZSBleHRlbmRzIEljb25TZXJ2aWNlIHtcbiAgICBwcm90ZWN0ZWQgbnpDb25maWdTZXJ2aWNlOiBOekNvbmZpZ1NlcnZpY2U7XG4gICAgY29uZmlnVXBkYXRlZCQ6IFN1YmplY3Q8dm9pZD47XG4gICAgcHJpdmF0ZSBpY29uZm9udENhY2hlO1xuICAgIG5vcm1hbGl6ZVN2Z0VsZW1lbnQoc3ZnOiBTVkdFbGVtZW50KTogdm9pZDtcbiAgICBmZXRjaEZyb21JY29uZm9udChvcHQ6IE56SWNvbmZvbnRPcHRpb24pOiB2b2lkO1xuICAgIGNyZWF0ZUljb25mb250SWNvbih0eXBlOiBzdHJpbmcpOiBTVkdFbGVtZW50O1xuICAgIGNvbnN0cnVjdG9yKHJlbmRlcmVyRmFjdG9yeTogUmVuZGVyZXJGYWN0b3J5Miwgc2FuaXRpemVyOiBEb21TYW5pdGl6ZXIsIG56Q29uZmlnU2VydmljZTogTnpDb25maWdTZXJ2aWNlLCBoYW5kbGVyOiBIdHRwQmFja2VuZCwgX2RvY3VtZW50OiBOelNhZmVBbnksIGljb25zPzogSWNvbkRlZmluaXRpb25bXSk7XG4gICAgcHJpdmF0ZSBvbkNvbmZpZ0NoYW5nZTtcbiAgICBwcml2YXRlIGNvbmZpZ0RlZmF1bHRUaGVtZTtcbiAgICBwcml2YXRlIGNvbmZpZ0RlZmF1bHRUd290b25lQ29sb3I7XG4gICAgcHJpdmF0ZSBnZXRDb25maWc7XG59XG5leHBvcnQgZGVjbGFyZSBjb25zdCBOWl9JQ09OU19QQVRDSDogSW5qZWN0aW9uVG9rZW48dW5rbm93bj47XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOekljb25QYXRjaFNlcnZpY2Uge1xuICAgIHByaXZhdGUgZXh0cmFJY29ucztcbiAgICBwcml2YXRlIHJvb3RJY29uU2VydmljZTtcbiAgICBwYXRjaGVkOiBib29sZWFuO1xuICAgIGNvbnN0cnVjdG9yKGV4dHJhSWNvbnM6IEljb25EZWZpbml0aW9uW10sIHJvb3RJY29uU2VydmljZTogTnpJY29uU2VydmljZSk7XG4gICAgZG9QYXRjaCgpOiB2b2lkO1xufVxuIl19