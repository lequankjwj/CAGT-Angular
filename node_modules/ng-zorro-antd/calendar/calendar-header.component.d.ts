/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { EventEmitter, OnInit } from '@angular/core';
import { CandyDate } from 'ng-zorro-antd/core/time';
import { DateHelperService, NzI18nService as I18n } from 'ng-zorro-antd/i18n';
import { NzSelectSizeType } from 'ng-zorro-antd/select';
import * as ɵngcc0 from '@angular/core';
export declare class NzCalendarHeaderComponent implements OnInit {
    private i18n;
    private dateHelper;
    mode: 'month' | 'year';
    fullscreen: boolean;
    activeDate: CandyDate;
    readonly modeChange: EventEmitter<'month' | 'year'>;
    readonly yearChange: EventEmitter<number>;
    readonly monthChange: EventEmitter<number>;
    yearOffset: number;
    yearTotal: number;
    years: Array<{
        label: string;
        value: number;
    }>;
    months: Array<{
        label: string;
        value: number;
    }>;
    get activeYear(): number;
    get activeMonth(): number;
    get size(): NzSelectSizeType;
    get yearTypeText(): string;
    get monthTypeText(): string;
    constructor(i18n: I18n, dateHelper: DateHelperService);
    ngOnInit(): void;
    updateYear(year: number): void;
    private setUpYears;
    private setUpMonths;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzCalendarHeaderComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzCalendarHeaderComponent, "nz-calendar-header", ["nzCalendarHeader"], { "mode": "mode"; "fullscreen": "fullscreen"; "activeDate": "activeDate"; }, { "modeChange": "modeChange"; "yearChange": "yearChange"; "monthChange": "monthChange"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItaGVhZGVyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJjYWxlbmRhci1oZWFkZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5pbXBvcnQgeyBFdmVudEVtaXR0ZXIsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2FuZHlEYXRlIH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3RpbWUnO1xuaW1wb3J0IHsgRGF0ZUhlbHBlclNlcnZpY2UsIE56STE4blNlcnZpY2UgYXMgSTE4biB9IGZyb20gJ25nLXpvcnJvLWFudGQvaTE4bic7XG5pbXBvcnQgeyBOelNlbGVjdFNpemVUeXBlIH0gZnJvbSAnbmctem9ycm8tYW50ZC9zZWxlY3QnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTnpDYWxlbmRhckhlYWRlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgcHJpdmF0ZSBpMThuO1xuICAgIHByaXZhdGUgZGF0ZUhlbHBlcjtcbiAgICBtb2RlOiAnbW9udGgnIHwgJ3llYXInO1xuICAgIGZ1bGxzY3JlZW46IGJvb2xlYW47XG4gICAgYWN0aXZlRGF0ZTogQ2FuZHlEYXRlO1xuICAgIHJlYWRvbmx5IG1vZGVDaGFuZ2U6IEV2ZW50RW1pdHRlcjwnbW9udGgnIHwgJ3llYXInPjtcbiAgICByZWFkb25seSB5ZWFyQ2hhbmdlOiBFdmVudEVtaXR0ZXI8bnVtYmVyPjtcbiAgICByZWFkb25seSBtb250aENoYW5nZTogRXZlbnRFbWl0dGVyPG51bWJlcj47XG4gICAgeWVhck9mZnNldDogbnVtYmVyO1xuICAgIHllYXJUb3RhbDogbnVtYmVyO1xuICAgIHllYXJzOiBBcnJheTx7XG4gICAgICAgIGxhYmVsOiBzdHJpbmc7XG4gICAgICAgIHZhbHVlOiBudW1iZXI7XG4gICAgfT47XG4gICAgbW9udGhzOiBBcnJheTx7XG4gICAgICAgIGxhYmVsOiBzdHJpbmc7XG4gICAgICAgIHZhbHVlOiBudW1iZXI7XG4gICAgfT47XG4gICAgZ2V0IGFjdGl2ZVllYXIoKTogbnVtYmVyO1xuICAgIGdldCBhY3RpdmVNb250aCgpOiBudW1iZXI7XG4gICAgZ2V0IHNpemUoKTogTnpTZWxlY3RTaXplVHlwZTtcbiAgICBnZXQgeWVhclR5cGVUZXh0KCk6IHN0cmluZztcbiAgICBnZXQgbW9udGhUeXBlVGV4dCgpOiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3IoaTE4bjogSTE4biwgZGF0ZUhlbHBlcjogRGF0ZUhlbHBlclNlcnZpY2UpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgdXBkYXRlWWVhcih5ZWFyOiBudW1iZXIpOiB2b2lkO1xuICAgIHByaXZhdGUgc2V0VXBZZWFycztcbiAgICBwcml2YXRlIHNldFVwTW9udGhzO1xufVxuIl19