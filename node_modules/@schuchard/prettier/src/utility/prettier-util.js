"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class PrettierSettings {
    constructor() {
        this.printWidth = 80;
        this.tabWidth = 2;
        this.useTabs = false;
        this.semi = true;
        this.singleQuote = false;
        this.trailingComma = 'none';
        this.bracketSpacing = true;
        this.jsxBracketSameLine = false;
        this.arrowParens = 'avoid';
        this.rangeStart = 0;
        this.rangeEnd = Infinity;
        // parser: ''; // No default
        // filepath: ''; // No default
        this.requirePragma = false;
        this.insertPragma = false;
        this.proseWrap = 'preserve';
        this.lintStaged = true;
        this.formatAllAngularFiles = true;
    }
}
exports.PrettierSettings = PrettierSettings;
function getDefaultOptions(context, cliOptions, defaultSettings) {
    return Object.entries(defaultSettings).reduce((acc, [key, defaultValue]) => {
        const cliValue = cliOptions[key];
        if (cliValue !== undefined) {
            // modify default option with cli value
            context.logger.debug(`changing ${key} default to: ${cliValue}`);
            acc[key] = wrapAsString(key, cliValue);
        }
        else {
            // use default option
            acc[key] = wrapAsString(key, defaultValue);
        }
        return acc;
    }, {});
}
exports.getDefaultOptions = getDefaultOptions;
function wrapAsString(key, value) {
    const hasStringValue = ['trailingComma', 'arrowParens', 'parser', 'filepath', 'proseWrap'].some((value) => key == value);
    return hasStringValue ? `"${value}"` : value;
}
//# sourceMappingURL=prettier-util.js.map